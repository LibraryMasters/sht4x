
sht40x_Temp_humidity.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006dc4  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00006dc4  00006dc4  00016dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000844  20000000  00006dcc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000184  20000844  00007610  00020844  2**2
                  ALLOC
  4 .stack        00002000  200009c8  00007794  00020844  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00020844  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002086c  2**0
                  CONTENTS, READONLY
  7 .debug_info   00023a8c  00000000  00000000  000208c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003009  00000000  00000000  00044351  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000c12b  00000000  00000000  0004735a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000b38  00000000  00000000  00053485  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000ba8  00000000  00000000  00053fbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019066  00000000  00000000  00054b65  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e9e7  00000000  00000000  0006dbcb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00086531  00000000  00000000  0007c5b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000024e0  00000000  00000000  00102ae4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	c8 29 00 20 25 01 00 00 21 01 00 00 21 01 00 00     .). %...!...!...
	...
      2c:	21 01 00 00 00 00 00 00 00 00 00 00 21 01 00 00     !...........!...
      3c:	21 01 00 00 21 01 00 00 21 01 00 00 21 01 00 00     !...!...!...!...
      4c:	21 01 00 00 21 01 00 00 21 01 00 00 21 01 00 00     !...!...!...!...
      5c:	21 01 00 00 21 01 00 00 21 01 00 00 21 01 00 00     !...!...!...!...
      6c:	21 01 00 00 21 01 00 00 21 01 00 00 95 12 00 00     !...!...!.......
      7c:	21 01 00 00 21 01 00 00 21 01 00 00 21 01 00 00     !...!...!...!...
      8c:	21 01 00 00 21 01 00 00 00 00 00 00 00 00 00 00     !...!...........
      9c:	21 01 00 00 21 01 00 00 21 01 00 00 21 01 00 00     !...!...!...!...
      ac:	21 01 00 00 00 00 00 00                             !.......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000844 	.word	0x20000844
      d4:	00000000 	.word	0x00000000
      d8:	00006dcc 	.word	0x00006dcc

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000848 	.word	0x20000848
     108:	00006dcc 	.word	0x00006dcc
     10c:	00006dcc 	.word	0x00006dcc
     110:	00000000 	.word	0x00000000

00000114 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     114:	b510      	push	{r4, lr}
	system_init();
     116:	4b01      	ldr	r3, [pc, #4]	; (11c <atmel_start_init+0x8>)
     118:	4798      	blx	r3
}
     11a:	bd10      	pop	{r4, pc}
     11c:	0000033d 	.word	0x0000033d

00000120 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     120:	e7fe      	b.n	120 <Dummy_Handler>
	...

00000124 <Reset_Handler>:
{
     124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     126:	4a23      	ldr	r2, [pc, #140]	; (1b4 <Reset_Handler+0x90>)
     128:	4b23      	ldr	r3, [pc, #140]	; (1b8 <Reset_Handler+0x94>)
     12a:	429a      	cmp	r2, r3
     12c:	d009      	beq.n	142 <Reset_Handler+0x1e>
     12e:	4b22      	ldr	r3, [pc, #136]	; (1b8 <Reset_Handler+0x94>)
     130:	4a20      	ldr	r2, [pc, #128]	; (1b4 <Reset_Handler+0x90>)
     132:	e003      	b.n	13c <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     134:	6811      	ldr	r1, [r2, #0]
     136:	6019      	str	r1, [r3, #0]
     138:	3304      	adds	r3, #4
     13a:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     13c:	491f      	ldr	r1, [pc, #124]	; (1bc <Reset_Handler+0x98>)
     13e:	428b      	cmp	r3, r1
     140:	d3f8      	bcc.n	134 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     142:	4b1f      	ldr	r3, [pc, #124]	; (1c0 <Reset_Handler+0x9c>)
     144:	e002      	b.n	14c <Reset_Handler+0x28>
                *pDest++ = 0;
     146:	2200      	movs	r2, #0
     148:	601a      	str	r2, [r3, #0]
     14a:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     14c:	4a1d      	ldr	r2, [pc, #116]	; (1c4 <Reset_Handler+0xa0>)
     14e:	4293      	cmp	r3, r2
     150:	d3f9      	bcc.n	146 <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     152:	4a1d      	ldr	r2, [pc, #116]	; (1c8 <Reset_Handler+0xa4>)
     154:	21ff      	movs	r1, #255	; 0xff
     156:	4b1d      	ldr	r3, [pc, #116]	; (1cc <Reset_Handler+0xa8>)
     158:	438b      	bics	r3, r1
     15a:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     15c:	39fd      	subs	r1, #253	; 0xfd
     15e:	2390      	movs	r3, #144	; 0x90
     160:	005b      	lsls	r3, r3, #1
     162:	4a1b      	ldr	r2, [pc, #108]	; (1d0 <Reset_Handler+0xac>)
     164:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     166:	4a1b      	ldr	r2, [pc, #108]	; (1d4 <Reset_Handler+0xb0>)
     168:	78d3      	ldrb	r3, [r2, #3]
     16a:	2503      	movs	r5, #3
     16c:	43ab      	bics	r3, r5
     16e:	2402      	movs	r4, #2
     170:	4323      	orrs	r3, r4
     172:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     174:	78d3      	ldrb	r3, [r2, #3]
     176:	270c      	movs	r7, #12
     178:	43bb      	bics	r3, r7
     17a:	2608      	movs	r6, #8
     17c:	4333      	orrs	r3, r6
     17e:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     180:	4b15      	ldr	r3, [pc, #84]	; (1d8 <Reset_Handler+0xb4>)
     182:	7b98      	ldrb	r0, [r3, #14]
     184:	2230      	movs	r2, #48	; 0x30
     186:	4390      	bics	r0, r2
     188:	2220      	movs	r2, #32
     18a:	4310      	orrs	r0, r2
     18c:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     18e:	7b99      	ldrb	r1, [r3, #14]
     190:	43b9      	bics	r1, r7
     192:	4331      	orrs	r1, r6
     194:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     196:	7b9a      	ldrb	r2, [r3, #14]
     198:	43aa      	bics	r2, r5
     19a:	4322      	orrs	r2, r4
     19c:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     19e:	4a0f      	ldr	r2, [pc, #60]	; (1dc <Reset_Handler+0xb8>)
     1a0:	6851      	ldr	r1, [r2, #4]
     1a2:	2380      	movs	r3, #128	; 0x80
     1a4:	430b      	orrs	r3, r1
     1a6:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     1a8:	4b0d      	ldr	r3, [pc, #52]	; (1e0 <Reset_Handler+0xbc>)
     1aa:	4798      	blx	r3
        main();
     1ac:	4b0d      	ldr	r3, [pc, #52]	; (1e4 <Reset_Handler+0xc0>)
     1ae:	4798      	blx	r3
     1b0:	e7fe      	b.n	1b0 <Reset_Handler+0x8c>
     1b2:	46c0      	nop			; (mov r8, r8)
     1b4:	00006dcc 	.word	0x00006dcc
     1b8:	20000000 	.word	0x20000000
     1bc:	20000844 	.word	0x20000844
     1c0:	20000844 	.word	0x20000844
     1c4:	200009c8 	.word	0x200009c8
     1c8:	e000ed00 	.word	0xe000ed00
     1cc:	00000000 	.word	0x00000000
     1d0:	41007000 	.word	0x41007000
     1d4:	41005000 	.word	0x41005000
     1d8:	41004800 	.word	0x41004800
     1dc:	41004000 	.word	0x41004000
     1e0:	0000499d 	.word	0x0000499d
     1e4:	0000135d 	.word	0x0000135d

000001e8 <I2C_0_PORT_init>:
static uint8_t USART_0_buffer[USART_0_BUFFER_SIZE];

struct i2c_m_sync_desc I2C_0;

void I2C_0_PORT_init(void)
{
     1e8:	b570      	push	{r4, r5, r6, lr}
}

static inline void hri_port_clear_PINCFG_PULLEN_bit(const void *const hw, uint8_t submodule_index, uint8_t index)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     1ea:	4b13      	ldr	r3, [pc, #76]	; (238 <I2C_0_PORT_init+0x50>)
     1ec:	2050      	movs	r0, #80	; 0x50
     1ee:	5c19      	ldrb	r1, [r3, r0]
     1f0:	2204      	movs	r2, #4
     1f2:	4391      	bics	r1, r2
     1f4:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     1f6:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     1f8:	2501      	movs	r5, #1
     1fa:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     1fc:	2401      	movs	r4, #1
     1fe:	4321      	orrs	r1, r4
     200:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     202:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     204:	3818      	subs	r0, #24
     206:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     208:	260f      	movs	r6, #15
     20a:	43b1      	bics	r1, r6
	tmp |= PORT_PMUX_PMUXE(data);
     20c:	2602      	movs	r6, #2
     20e:	4331      	orrs	r1, r6
     210:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     212:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     214:	2151      	movs	r1, #81	; 0x51
     216:	5c5e      	ldrb	r6, [r3, r1]
     218:	4396      	bics	r6, r2
     21a:	545e      	strb	r6, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     21c:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     21e:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     220:	4322      	orrs	r2, r4
     222:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     224:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     226:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     228:	3942      	subs	r1, #66	; 0x42
     22a:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     22c:	2120      	movs	r1, #32
     22e:	430a      	orrs	r2, r1
     230:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     232:	541a      	strb	r2, [r3, r0]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_OFF);

	gpio_set_pin_function(PA17, PINMUX_PA17C_SERCOM1_PAD1);
}
     234:	bd70      	pop	{r4, r5, r6, pc}
     236:	46c0      	nop			; (mov r8, r8)
     238:	41004400 	.word	0x41004400

0000023c <I2C_0_CLOCK_init>:
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
     23c:	4a05      	ldr	r2, [pc, #20]	; (254 <I2C_0_CLOCK_init+0x18>)
     23e:	6a13      	ldr	r3, [r2, #32]
     240:	2108      	movs	r1, #8
     242:	430b      	orrs	r3, r1
     244:	6213      	str	r3, [r2, #32]
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
     246:	4b04      	ldr	r3, [pc, #16]	; (258 <I2C_0_CLOCK_init+0x1c>)
     248:	4a04      	ldr	r2, [pc, #16]	; (25c <I2C_0_CLOCK_init+0x20>)
     24a:	805a      	strh	r2, [r3, #2]
     24c:	4a04      	ldr	r2, [pc, #16]	; (260 <I2C_0_CLOCK_init+0x24>)
     24e:	805a      	strh	r2, [r3, #2]
void I2C_0_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM1);
	_gclk_enable_channel(SERCOM1_GCLK_ID_CORE, CONF_GCLK_SERCOM1_CORE_SRC);
	_gclk_enable_channel(SERCOM1_GCLK_ID_SLOW, CONF_GCLK_SERCOM1_SLOW_SRC);
}
     250:	4770      	bx	lr
     252:	46c0      	nop			; (mov r8, r8)
     254:	40000400 	.word	0x40000400
     258:	40000c00 	.word	0x40000c00
     25c:	00004015 	.word	0x00004015
     260:	00004313 	.word	0x00004313

00000264 <I2C_0_init>:

void I2C_0_init(void)
{
     264:	b510      	push	{r4, lr}
	I2C_0_CLOCK_init();
     266:	4b04      	ldr	r3, [pc, #16]	; (278 <I2C_0_init+0x14>)
     268:	4798      	blx	r3
	i2c_m_sync_init(&I2C_0, SERCOM1);
     26a:	4904      	ldr	r1, [pc, #16]	; (27c <I2C_0_init+0x18>)
     26c:	4804      	ldr	r0, [pc, #16]	; (280 <I2C_0_init+0x1c>)
     26e:	4b05      	ldr	r3, [pc, #20]	; (284 <I2C_0_init+0x20>)
     270:	4798      	blx	r3
	I2C_0_PORT_init();
     272:	4b05      	ldr	r3, [pc, #20]	; (288 <I2C_0_init+0x24>)
     274:	4798      	blx	r3
}
     276:	bd10      	pop	{r4, pc}
     278:	0000023d 	.word	0x0000023d
     27c:	42000c00 	.word	0x42000c00
     280:	20000920 	.word	0x20000920
     284:	00000479 	.word	0x00000479
     288:	000001e9 	.word	0x000001e9

0000028c <USART_0_CLOCK_init>:
     28c:	4a04      	ldr	r2, [pc, #16]	; (2a0 <USART_0_CLOCK_init+0x14>)
     28e:	6a13      	ldr	r3, [r2, #32]
     290:	2180      	movs	r1, #128	; 0x80
     292:	430b      	orrs	r3, r1
     294:	6213      	str	r3, [r2, #32]
     296:	4a03      	ldr	r2, [pc, #12]	; (2a4 <USART_0_CLOCK_init+0x18>)
     298:	4b03      	ldr	r3, [pc, #12]	; (2a8 <USART_0_CLOCK_init+0x1c>)
     29a:	805a      	strh	r2, [r3, #2]
void USART_0_CLOCK_init()
{

	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM5);
	_gclk_enable_channel(SERCOM5_GCLK_ID_CORE, CONF_GCLK_SERCOM5_CORE_SRC);
}
     29c:	4770      	bx	lr
     29e:	46c0      	nop			; (mov r8, r8)
     2a0:	40000400 	.word	0x40000400
     2a4:	00004019 	.word	0x00004019
     2a8:	40000c00 	.word	0x40000c00

000002ac <USART_0_PORT_init>:
 * \brief USART pinmux initialization function
 *
 * Set each required pin to USART functionality
 */
void USART_0_PORT_init()
{
     2ac:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     2ae:	4b0f      	ldr	r3, [pc, #60]	; (2ec <USART_0_PORT_init+0x40>)
     2b0:	22c2      	movs	r2, #194	; 0xc2
     2b2:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2b4:	2501      	movs	r5, #1
     2b6:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2b8:	2401      	movs	r4, #1
     2ba:	4321      	orrs	r1, r4
     2bc:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2be:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     2c0:	20b1      	movs	r0, #177	; 0xb1
     2c2:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     2c4:	3ab3      	subs	r2, #179	; 0xb3
     2c6:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     2c8:	2203      	movs	r2, #3
     2ca:	4311      	orrs	r1, r2
     2cc:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     2ce:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     2d0:	21c3      	movs	r1, #195	; 0xc3
     2d2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2d4:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2d6:	4322      	orrs	r2, r4
     2d8:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2da:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     2dc:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     2de:	39b4      	subs	r1, #180	; 0xb4
     2e0:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     2e2:	2130      	movs	r1, #48	; 0x30
     2e4:	430a      	orrs	r2, r1
     2e6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     2e8:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PB02, PINMUX_PB02D_SERCOM5_PAD0);

	gpio_set_pin_function(PB03, PINMUX_PB03D_SERCOM5_PAD1);
}
     2ea:	bd30      	pop	{r4, r5, pc}
     2ec:	41004400 	.word	0x41004400

000002f0 <USART_0_init>:
 * \brief USART initialization function
 *
 * Enables USART peripheral, clocks and initializes USART driver
 */
void USART_0_init(void)
{
     2f0:	b510      	push	{r4, lr}
     2f2:	b082      	sub	sp, #8
	USART_0_CLOCK_init();
     2f4:	4b06      	ldr	r3, [pc, #24]	; (310 <USART_0_init+0x20>)
     2f6:	4798      	blx	r3
	usart_async_init(&USART_0, SERCOM5, USART_0_buffer, USART_0_BUFFER_SIZE, (void *)NULL);
     2f8:	2300      	movs	r3, #0
     2fa:	9300      	str	r3, [sp, #0]
     2fc:	3310      	adds	r3, #16
     2fe:	4a05      	ldr	r2, [pc, #20]	; (314 <USART_0_init+0x24>)
     300:	4905      	ldr	r1, [pc, #20]	; (318 <USART_0_init+0x28>)
     302:	4806      	ldr	r0, [pc, #24]	; (31c <USART_0_init+0x2c>)
     304:	4c06      	ldr	r4, [pc, #24]	; (320 <USART_0_init+0x30>)
     306:	47a0      	blx	r4
	USART_0_PORT_init();
     308:	4b06      	ldr	r3, [pc, #24]	; (324 <USART_0_init+0x34>)
     30a:	4798      	blx	r3
}
     30c:	b002      	add	sp, #8
     30e:	bd10      	pop	{r4, pc}
     310:	0000028d 	.word	0x0000028d
     314:	20000860 	.word	0x20000860
     318:	42001c00 	.word	0x42001c00
     31c:	200008d0 	.word	0x200008d0
     320:	000006bd 	.word	0x000006bd
     324:	000002ad 	.word	0x000002ad

00000328 <delay_driver_init>:

void delay_driver_init(void)
{
     328:	b510      	push	{r4, lr}
	delay_init(SysTick);
     32a:	4802      	ldr	r0, [pc, #8]	; (334 <delay_driver_init+0xc>)
     32c:	4b02      	ldr	r3, [pc, #8]	; (338 <delay_driver_init+0x10>)
     32e:	4798      	blx	r3
}
     330:	bd10      	pop	{r4, pc}
     332:	46c0      	nop			; (mov r8, r8)
     334:	e000e010 	.word	0xe000e010
     338:	000003dd 	.word	0x000003dd

0000033c <system_init>:

void system_init(void)
{
     33c:	b570      	push	{r4, r5, r6, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     33e:	4b18      	ldr	r3, [pc, #96]	; (3a0 <system_init+0x64>)
     340:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     342:	22c0      	movs	r2, #192	; 0xc0
     344:	05d2      	lsls	r2, r2, #23
     346:	2380      	movs	r3, #128	; 0x80
     348:	035b      	lsls	r3, r3, #13
     34a:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     34c:	6093      	str	r3, [r2, #8]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     34e:	4b15      	ldr	r3, [pc, #84]	; (3a4 <system_init+0x68>)
     350:	2080      	movs	r0, #128	; 0x80
     352:	05c0      	lsls	r0, r0, #23
     354:	6298      	str	r0, [r3, #40]	; 0x28
     356:	4914      	ldr	r1, [pc, #80]	; (3a8 <system_init+0x6c>)
     358:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     35a:	2554      	movs	r5, #84	; 0x54
     35c:	5d5c      	ldrb	r4, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     35e:	2101      	movs	r1, #1
     360:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     362:	555c      	strb	r4, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     364:	2480      	movs	r4, #128	; 0x80
     366:	03a4      	lsls	r4, r4, #14
     368:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     36a:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     36c:	6298      	str	r0, [r3, #40]	; 0x28
     36e:	4c0f      	ldr	r4, [pc, #60]	; (3ac <system_init+0x70>)
     370:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     372:	3501      	adds	r5, #1
     374:	5d5c      	ldrb	r4, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     376:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     378:	555c      	strb	r4, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     37a:	2480      	movs	r4, #128	; 0x80
     37c:	04a4      	lsls	r4, r4, #18
     37e:	6194      	str	r4, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     380:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     382:	6298      	str	r0, [r3, #40]	; 0x28
     384:	4a0a      	ldr	r2, [pc, #40]	; (3b0 <system_init+0x74>)
     386:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     388:	2059      	movs	r0, #89	; 0x59
     38a:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     38c:	438a      	bics	r2, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     38e:	541a      	strb	r2, [r3, r0]
	// Set pin direction to output
	gpio_set_pin_direction(LE_RED, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(LE_RED, GPIO_PIN_FUNCTION_OFF);

	I2C_0_init();
     390:	4b08      	ldr	r3, [pc, #32]	; (3b4 <system_init+0x78>)
     392:	4798      	blx	r3
	USART_0_init();
     394:	4b08      	ldr	r3, [pc, #32]	; (3b8 <system_init+0x7c>)
     396:	4798      	blx	r3

	delay_driver_init();
     398:	4b08      	ldr	r3, [pc, #32]	; (3bc <system_init+0x80>)
     39a:	4798      	blx	r3
}
     39c:	bd70      	pop	{r4, r5, r6, pc}
     39e:	46c0      	nop			; (mov r8, r8)
     3a0:	000008ed 	.word	0x000008ed
     3a4:	41004400 	.word	0x41004400
     3a8:	c0000010 	.word	0xc0000010
     3ac:	c0000020 	.word	0xc0000020
     3b0:	c0000200 	.word	0xc0000200
     3b4:	00000265 	.word	0x00000265
     3b8:	000002f1 	.word	0x000002f1
     3bc:	00000329 	.word	0x00000329

000003c0 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     3c0:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     3c4:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     3c6:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     3c8:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     3cc:	4770      	bx	lr

000003ce <atomic_leave_critical>:
     3ce:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     3d2:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     3d4:	f383 8810 	msr	PRIMASK, r3
}
     3d8:	4770      	bx	lr
	...

000003dc <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
     3dc:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
     3de:	4b02      	ldr	r3, [pc, #8]	; (3e8 <delay_init+0xc>)
     3e0:	6018      	str	r0, [r3, #0]
     3e2:	4b02      	ldr	r3, [pc, #8]	; (3ec <delay_init+0x10>)
     3e4:	4798      	blx	r3
}
     3e6:	bd10      	pop	{r4, pc}
     3e8:	20000870 	.word	0x20000870
     3ec:	00001311 	.word	0x00001311

000003f0 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     3f0:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     3f2:	4b04      	ldr	r3, [pc, #16]	; (404 <delay_ms+0x14>)
     3f4:	681c      	ldr	r4, [r3, #0]
     3f6:	4b04      	ldr	r3, [pc, #16]	; (408 <delay_ms+0x18>)
     3f8:	4798      	blx	r3
     3fa:	0001      	movs	r1, r0
     3fc:	0020      	movs	r0, r4
     3fe:	4b03      	ldr	r3, [pc, #12]	; (40c <delay_ms+0x1c>)
     400:	4798      	blx	r3
}
     402:	bd10      	pop	{r4, pc}
     404:	20000870 	.word	0x20000870
     408:	000008dd 	.word	0x000008dd
     40c:	0000131d 	.word	0x0000131d

00000410 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     410:	b510      	push	{r4, lr}
     412:	b084      	sub	sp, #16
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     414:	3814      	subs	r0, #20
     416:	8b84      	ldrh	r4, [r0, #28]
     418:	ab01      	add	r3, sp, #4
     41a:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     41c:	0014      	movs	r4, r2
     41e:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP;
     420:	4a06      	ldr	r2, [pc, #24]	; (43c <i2c_m_sync_write+0x2c>)
     422:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     424:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     426:	0019      	movs	r1, r3
     428:	4b05      	ldr	r3, [pc, #20]	; (440 <i2c_m_sync_write+0x30>)
     42a:	4798      	blx	r3

	if (ret) {
     42c:	2800      	cmp	r0, #0
     42e:	d102      	bne.n	436 <i2c_m_sync_write+0x26>
		return ret;
	}

	return n;
}
     430:	0020      	movs	r0, r4
     432:	b004      	add	sp, #16
     434:	bd10      	pop	{r4, pc}
		return ret;
     436:	0004      	movs	r4, r0
     438:	e7fa      	b.n	430 <i2c_m_sync_write+0x20>
     43a:	46c0      	nop			; (mov r8, r8)
     43c:	ffff8000 	.word	0xffff8000
     440:	00001019 	.word	0x00001019

00000444 <i2c_m_sync_read>:
{
     444:	b510      	push	{r4, lr}
     446:	b084      	sub	sp, #16
	msg.addr   = i2c->slave_addr;
     448:	3814      	subs	r0, #20
     44a:	8b84      	ldrh	r4, [r0, #28]
     44c:	ab01      	add	r3, sp, #4
     44e:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     450:	0014      	movs	r4, r2
     452:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     454:	4a06      	ldr	r2, [pc, #24]	; (470 <i2c_m_sync_read+0x2c>)
     456:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     458:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     45a:	0019      	movs	r1, r3
     45c:	4b05      	ldr	r3, [pc, #20]	; (474 <i2c_m_sync_read+0x30>)
     45e:	4798      	blx	r3
	if (ret) {
     460:	2800      	cmp	r0, #0
     462:	d102      	bne.n	46a <i2c_m_sync_read+0x26>
}
     464:	0020      	movs	r0, r4
     466:	b004      	add	sp, #16
     468:	bd10      	pop	{r4, pc}
		return ret;
     46a:	0004      	movs	r4, r0
     46c:	e7fa      	b.n	464 <i2c_m_sync_read+0x20>
     46e:	46c0      	nop			; (mov r8, r8)
     470:	ffff8001 	.word	0xffff8001
     474:	00001019 	.word	0x00001019

00000478 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     478:	b570      	push	{r4, r5, r6, lr}
     47a:	0004      	movs	r4, r0
     47c:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     47e:	1e43      	subs	r3, r0, #1
     480:	4198      	sbcs	r0, r3
     482:	b2c0      	uxtb	r0, r0
     484:	225e      	movs	r2, #94	; 0x5e
     486:	4907      	ldr	r1, [pc, #28]	; (4a4 <i2c_m_sync_init+0x2c>)
     488:	4b07      	ldr	r3, [pc, #28]	; (4a8 <i2c_m_sync_init+0x30>)
     48a:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     48c:	0029      	movs	r1, r5
     48e:	0020      	movs	r0, r4
     490:	4b06      	ldr	r3, [pc, #24]	; (4ac <i2c_m_sync_init+0x34>)
     492:	4798      	blx	r3
	if (init_status) {
     494:	2800      	cmp	r0, #0
     496:	d103      	bne.n	4a0 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     498:	4b05      	ldr	r3, [pc, #20]	; (4b0 <i2c_m_sync_init+0x38>)
     49a:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     49c:	4b05      	ldr	r3, [pc, #20]	; (4b4 <i2c_m_sync_init+0x3c>)
     49e:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     4a0:	bd70      	pop	{r4, r5, r6, pc}
     4a2:	46c0      	nop			; (mov r8, r8)
     4a4:	00006608 	.word	0x00006608
     4a8:	000007b5 	.word	0x000007b5
     4ac:	00000f69 	.word	0x00000f69
     4b0:	00000445 	.word	0x00000445
     4b4:	00000411 	.word	0x00000411

000004b8 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     4b8:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     4ba:	4b01      	ldr	r3, [pc, #4]	; (4c0 <i2c_m_sync_enable+0x8>)
     4bc:	4798      	blx	r3
}
     4be:	bd10      	pop	{r4, pc}
     4c0:	00000f99 	.word	0x00000f99

000004c4 <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     4c4:	0589      	lsls	r1, r1, #22
     4c6:	0d89      	lsrs	r1, r1, #22
     4c8:	2380      	movs	r3, #128	; 0x80
     4ca:	00db      	lsls	r3, r3, #3
     4cc:	401a      	ands	r2, r3
     4ce:	430a      	orrs	r2, r1
     4d0:	8382      	strh	r2, [r0, #28]
}
     4d2:	0010      	movs	r0, r2
     4d4:	4770      	bx	lr

000004d6 <i2c_m_sync_get_io_descriptor>:
/**
 * \brief Retrieve I/O descriptor
 */
int32_t i2c_m_sync_get_io_descriptor(struct i2c_m_sync_desc *const i2c, struct io_descriptor **io)
{
	*io = &i2c->io;
     4d6:	3014      	adds	r0, #20
     4d8:	6008      	str	r0, [r1, #0]
	return ERR_NONE;
}
     4da:	2000      	movs	r0, #0
     4dc:	4770      	bx	lr
	...

000004e0 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     4e0:	b570      	push	{r4, r5, r6, lr}
     4e2:	0004      	movs	r4, r0
     4e4:	000d      	movs	r5, r1
     4e6:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     4e8:	2800      	cmp	r0, #0
     4ea:	d00e      	beq.n	50a <io_write+0x2a>
     4ec:	2900      	cmp	r1, #0
     4ee:	d00a      	beq.n	506 <io_write+0x26>
     4f0:	2001      	movs	r0, #1
     4f2:	2234      	movs	r2, #52	; 0x34
     4f4:	4906      	ldr	r1, [pc, #24]	; (510 <io_write+0x30>)
     4f6:	4b07      	ldr	r3, [pc, #28]	; (514 <io_write+0x34>)
     4f8:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     4fa:	6823      	ldr	r3, [r4, #0]
     4fc:	0032      	movs	r2, r6
     4fe:	0029      	movs	r1, r5
     500:	0020      	movs	r0, r4
     502:	4798      	blx	r3
}
     504:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     506:	2000      	movs	r0, #0
     508:	e7f3      	b.n	4f2 <io_write+0x12>
     50a:	2000      	movs	r0, #0
     50c:	e7f1      	b.n	4f2 <io_write+0x12>
     50e:	46c0      	nop			; (mov r8, r8)
     510:	00006624 	.word	0x00006624
     514:	000007b5 	.word	0x000007b5

00000518 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     518:	b570      	push	{r4, r5, r6, lr}
     51a:	0004      	movs	r4, r0
     51c:	000d      	movs	r5, r1
     51e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     520:	2800      	cmp	r0, #0
     522:	d00e      	beq.n	542 <io_read+0x2a>
     524:	2900      	cmp	r1, #0
     526:	d00a      	beq.n	53e <io_read+0x26>
     528:	2001      	movs	r0, #1
     52a:	223d      	movs	r2, #61	; 0x3d
     52c:	4906      	ldr	r1, [pc, #24]	; (548 <io_read+0x30>)
     52e:	4b07      	ldr	r3, [pc, #28]	; (54c <io_read+0x34>)
     530:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     532:	6863      	ldr	r3, [r4, #4]
     534:	0032      	movs	r2, r6
     536:	0029      	movs	r1, r5
     538:	0020      	movs	r0, r4
     53a:	4798      	blx	r3
}
     53c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     53e:	2000      	movs	r0, #0
     540:	e7f3      	b.n	52a <io_read+0x12>
     542:	2000      	movs	r0, #0
     544:	e7f1      	b.n	52a <io_read+0x12>
     546:	46c0      	nop			; (mov r8, r8)
     548:	00006624 	.word	0x00006624
     54c:	000007b5 	.word	0x000007b5

00000550 <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
     550:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     552:	3808      	subs	r0, #8

	descr->stat = 0;
     554:	2300      	movs	r3, #0
     556:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
     558:	6a43      	ldr	r3, [r0, #36]	; 0x24
     55a:	2b00      	cmp	r3, #0
     55c:	d000      	beq.n	560 <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
     55e:	4798      	blx	r3
	}
}
     560:	bd10      	pop	{r4, pc}

00000562 <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
     562:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     564:	3808      	subs	r0, #8

	descr->stat = 0;
     566:	2300      	movs	r3, #0
     568:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
     56a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     56c:	2b00      	cmp	r3, #0
     56e:	d000      	beq.n	572 <usart_error+0x10>
		descr->usart_cb.error(descr);
     570:	4798      	blx	r3
	}
}
     572:	bd10      	pop	{r4, pc}

00000574 <usart_fill_rx_buffer>:
{
     574:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     576:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
     578:	302c      	adds	r0, #44	; 0x2c
     57a:	4b04      	ldr	r3, [pc, #16]	; (58c <usart_fill_rx_buffer+0x18>)
     57c:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
     57e:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     580:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
     582:	2b00      	cmp	r3, #0
     584:	d001      	beq.n	58a <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
     586:	0020      	movs	r0, r4
     588:	4798      	blx	r3
}
     58a:	bd10      	pop	{r4, pc}
     58c:	00000855 	.word	0x00000855

00000590 <usart_async_write>:
{
     590:	b570      	push	{r4, r5, r6, lr}
     592:	0004      	movs	r4, r0
     594:	000e      	movs	r6, r1
     596:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
     598:	2800      	cmp	r0, #0
     59a:	d01d      	beq.n	5d8 <usart_async_write+0x48>
     59c:	2900      	cmp	r1, #0
     59e:	d01d      	beq.n	5dc <usart_async_write+0x4c>
     5a0:	2a00      	cmp	r2, #0
     5a2:	d11d      	bne.n	5e0 <usart_async_write+0x50>
     5a4:	2000      	movs	r0, #0
     5a6:	223c      	movs	r2, #60	; 0x3c
     5a8:	32ff      	adds	r2, #255	; 0xff
     5aa:	4910      	ldr	r1, [pc, #64]	; (5ec <usart_async_write+0x5c>)
     5ac:	4b10      	ldr	r3, [pc, #64]	; (5f0 <usart_async_write+0x60>)
     5ae:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
     5b0:	2344      	movs	r3, #68	; 0x44
     5b2:	5ae2      	ldrh	r2, [r4, r3]
     5b4:	3308      	adds	r3, #8
     5b6:	5ae3      	ldrh	r3, [r4, r3]
     5b8:	429a      	cmp	r2, r3
     5ba:	d113      	bne.n	5e4 <usart_async_write+0x54>
	descr->tx_buffer        = (uint8_t *)buf;
     5bc:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
     5be:	234c      	movs	r3, #76	; 0x4c
     5c0:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
     5c2:	2200      	movs	r2, #0
     5c4:	3b08      	subs	r3, #8
     5c6:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
     5c8:	3b43      	subs	r3, #67	; 0x43
     5ca:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
     5cc:	0020      	movs	r0, r4
     5ce:	3008      	adds	r0, #8
     5d0:	4b08      	ldr	r3, [pc, #32]	; (5f4 <usart_async_write+0x64>)
     5d2:	4798      	blx	r3
	return (int32_t)length;
     5d4:	0028      	movs	r0, r5
}
     5d6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
     5d8:	2000      	movs	r0, #0
     5da:	e7e4      	b.n	5a6 <usart_async_write+0x16>
     5dc:	2000      	movs	r0, #0
     5de:	e7e2      	b.n	5a6 <usart_async_write+0x16>
     5e0:	2001      	movs	r0, #1
     5e2:	e7e0      	b.n	5a6 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
     5e4:	201c      	movs	r0, #28
     5e6:	4240      	negs	r0, r0
     5e8:	e7f5      	b.n	5d6 <usart_async_write+0x46>
     5ea:	46c0      	nop			; (mov r8, r8)
     5ec:	00006638 	.word	0x00006638
     5f0:	000007b5 	.word	0x000007b5
     5f4:	00000f57 	.word	0x00000f57

000005f8 <usart_process_byte_sent>:
{
     5f8:	b570      	push	{r4, r5, r6, lr}
     5fa:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
     5fc:	0002      	movs	r2, r0
     5fe:	3a08      	subs	r2, #8
     600:	2344      	movs	r3, #68	; 0x44
     602:	5ad3      	ldrh	r3, [r2, r3]
     604:	214c      	movs	r1, #76	; 0x4c
     606:	5a52      	ldrh	r2, [r2, r1]
     608:	4293      	cmp	r3, r2
     60a:	d00d      	beq.n	628 <usart_process_byte_sent+0x30>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
     60c:	0002      	movs	r2, r0
     60e:	6c01      	ldr	r1, [r0, #64]	; 0x40
     610:	3a08      	subs	r2, #8
     612:	1c5d      	adds	r5, r3, #1
     614:	2044      	movs	r0, #68	; 0x44
     616:	5215      	strh	r5, [r2, r0]
     618:	5cc9      	ldrb	r1, [r1, r3]
     61a:	0020      	movs	r0, r4
     61c:	4b04      	ldr	r3, [pc, #16]	; (630 <usart_process_byte_sent+0x38>)
     61e:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
     620:	0020      	movs	r0, r4
     622:	4b04      	ldr	r3, [pc, #16]	; (634 <usart_process_byte_sent+0x3c>)
     624:	4798      	blx	r3
}
     626:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
     628:	4b03      	ldr	r3, [pc, #12]	; (638 <usart_process_byte_sent+0x40>)
     62a:	4798      	blx	r3
}
     62c:	e7fb      	b.n	626 <usart_process_byte_sent+0x2e>
     62e:	46c0      	nop			; (mov r8, r8)
     630:	00000f4f 	.word	0x00000f4f
     634:	00000f57 	.word	0x00000f57
     638:	00000f5f 	.word	0x00000f5f

0000063c <usart_async_read>:
{
     63c:	b5f0      	push	{r4, r5, r6, r7, lr}
     63e:	b085      	sub	sp, #20
     640:	0004      	movs	r4, r0
     642:	000d      	movs	r5, r1
     644:	0016      	movs	r6, r2
	ASSERT(descr && buf && length);
     646:	2800      	cmp	r0, #0
     648:	d017      	beq.n	67a <usart_async_read+0x3e>
     64a:	2900      	cmp	r1, #0
     64c:	d017      	beq.n	67e <usart_async_read+0x42>
     64e:	2a00      	cmp	r2, #0
     650:	d117      	bne.n	682 <usart_async_read+0x46>
     652:	2000      	movs	r0, #0
     654:	22ac      	movs	r2, #172	; 0xac
     656:	0052      	lsls	r2, r2, #1
     658:	4912      	ldr	r1, [pc, #72]	; (6a4 <usart_async_read+0x68>)
     65a:	4b13      	ldr	r3, [pc, #76]	; (6a8 <usart_async_read+0x6c>)
     65c:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     65e:	a803      	add	r0, sp, #12
     660:	4b12      	ldr	r3, [pc, #72]	; (6ac <usart_async_read+0x70>)
     662:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     664:	3434      	adds	r4, #52	; 0x34
     666:	0020      	movs	r0, r4
     668:	9401      	str	r4, [sp, #4]
     66a:	4b11      	ldr	r3, [pc, #68]	; (6b0 <usart_async_read+0x74>)
     66c:	4798      	blx	r3
     66e:	0007      	movs	r7, r0
	CRITICAL_SECTION_LEAVE()
     670:	a803      	add	r0, sp, #12
     672:	4b10      	ldr	r3, [pc, #64]	; (6b4 <usart_async_read+0x78>)
     674:	4798      	blx	r3
	uint16_t                       was_read = 0;
     676:	2400      	movs	r4, #0
	while ((was_read < num) && (was_read < length)) {
     678:	e00b      	b.n	692 <usart_async_read+0x56>
	ASSERT(descr && buf && length);
     67a:	2000      	movs	r0, #0
     67c:	e7ea      	b.n	654 <usart_async_read+0x18>
     67e:	2000      	movs	r0, #0
     680:	e7e8      	b.n	654 <usart_async_read+0x18>
     682:	2001      	movs	r0, #1
     684:	e7e6      	b.n	654 <usart_async_read+0x18>
		ringbuffer_get(&descr->rx, &buf[was_read++]);
     686:	3401      	adds	r4, #1
     688:	b2a4      	uxth	r4, r4
     68a:	1869      	adds	r1, r5, r1
     68c:	9801      	ldr	r0, [sp, #4]
     68e:	4b0a      	ldr	r3, [pc, #40]	; (6b8 <usart_async_read+0x7c>)
     690:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
     692:	0021      	movs	r1, r4
     694:	42a7      	cmp	r7, r4
     696:	d901      	bls.n	69c <usart_async_read+0x60>
     698:	42b4      	cmp	r4, r6
     69a:	d3f4      	bcc.n	686 <usart_async_read+0x4a>
}
     69c:	0020      	movs	r0, r4
     69e:	b005      	add	sp, #20
     6a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     6a2:	46c0      	nop			; (mov r8, r8)
     6a4:	00006638 	.word	0x00006638
     6a8:	000007b5 	.word	0x000007b5
     6ac:	000003c1 	.word	0x000003c1
     6b0:	00000895 	.word	0x00000895
     6b4:	000003cf 	.word	0x000003cf
     6b8:	00000809 	.word	0x00000809

000006bc <usart_async_init>:
{
     6bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     6be:	0004      	movs	r4, r0
     6c0:	000d      	movs	r5, r1
     6c2:	0016      	movs	r6, r2
     6c4:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     6c6:	2800      	cmp	r0, #0
     6c8:	d026      	beq.n	718 <usart_async_init+0x5c>
     6ca:	2900      	cmp	r1, #0
     6cc:	d026      	beq.n	71c <usart_async_init+0x60>
     6ce:	2a00      	cmp	r2, #0
     6d0:	d026      	beq.n	720 <usart_async_init+0x64>
     6d2:	2b00      	cmp	r3, #0
     6d4:	d126      	bne.n	724 <usart_async_init+0x68>
     6d6:	2000      	movs	r0, #0
     6d8:	223a      	movs	r2, #58	; 0x3a
     6da:	4915      	ldr	r1, [pc, #84]	; (730 <usart_async_init+0x74>)
     6dc:	4b15      	ldr	r3, [pc, #84]	; (734 <usart_async_init+0x78>)
     6de:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
     6e0:	0020      	movs	r0, r4
     6e2:	3034      	adds	r0, #52	; 0x34
     6e4:	003a      	movs	r2, r7
     6e6:	0031      	movs	r1, r6
     6e8:	4b13      	ldr	r3, [pc, #76]	; (738 <usart_async_init+0x7c>)
     6ea:	4798      	blx	r3
     6ec:	2800      	cmp	r0, #0
     6ee:	d11b      	bne.n	728 <usart_async_init+0x6c>
	init_status = _usart_async_init(&descr->device, hw);
     6f0:	0020      	movs	r0, r4
     6f2:	3008      	adds	r0, #8
     6f4:	0029      	movs	r1, r5
     6f6:	4b11      	ldr	r3, [pc, #68]	; (73c <usart_async_init+0x80>)
     6f8:	4798      	blx	r3
	if (init_status) {
     6fa:	2800      	cmp	r0, #0
     6fc:	d10b      	bne.n	716 <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
     6fe:	4b10      	ldr	r3, [pc, #64]	; (740 <usart_async_init+0x84>)
     700:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
     702:	4b10      	ldr	r3, [pc, #64]	; (744 <usart_async_init+0x88>)
     704:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
     706:	4b10      	ldr	r3, [pc, #64]	; (748 <usart_async_init+0x8c>)
     708:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
     70a:	4b10      	ldr	r3, [pc, #64]	; (74c <usart_async_init+0x90>)
     70c:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
     70e:	4b10      	ldr	r3, [pc, #64]	; (750 <usart_async_init+0x94>)
     710:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
     712:	4b10      	ldr	r3, [pc, #64]	; (754 <usart_async_init+0x98>)
     714:	6163      	str	r3, [r4, #20]
}
     716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     718:	2000      	movs	r0, #0
     71a:	e7dd      	b.n	6d8 <usart_async_init+0x1c>
     71c:	2000      	movs	r0, #0
     71e:	e7db      	b.n	6d8 <usart_async_init+0x1c>
     720:	2000      	movs	r0, #0
     722:	e7d9      	b.n	6d8 <usart_async_init+0x1c>
     724:	2001      	movs	r0, #1
     726:	e7d7      	b.n	6d8 <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
     728:	200d      	movs	r0, #13
     72a:	4240      	negs	r0, r0
     72c:	e7f3      	b.n	716 <usart_async_init+0x5a>
     72e:	46c0      	nop			; (mov r8, r8)
     730:	00006638 	.word	0x00006638
     734:	000007b5 	.word	0x000007b5
     738:	000007bd 	.word	0x000007bd
     73c:	00000eb1 	.word	0x00000eb1
     740:	0000063d 	.word	0x0000063d
     744:	00000591 	.word	0x00000591
     748:	000005f9 	.word	0x000005f9
     74c:	00000575 	.word	0x00000575
     750:	00000551 	.word	0x00000551
     754:	00000563 	.word	0x00000563

00000758 <usart_async_enable>:
{
     758:	b510      	push	{r4, lr}
     75a:	0004      	movs	r4, r0
	ASSERT(descr);
     75c:	1e43      	subs	r3, r0, #1
     75e:	4198      	sbcs	r0, r3
     760:	b2c0      	uxtb	r0, r0
     762:	2261      	movs	r2, #97	; 0x61
     764:	4904      	ldr	r1, [pc, #16]	; (778 <usart_async_enable+0x20>)
     766:	4b05      	ldr	r3, [pc, #20]	; (77c <usart_async_enable+0x24>)
     768:	4798      	blx	r3
	_usart_async_enable(&descr->device);
     76a:	0020      	movs	r0, r4
     76c:	3008      	adds	r0, #8
     76e:	4b04      	ldr	r3, [pc, #16]	; (780 <usart_async_enable+0x28>)
     770:	4798      	blx	r3
}
     772:	2000      	movs	r0, #0
     774:	bd10      	pop	{r4, pc}
     776:	46c0      	nop			; (mov r8, r8)
     778:	00006638 	.word	0x00006638
     77c:	000007b5 	.word	0x000007b5
     780:	00000f3d 	.word	0x00000f3d

00000784 <usart_async_get_io_descriptor>:
{
     784:	b570      	push	{r4, r5, r6, lr}
     786:	0004      	movs	r4, r0
     788:	000d      	movs	r5, r1
	ASSERT(descr && io);
     78a:	2800      	cmp	r0, #0
     78c:	d00b      	beq.n	7a6 <usart_async_get_io_descriptor+0x22>
     78e:	2900      	cmp	r1, #0
     790:	d007      	beq.n	7a2 <usart_async_get_io_descriptor+0x1e>
     792:	2001      	movs	r0, #1
     794:	2277      	movs	r2, #119	; 0x77
     796:	4905      	ldr	r1, [pc, #20]	; (7ac <usart_async_get_io_descriptor+0x28>)
     798:	4b05      	ldr	r3, [pc, #20]	; (7b0 <usart_async_get_io_descriptor+0x2c>)
     79a:	4798      	blx	r3
	*io = &descr->io;
     79c:	602c      	str	r4, [r5, #0]
}
     79e:	2000      	movs	r0, #0
     7a0:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && io);
     7a2:	2000      	movs	r0, #0
     7a4:	e7f6      	b.n	794 <usart_async_get_io_descriptor+0x10>
     7a6:	2000      	movs	r0, #0
     7a8:	e7f4      	b.n	794 <usart_async_get_io_descriptor+0x10>
     7aa:	46c0      	nop			; (mov r8, r8)
     7ac:	00006638 	.word	0x00006638
     7b0:	000007b5 	.word	0x000007b5

000007b4 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     7b4:	2800      	cmp	r0, #0
     7b6:	d100      	bne.n	7ba <assert+0x6>
		__asm("BKPT #0");
     7b8:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     7ba:	4770      	bx	lr

000007bc <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
     7bc:	b570      	push	{r4, r5, r6, lr}
     7be:	0004      	movs	r4, r0
     7c0:	000e      	movs	r6, r1
     7c2:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
     7c4:	2800      	cmp	r0, #0
     7c6:	d012      	beq.n	7ee <ringbuffer_init+0x32>
     7c8:	2900      	cmp	r1, #0
     7ca:	d012      	beq.n	7f2 <ringbuffer_init+0x36>
     7cc:	2a00      	cmp	r2, #0
     7ce:	d112      	bne.n	7f6 <ringbuffer_init+0x3a>
     7d0:	2000      	movs	r0, #0
     7d2:	2228      	movs	r2, #40	; 0x28
     7d4:	490a      	ldr	r1, [pc, #40]	; (800 <ringbuffer_init+0x44>)
     7d6:	4b0b      	ldr	r3, [pc, #44]	; (804 <ringbuffer_init+0x48>)
     7d8:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
     7da:	1e6b      	subs	r3, r5, #1
     7dc:	422b      	tst	r3, r5
     7de:	d10c      	bne.n	7fa <ringbuffer_init+0x3e>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
     7e0:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
     7e2:	2300      	movs	r3, #0
     7e4:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
     7e6:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
     7e8:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
     7ea:	2000      	movs	r0, #0
}
     7ec:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
     7ee:	2000      	movs	r0, #0
     7f0:	e7ef      	b.n	7d2 <ringbuffer_init+0x16>
     7f2:	2000      	movs	r0, #0
     7f4:	e7ed      	b.n	7d2 <ringbuffer_init+0x16>
     7f6:	2001      	movs	r0, #1
     7f8:	e7eb      	b.n	7d2 <ringbuffer_init+0x16>
		return ERR_INVALID_ARG;
     7fa:	200d      	movs	r0, #13
     7fc:	4240      	negs	r0, r0
     7fe:	e7f5      	b.n	7ec <ringbuffer_init+0x30>
     800:	00006658 	.word	0x00006658
     804:	000007b5 	.word	0x000007b5

00000808 <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
     808:	b570      	push	{r4, r5, r6, lr}
     80a:	0004      	movs	r4, r0
     80c:	000d      	movs	r5, r1
	ASSERT(rb && data);
     80e:	2800      	cmp	r0, #0
     810:	d016      	beq.n	840 <ringbuffer_get+0x38>
     812:	2900      	cmp	r1, #0
     814:	d012      	beq.n	83c <ringbuffer_get+0x34>
     816:	2001      	movs	r0, #1
     818:	2240      	movs	r2, #64	; 0x40
     81a:	490c      	ldr	r1, [pc, #48]	; (84c <ringbuffer_get+0x44>)
     81c:	4b0c      	ldr	r3, [pc, #48]	; (850 <ringbuffer_get+0x48>)
     81e:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
     820:	68a3      	ldr	r3, [r4, #8]
     822:	68e2      	ldr	r2, [r4, #12]
     824:	429a      	cmp	r2, r3
     826:	d00d      	beq.n	844 <ringbuffer_get+0x3c>
		*data = rb->buf[rb->read_index & rb->size];
     828:	6862      	ldr	r2, [r4, #4]
     82a:	4013      	ands	r3, r2
     82c:	6822      	ldr	r2, [r4, #0]
     82e:	5cd3      	ldrb	r3, [r2, r3]
     830:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
     832:	68a3      	ldr	r3, [r4, #8]
     834:	3301      	adds	r3, #1
     836:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
     838:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
     83a:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && data);
     83c:	2000      	movs	r0, #0
     83e:	e7eb      	b.n	818 <ringbuffer_get+0x10>
     840:	2000      	movs	r0, #0
     842:	e7e9      	b.n	818 <ringbuffer_get+0x10>
	return ERR_NOT_FOUND;
     844:	200a      	movs	r0, #10
     846:	4240      	negs	r0, r0
     848:	e7f7      	b.n	83a <ringbuffer_get+0x32>
     84a:	46c0      	nop			; (mov r8, r8)
     84c:	00006658 	.word	0x00006658
     850:	000007b5 	.word	0x000007b5

00000854 <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
     854:	b570      	push	{r4, r5, r6, lr}
     856:	0004      	movs	r4, r0
     858:	000d      	movs	r5, r1
	ASSERT(rb);
     85a:	1e43      	subs	r3, r0, #1
     85c:	4198      	sbcs	r0, r3
     85e:	b2c0      	uxtb	r0, r0
     860:	2251      	movs	r2, #81	; 0x51
     862:	490a      	ldr	r1, [pc, #40]	; (88c <ringbuffer_put+0x38>)
     864:	4b0a      	ldr	r3, [pc, #40]	; (890 <ringbuffer_put+0x3c>)
     866:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
     868:	6863      	ldr	r3, [r4, #4]
     86a:	68e2      	ldr	r2, [r4, #12]
     86c:	4013      	ands	r3, r2
     86e:	6822      	ldr	r2, [r4, #0]
     870:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
     872:	68e3      	ldr	r3, [r4, #12]
     874:	68a2      	ldr	r2, [r4, #8]
     876:	1a9a      	subs	r2, r3, r2
     878:	6861      	ldr	r1, [r4, #4]
     87a:	428a      	cmp	r2, r1
     87c:	d901      	bls.n	882 <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
     87e:	1a59      	subs	r1, r3, r1
     880:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
     882:	3301      	adds	r3, #1
     884:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
     886:	2000      	movs	r0, #0
     888:	bd70      	pop	{r4, r5, r6, pc}
     88a:	46c0      	nop			; (mov r8, r8)
     88c:	00006658 	.word	0x00006658
     890:	000007b5 	.word	0x000007b5

00000894 <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
     894:	b510      	push	{r4, lr}
     896:	0004      	movs	r4, r0
	ASSERT(rb);
     898:	1e43      	subs	r3, r0, #1
     89a:	4198      	sbcs	r0, r3
     89c:	b2c0      	uxtb	r0, r0
     89e:	2267      	movs	r2, #103	; 0x67
     8a0:	4903      	ldr	r1, [pc, #12]	; (8b0 <ringbuffer_num+0x1c>)
     8a2:	4b04      	ldr	r3, [pc, #16]	; (8b4 <ringbuffer_num+0x20>)
     8a4:	4798      	blx	r3

	return rb->write_index - rb->read_index;
     8a6:	68e0      	ldr	r0, [r4, #12]
     8a8:	68a3      	ldr	r3, [r4, #8]
     8aa:	1ac0      	subs	r0, r0, r3
}
     8ac:	bd10      	pop	{r4, pc}
     8ae:	46c0      	nop			; (mov r8, r8)
     8b0:	00006658 	.word	0x00006658
     8b4:	000007b5 	.word	0x000007b5

000008b8 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     8b8:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     8ba:	4a06      	ldr	r2, [pc, #24]	; (8d4 <_sbrk+0x1c>)
     8bc:	6812      	ldr	r2, [r2, #0]
     8be:	2a00      	cmp	r2, #0
     8c0:	d004      	beq.n	8cc <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     8c2:	4a04      	ldr	r2, [pc, #16]	; (8d4 <_sbrk+0x1c>)
     8c4:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     8c6:	18c3      	adds	r3, r0, r3
     8c8:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     8ca:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     8cc:	4902      	ldr	r1, [pc, #8]	; (8d8 <_sbrk+0x20>)
     8ce:	4a01      	ldr	r2, [pc, #4]	; (8d4 <_sbrk+0x1c>)
     8d0:	6011      	str	r1, [r2, #0]
     8d2:	e7f6      	b.n	8c2 <_sbrk+0xa>
     8d4:	20000874 	.word	0x20000874
     8d8:	200029c8 	.word	0x200029c8

000008dc <_get_cycles_for_ms>:
{
	switch (power) {
	case 8:
		return (ms * (freq / 100000)) * 100;
	case 7:
		return (ms * (freq / 10000)) * 10;
     8dc:	23c8      	movs	r3, #200	; 0xc8
     8de:	009b      	lsls	r3, r3, #2
     8e0:	4358      	muls	r0, r3
     8e2:	0083      	lsls	r3, r0, #2
     8e4:	181b      	adds	r3, r3, r0
     8e6:	0058      	lsls	r0, r3, #1
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     8e8:	4770      	bx	lr
	...

000008ec <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     8ec:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     8ee:	4b06      	ldr	r3, [pc, #24]	; (908 <_init_chip+0x1c>)
     8f0:	685a      	ldr	r2, [r3, #4]
     8f2:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     8f4:	4b05      	ldr	r3, [pc, #20]	; (90c <_init_chip+0x20>)
     8f6:	4798      	blx	r3
	_sysctrl_init_sources();
     8f8:	4b05      	ldr	r3, [pc, #20]	; (910 <_init_chip+0x24>)
     8fa:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
     8fc:	4b05      	ldr	r3, [pc, #20]	; (914 <_init_chip+0x28>)
     8fe:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     900:	20ff      	movs	r0, #255	; 0xff
     902:	4b05      	ldr	r3, [pc, #20]	; (918 <_init_chip+0x2c>)
     904:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
     906:	bd10      	pop	{r4, pc}
     908:	41004000 	.word	0x41004000
     90c:	0000093d 	.word	0x0000093d
     910:	000012a9 	.word	0x000012a9
     914:	000012ed 	.word	0x000012ed
     918:	0000091d 	.word	0x0000091d

0000091c <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     91c:	07c3      	lsls	r3, r0, #31
     91e:	d50a      	bpl.n	936 <_gclk_init_generators_by_fref+0x1a>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     920:	4b05      	ldr	r3, [pc, #20]	; (938 <_gclk_init_generators_by_fref+0x1c>)
     922:	2280      	movs	r2, #128	; 0x80
     924:	0052      	lsls	r2, r2, #1
     926:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     928:	2283      	movs	r2, #131	; 0x83
     92a:	0252      	lsls	r2, r2, #9
     92c:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     92e:	4b02      	ldr	r3, [pc, #8]	; (938 <_gclk_init_generators_by_fref+0x1c>)
     930:	785b      	ldrb	r3, [r3, #1]
     932:	09db      	lsrs	r3, r3, #7
     934:	d1fb      	bne.n	92e <_gclk_init_generators_by_fref+0x12>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
     936:	4770      	bx	lr
     938:	40000c00 	.word	0x40000c00

0000093c <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     93c:	4b06      	ldr	r3, [pc, #24]	; (958 <_pm_init+0x1c>)
     93e:	7a1a      	ldrb	r2, [r3, #8]
     940:	b2d2      	uxtb	r2, r2
     942:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     944:	7a5a      	ldrb	r2, [r3, #9]
     946:	b2d2      	uxtb	r2, r2
     948:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     94a:	7a9a      	ldrb	r2, [r3, #10]
     94c:	b2d2      	uxtb	r2, r2
     94e:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     950:	7ada      	ldrb	r2, [r3, #11]
     952:	b2d2      	uxtb	r2, r2
     954:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     956:	4770      	bx	lr
     958:	40000400 	.word	0x40000400

0000095c <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     95c:	4b02      	ldr	r3, [pc, #8]	; (968 <_sercom_get_hardware_index+0xc>)
     95e:	469c      	mov	ip, r3
     960:	4460      	add	r0, ip
     962:	0a80      	lsrs	r0, r0, #10
     964:	b2c0      	uxtb	r0, r0
}
     966:	4770      	bx	lr
     968:	bdfff800 	.word	0xbdfff800

0000096c <_sercom_usart_interrupt_handler>:
 * \internal Sercom interrupt handler
 *
 * \param[in] p The pointer to interrupt parameter
 */
static void _sercom_usart_interrupt_handler(struct _usart_async_device *device)
{
     96c:	b510      	push	{r4, lr}
	void *hw = device->hw;
     96e:	6984      	ldr	r4, [r0, #24]
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
}

static inline bool hri_sercomusart_get_interrupt_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
     970:	7e23      	ldrb	r3, [r4, #24]

	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
     972:	07db      	lsls	r3, r3, #31
     974:	d502      	bpl.n	97c <_sercom_usart_interrupt_handler+0x10>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
}

static inline bool hri_sercomusart_get_INTEN_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
     976:	7da3      	ldrb	r3, [r4, #22]
     978:	07db      	lsls	r3, r3, #31
     97a:	d40f      	bmi.n	99c <_sercom_usart_interrupt_handler+0x30>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
     97c:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_DRE_bit(hw);
		device->usart_cb.tx_byte_sent(device);
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
     97e:	079b      	lsls	r3, r3, #30
     980:	d502      	bpl.n	988 <_sercom_usart_interrupt_handler+0x1c>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
}

static inline bool hri_sercomusart_get_INTEN_TXC_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
     982:	7da3      	ldrb	r3, [r4, #22]
     984:	079b      	lsls	r3, r3, #30
     986:	d40e      	bmi.n	9a6 <_sercom_usart_interrupt_handler+0x3a>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
     988:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_TXC_bit(hw);
		device->usart_cb.tx_done_cb(device);
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
     98a:	075b      	lsls	r3, r3, #29
     98c:	d515      	bpl.n	9ba <_sercom_usart_interrupt_handler+0x4e>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
     98e:	8b62      	ldrh	r2, [r4, #26]
		if (hri_sercomusart_read_STATUS_reg(hw)
     990:	2337      	movs	r3, #55	; 0x37
     992:	421a      	tst	r2, r3
     994:	d00c      	beq.n	9b0 <_sercom_usart_interrupt_handler+0x44>
	((Sercom *)hw)->USART.STATUS.reg = mask;
     996:	3308      	adds	r3, #8
     998:	8363      	strh	r3, [r4, #26]
		hri_sercomusart_clear_interrupt_ERROR_bit(hw);
		device->usart_cb.error_cb(device);
		status = hri_sercomusart_read_STATUS_reg(hw);
		hri_sercomusart_clear_STATUS_reg(hw, status);
	}
}
     99a:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
     99c:	2301      	movs	r3, #1
     99e:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_byte_sent(device);
     9a0:	6803      	ldr	r3, [r0, #0]
     9a2:	4798      	blx	r3
     9a4:	e7f9      	b.n	99a <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
     9a6:	2302      	movs	r3, #2
     9a8:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_done_cb(device);
     9aa:	6883      	ldr	r3, [r0, #8]
     9ac:	4798      	blx	r3
     9ae:	e7f4      	b.n	99a <_sercom_usart_interrupt_handler+0x2e>
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
     9b0:	6843      	ldr	r3, [r0, #4]
	return ((Sercom *)hw)->USART.DATA.reg;
     9b2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
     9b4:	b2c9      	uxtb	r1, r1
     9b6:	4798      	blx	r3
     9b8:	e7ef      	b.n	99a <_sercom_usart_interrupt_handler+0x2e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR) >> SERCOM_USART_INTFLAG_ERROR_Pos;
     9ba:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_ERROR_bit(hw)) {
     9bc:	09db      	lsrs	r3, r3, #7
     9be:	d0ec      	beq.n	99a <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
     9c0:	2380      	movs	r3, #128	; 0x80
     9c2:	7623      	strb	r3, [r4, #24]
		device->usart_cb.error_cb(device);
     9c4:	68c3      	ldr	r3, [r0, #12]
     9c6:	4798      	blx	r3
	return ((Sercom *)hw)->USART.STATUS.reg;
     9c8:	8b63      	ldrh	r3, [r4, #26]
     9ca:	b29b      	uxth	r3, r3
	((Sercom *)hw)->USART.STATUS.reg = mask;
     9cc:	8363      	strh	r3, [r4, #26]
     9ce:	e7e4      	b.n	99a <_sercom_usart_interrupt_handler+0x2e>

000009d0 <_sercom_init_irq_param>:
 * \brief Init irq param with the given sercom hardware instance
 */
static void _sercom_init_irq_param(const void *const hw, void *dev)
{

	if (hw == SERCOM5) {
     9d0:	4b03      	ldr	r3, [pc, #12]	; (9e0 <_sercom_init_irq_param+0x10>)
     9d2:	4298      	cmp	r0, r3
     9d4:	d000      	beq.n	9d8 <_sercom_init_irq_param+0x8>
		_sercom5_dev = (struct _usart_async_device *)dev;
	}
}
     9d6:	4770      	bx	lr
		_sercom5_dev = (struct _usart_async_device *)dev;
     9d8:	4b02      	ldr	r3, [pc, #8]	; (9e4 <_sercom_init_irq_param+0x14>)
     9da:	6019      	str	r1, [r3, #0]
}
     9dc:	e7fb      	b.n	9d6 <_sercom_init_irq_param+0x6>
     9de:	46c0      	nop			; (mov r8, r8)
     9e0:	42001c00 	.word	0x42001c00
     9e4:	20000878 	.word	0x20000878

000009e8 <_sercom_get_irq_num>:

/**
 * \brief Retrieve IRQ number for the given hardware instance
 */
static uint8_t _sercom_get_irq_num(const void *const hw)
{
     9e8:	b510      	push	{r4, lr}
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
     9ea:	4b02      	ldr	r3, [pc, #8]	; (9f4 <_sercom_get_irq_num+0xc>)
     9ec:	4798      	blx	r3
     9ee:	3009      	adds	r0, #9
     9f0:	b2c0      	uxtb	r0, r0
}
     9f2:	bd10      	pop	{r4, pc}
     9f4:	0000095d 	.word	0x0000095d

000009f8 <_get_sercom_index>:
{
     9f8:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     9fa:	4b0b      	ldr	r3, [pc, #44]	; (a28 <_get_sercom_index+0x30>)
     9fc:	4798      	blx	r3
     9fe:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     a00:	2000      	movs	r0, #0
     a02:	2800      	cmp	r0, #0
     a04:	d006      	beq.n	a14 <_get_sercom_index+0x1c>
	ASSERT(false);
     a06:	4a09      	ldr	r2, [pc, #36]	; (a2c <_get_sercom_index+0x34>)
     a08:	4909      	ldr	r1, [pc, #36]	; (a30 <_get_sercom_index+0x38>)
     a0a:	2000      	movs	r0, #0
     a0c:	4b09      	ldr	r3, [pc, #36]	; (a34 <_get_sercom_index+0x3c>)
     a0e:	4798      	blx	r3
	return 0;
     a10:	2000      	movs	r0, #0
}
     a12:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
     a14:	0083      	lsls	r3, r0, #2
     a16:	181b      	adds	r3, r3, r0
     a18:	0099      	lsls	r1, r3, #2
     a1a:	4b07      	ldr	r3, [pc, #28]	; (a38 <_get_sercom_index+0x40>)
     a1c:	5ccb      	ldrb	r3, [r1, r3]
     a1e:	429a      	cmp	r2, r3
     a20:	d0f7      	beq.n	a12 <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     a22:	3001      	adds	r0, #1
     a24:	b2c0      	uxtb	r0, r0
     a26:	e7ec      	b.n	a02 <_get_sercom_index+0xa>
     a28:	0000095d 	.word	0x0000095d
     a2c:	0000025e 	.word	0x0000025e
     a30:	000066cc 	.word	0x000066cc
     a34:	000007b5 	.word	0x000007b5
     a38:	0000667c 	.word	0x0000667c

00000a3c <_usart_init>:
{
     a3c:	b570      	push	{r4, r5, r6, lr}
     a3e:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
     a40:	4b38      	ldr	r3, [pc, #224]	; (b24 <_usart_init+0xe8>)
     a42:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
     a44:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
     a46:	07db      	lsls	r3, r3, #31
     a48:	d41d      	bmi.n	a86 <_usart_init+0x4a>
		uint32_t mode = _usarts[i].ctrl_a & SERCOM_USART_CTRLA_MODE_Msk;
     a4a:	0083      	lsls	r3, r0, #2
     a4c:	181b      	adds	r3, r3, r0
     a4e:	009a      	lsls	r2, r3, #2
     a50:	4b35      	ldr	r3, [pc, #212]	; (b28 <_usart_init+0xec>)
     a52:	189b      	adds	r3, r3, r2
     a54:	685a      	ldr	r2, [r3, #4]
     a56:	231c      	movs	r3, #28
     a58:	401a      	ands	r2, r3
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     a5a:	69e3      	ldr	r3, [r4, #28]
     a5c:	079b      	lsls	r3, r3, #30
     a5e:	d1fc      	bne.n	a5a <_usart_init+0x1e>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
     a60:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
     a62:	079b      	lsls	r3, r3, #30
     a64:	d509      	bpl.n	a7a <_usart_init+0x3e>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
     a66:	6823      	ldr	r3, [r4, #0]
     a68:	2102      	movs	r1, #2
     a6a:	438b      	bics	r3, r1
     a6c:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     a6e:	69e3      	ldr	r3, [r4, #28]
     a70:	079b      	lsls	r3, r3, #30
     a72:	d1fc      	bne.n	a6e <_usart_init+0x32>
     a74:	69e3      	ldr	r3, [r4, #28]
     a76:	079b      	lsls	r3, r3, #30
     a78:	d4fc      	bmi.n	a74 <_usart_init+0x38>
		hri_sercomusart_write_CTRLA_reg(hw, SERCOM_USART_CTRLA_SWRST | mode);
     a7a:	2301      	movs	r3, #1
     a7c:	4313      	orrs	r3, r2
	((Sercom *)hw)->USART.CTRLA.reg = data;
     a7e:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     a80:	69e3      	ldr	r3, [r4, #28]
     a82:	079b      	lsls	r3, r3, #30
     a84:	d1fc      	bne.n	a80 <_usart_init+0x44>
     a86:	69e3      	ldr	r3, [r4, #28]
     a88:	07db      	lsls	r3, r3, #31
     a8a:	d4fc      	bmi.n	a86 <_usart_init+0x4a>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
     a8c:	0083      	lsls	r3, r0, #2
     a8e:	181b      	adds	r3, r3, r0
     a90:	009a      	lsls	r2, r3, #2
     a92:	4b25      	ldr	r3, [pc, #148]	; (b28 <_usart_init+0xec>)
     a94:	189b      	adds	r3, r3, r2
     a96:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
     a98:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     a9a:	69e3      	ldr	r3, [r4, #28]
     a9c:	079b      	lsls	r3, r3, #30
     a9e:	d1fc      	bne.n	a9a <_usart_init+0x5e>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
     aa0:	0083      	lsls	r3, r0, #2
     aa2:	181b      	adds	r3, r3, r0
     aa4:	009a      	lsls	r2, r3, #2
     aa6:	4b20      	ldr	r3, [pc, #128]	; (b28 <_usart_init+0xec>)
     aa8:	189b      	adds	r3, r3, r2
     aaa:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->USART.CTRLB.reg = data;
     aac:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     aae:	69e3      	ldr	r3, [r4, #28]
     ab0:	075b      	lsls	r3, r3, #29
     ab2:	d1fc      	bne.n	aae <_usart_init+0x72>
	if ((_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x1)) || (_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x3))) {
     ab4:	0083      	lsls	r3, r0, #2
     ab6:	181b      	adds	r3, r3, r0
     ab8:	009a      	lsls	r2, r3, #2
     aba:	4b1b      	ldr	r3, [pc, #108]	; (b28 <_usart_init+0xec>)
     abc:	189b      	adds	r3, r3, r2
     abe:	685b      	ldr	r3, [r3, #4]
     ac0:	049a      	lsls	r2, r3, #18
     ac2:	d40b      	bmi.n	adc <_usart_init+0xa0>
     ac4:	22c0      	movs	r2, #192	; 0xc0
     ac6:	01d2      	lsls	r2, r2, #7
     ac8:	4213      	tst	r3, r2
     aca:	d107      	bne.n	adc <_usart_init+0xa0>
		hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
     acc:	0083      	lsls	r3, r0, #2
     ace:	181b      	adds	r3, r3, r0
     ad0:	009a      	lsls	r2, r3, #2
     ad2:	4b15      	ldr	r3, [pc, #84]	; (b28 <_usart_init+0xec>)
     ad4:	189b      	adds	r3, r3, r2
     ad6:	899b      	ldrh	r3, [r3, #12]
	((Sercom *)hw)->USART.BAUD.reg = data;
     ad8:	81a3      	strh	r3, [r4, #12]
     ada:	e015      	b.n	b08 <_usart_init+0xcc>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
     adc:	0083      	lsls	r3, r0, #2
     ade:	181b      	adds	r3, r3, r0
     ae0:	009a      	lsls	r2, r3, #2
     ae2:	4911      	ldr	r1, [pc, #68]	; (b28 <_usart_init+0xec>)
     ae4:	1889      	adds	r1, r1, r2
     ae6:	898a      	ldrh	r2, [r1, #12]
     ae8:	89a3      	ldrh	r3, [r4, #12]
     aea:	04d2      	lsls	r2, r2, #19
     aec:	0cd2      	lsrs	r2, r2, #19
     aee:	0b5b      	lsrs	r3, r3, #13
     af0:	035b      	lsls	r3, r3, #13
     af2:	4313      	orrs	r3, r2
     af4:	81a3      	strh	r3, [r4, #12]
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
     af6:	7b8b      	ldrb	r3, [r1, #14]
     af8:	2207      	movs	r2, #7
     afa:	401a      	ands	r2, r3
     afc:	89a3      	ldrh	r3, [r4, #12]
     afe:	0352      	lsls	r2, r2, #13
     b00:	04db      	lsls	r3, r3, #19
     b02:	0cdb      	lsrs	r3, r3, #19
     b04:	4313      	orrs	r3, r2
     b06:	81a3      	strh	r3, [r4, #12]
	hri_sercomusart_write_RXPL_reg(hw, _usarts[i].rxpl);
     b08:	4a07      	ldr	r2, [pc, #28]	; (b28 <_usart_init+0xec>)
     b0a:	0083      	lsls	r3, r0, #2
     b0c:	181d      	adds	r5, r3, r0
     b0e:	00a9      	lsls	r1, r5, #2
     b10:	000d      	movs	r5, r1
     b12:	1851      	adds	r1, r2, r1
     b14:	7bc9      	ldrb	r1, [r1, #15]
	((Sercom *)hw)->USART.RXPL.reg = data;
     b16:	73a1      	strb	r1, [r4, #14]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
     b18:	1952      	adds	r2, r2, r5
     b1a:	7c12      	ldrb	r2, [r2, #16]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
     b1c:	2330      	movs	r3, #48	; 0x30
     b1e:	54e2      	strb	r2, [r4, r3]
}
     b20:	2000      	movs	r0, #0
     b22:	bd70      	pop	{r4, r5, r6, pc}
     b24:	000009f9 	.word	0x000009f9
     b28:	0000667c 	.word	0x0000667c

00000b2c <_get_i2cm_index>:
{
     b2c:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     b2e:	4b0d      	ldr	r3, [pc, #52]	; (b64 <_get_i2cm_index+0x38>)
     b30:	4798      	blx	r3
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     b32:	2300      	movs	r3, #0
     b34:	2b00      	cmp	r3, #0
     b36:	d008      	beq.n	b4a <_get_i2cm_index+0x1e>
	ASSERT(false);
     b38:	22f0      	movs	r2, #240	; 0xf0
     b3a:	0092      	lsls	r2, r2, #2
     b3c:	490a      	ldr	r1, [pc, #40]	; (b68 <_get_i2cm_index+0x3c>)
     b3e:	2000      	movs	r0, #0
     b40:	4b0a      	ldr	r3, [pc, #40]	; (b6c <_get_i2cm_index+0x40>)
     b42:	4798      	blx	r3
	return -1;
     b44:	2001      	movs	r0, #1
     b46:	4240      	negs	r0, r0
}
     b48:	bd10      	pop	{r4, pc}
		if (_i2cms[i].number == sercom_offset) {
     b4a:	005a      	lsls	r2, r3, #1
     b4c:	18d2      	adds	r2, r2, r3
     b4e:	00d1      	lsls	r1, r2, #3
     b50:	4a07      	ldr	r2, [pc, #28]	; (b70 <_get_i2cm_index+0x44>)
     b52:	1852      	adds	r2, r2, r1
     b54:	7d12      	ldrb	r2, [r2, #20]
     b56:	4290      	cmp	r0, r2
     b58:	d002      	beq.n	b60 <_get_i2cm_index+0x34>
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     b5a:	3301      	adds	r3, #1
     b5c:	b2db      	uxtb	r3, r3
     b5e:	e7e9      	b.n	b34 <_get_i2cm_index+0x8>
			return i;
     b60:	b258      	sxtb	r0, r3
     b62:	e7f1      	b.n	b48 <_get_i2cm_index+0x1c>
     b64:	0000095d 	.word	0x0000095d
     b68:	000066cc 	.word	0x000066cc
     b6c:	000007b5 	.word	0x000007b5
     b70:	0000667c 	.word	0x0000667c

00000b74 <_i2c_m_sync_init_impl>:
	}
	return ERR_NONE;
}

static int32_t _i2c_m_sync_init_impl(struct _i2c_m_service *const service, void *const hw)
{
     b74:	b570      	push	{r4, r5, r6, lr}
     b76:	0005      	movs	r5, r0
     b78:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
     b7a:	0008      	movs	r0, r1
     b7c:	4b2d      	ldr	r3, [pc, #180]	; (c34 <_i2c_m_sync_init_impl+0xc0>)
     b7e:	4798      	blx	r3
     b80:	b2c0      	uxtb	r0, r0
	return ((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg;
     b82:	69e3      	ldr	r3, [r4, #28]

	if (!hri_sercomi2cm_is_syncing(hw, SERCOM_I2CM_SYNCBUSY_SWRST)) {
     b84:	07db      	lsls	r3, r3, #31
     b86:	d41d      	bmi.n	bc4 <_i2c_m_sync_init_impl+0x50>
		uint32_t mode = _i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_MODE_Msk;
     b88:	0043      	lsls	r3, r0, #1
     b8a:	181b      	adds	r3, r3, r0
     b8c:	00da      	lsls	r2, r3, #3
     b8e:	4b2a      	ldr	r3, [pc, #168]	; (c38 <_i2c_m_sync_init_impl+0xc4>)
     b90:	189b      	adds	r3, r3, r2
     b92:	699a      	ldr	r2, [r3, #24]
     b94:	231c      	movs	r3, #28
     b96:	401a      	ands	r2, r3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     b98:	69e3      	ldr	r3, [r4, #28]
     b9a:	079b      	lsls	r3, r3, #30
     b9c:	d1fc      	bne.n	b98 <_i2c_m_sync_init_impl+0x24>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
     b9e:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
     ba0:	079b      	lsls	r3, r3, #30
     ba2:	d509      	bpl.n	bb8 <_i2c_m_sync_init_impl+0x44>
	((Sercom *)hw)->I2CM.CTRLA.reg &= ~SERCOM_I2CM_CTRLA_ENABLE;
     ba4:	6823      	ldr	r3, [r4, #0]
     ba6:	2102      	movs	r1, #2
     ba8:	438b      	bics	r3, r1
     baa:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     bac:	69e3      	ldr	r3, [r4, #28]
     bae:	079b      	lsls	r3, r3, #30
     bb0:	d1fc      	bne.n	bac <_i2c_m_sync_init_impl+0x38>
     bb2:	69e3      	ldr	r3, [r4, #28]
     bb4:	079b      	lsls	r3, r3, #30
     bb6:	d4fc      	bmi.n	bb2 <_i2c_m_sync_init_impl+0x3e>
			hri_sercomi2cm_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_ENABLE);
		}
		hri_sercomi2cm_write_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_SWRST | mode);
     bb8:	2301      	movs	r3, #1
     bba:	4313      	orrs	r3, r2
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
     bbc:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     bbe:	69e3      	ldr	r3, [r4, #28]
     bc0:	079b      	lsls	r3, r3, #30
     bc2:	d1fc      	bne.n	bbe <_i2c_m_sync_init_impl+0x4a>
     bc4:	69e3      	ldr	r3, [r4, #28]
     bc6:	07db      	lsls	r3, r3, #31
     bc8:	d4fc      	bmi.n	bc4 <_i2c_m_sync_init_impl+0x50>
	}
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SWRST);

	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a);
     bca:	0043      	lsls	r3, r0, #1
     bcc:	181b      	adds	r3, r3, r0
     bce:	00da      	lsls	r2, r3, #3
     bd0:	4b19      	ldr	r3, [pc, #100]	; (c38 <_i2c_m_sync_init_impl+0xc4>)
     bd2:	189b      	adds	r3, r3, r2
     bd4:	699b      	ldr	r3, [r3, #24]
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
     bd6:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     bd8:	69e3      	ldr	r3, [r4, #28]
     bda:	079b      	lsls	r3, r3, #30
     bdc:	d1fc      	bne.n	bd8 <_i2c_m_sync_init_impl+0x64>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
     bde:	0043      	lsls	r3, r0, #1
     be0:	181b      	adds	r3, r3, r0
     be2:	00da      	lsls	r2, r3, #3
     be4:	4b14      	ldr	r3, [pc, #80]	; (c38 <_i2c_m_sync_init_impl+0xc4>)
     be6:	189b      	adds	r3, r3, r2
     be8:	69db      	ldr	r3, [r3, #28]
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
     bea:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     bec:	69e3      	ldr	r3, [r4, #28]
     bee:	075b      	lsls	r3, r3, #29
     bf0:	d4fc      	bmi.n	bec <_i2c_m_sync_init_impl+0x78>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
     bf2:	0042      	lsls	r2, r0, #1
     bf4:	1812      	adds	r2, r2, r0
     bf6:	00d1      	lsls	r1, r2, #3
     bf8:	4b0f      	ldr	r3, [pc, #60]	; (c38 <_i2c_m_sync_init_impl+0xc4>)
     bfa:	185b      	adds	r3, r3, r1
	((Sercom *)hw)->I2CM.BAUD.reg = data;
     bfc:	6a1a      	ldr	r2, [r3, #32]
     bfe:	60e2      	str	r2, [r4, #12]

	service->mode = (_i2cms[i].ctrl_a & SERCOM_I2CM_CTRLA_SPEED_Msk) >> SERCOM_I2CM_CTRLA_SPEED_Pos;
     c00:	7eda      	ldrb	r2, [r3, #27]
     c02:	2303      	movs	r3, #3
     c04:	401a      	ands	r2, r3
     c06:	81aa      	strh	r2, [r5, #12]
	hri_sercomi2cm_write_ADDR_HS_bit(hw, service->mode < I2C_HS ? 0 : 1);
     c08:	3b02      	subs	r3, #2
     c0a:	4293      	cmp	r3, r2
     c0c:	419b      	sbcs	r3, r3
     c0e:	425b      	negs	r3, r3
	tmp = ((Sercom *)hw)->I2CM.ADDR.reg;
     c10:	6a62      	ldr	r2, [r4, #36]	; 0x24
	tmp &= ~SERCOM_I2CM_ADDR_HS;
     c12:	490a      	ldr	r1, [pc, #40]	; (c3c <_i2c_m_sync_init_impl+0xc8>)
     c14:	400a      	ands	r2, r1
	tmp |= value << SERCOM_I2CM_ADDR_HS_Pos;
     c16:	039b      	lsls	r3, r3, #14
     c18:	4313      	orrs	r3, r2
	((Sercom *)hw)->I2CM.ADDR.reg = tmp;
     c1a:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     c1c:	69e3      	ldr	r3, [r4, #28]
     c1e:	075b      	lsls	r3, r3, #29
     c20:	d4fc      	bmi.n	c1c <_i2c_m_sync_init_impl+0xa8>

	service->trise = _i2cms[i].trise;
     c22:	0043      	lsls	r3, r0, #1
     c24:	1818      	adds	r0, r3, r0
     c26:	00c2      	lsls	r2, r0, #3
     c28:	4b03      	ldr	r3, [pc, #12]	; (c38 <_i2c_m_sync_init_impl+0xc4>)
     c2a:	189b      	adds	r3, r3, r2
     c2c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
     c2e:	81eb      	strh	r3, [r5, #14]

	return ERR_NONE;
}
     c30:	2000      	movs	r0, #0
     c32:	bd70      	pop	{r4, r5, r6, pc}
     c34:	00000b2d 	.word	0x00000b2d
     c38:	0000667c 	.word	0x0000667c
     c3c:	ffffbfff 	.word	0xffffbfff

00000c40 <_sercom_i2c_sync_send_address>:
{
     c40:	b570      	push	{r4, r5, r6, lr}
     c42:	0005      	movs	r5, r0
	void *             hw    = i2c_dev->hw;
     c44:	6904      	ldr	r4, [r0, #16]
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
     c46:	6823      	ldr	r3, [r4, #0]
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
     c48:	0edb      	lsrs	r3, r3, #27
     c4a:	2601      	movs	r6, #1
     c4c:	401e      	ands	r6, r3
	ASSERT(i2c_dev);
     c4e:	1e43      	subs	r3, r0, #1
     c50:	4198      	sbcs	r0, r3
     c52:	b2c0      	uxtb	r0, r0
     c54:	4a8e      	ldr	r2, [pc, #568]	; (e90 <_sercom_i2c_sync_send_address+0x250>)
     c56:	498f      	ldr	r1, [pc, #572]	; (e94 <_sercom_i2c_sync_send_address+0x254>)
     c58:	4b8f      	ldr	r3, [pc, #572]	; (e98 <_sercom_i2c_sync_send_address+0x258>)
     c5a:	4798      	blx	r3
	if (msg->len == 1 && sclsm) {
     c5c:	686b      	ldr	r3, [r5, #4]
     c5e:	2b01      	cmp	r3, #1
     c60:	d04d      	beq.n	cfe <_sercom_i2c_sync_send_address+0xbe>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     c62:	6863      	ldr	r3, [r4, #4]
     c64:	4a8d      	ldr	r2, [pc, #564]	; (e9c <_sercom_i2c_sync_send_address+0x25c>)
     c66:	4013      	ands	r3, r2
     c68:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     c6a:	69e3      	ldr	r3, [r4, #28]
     c6c:	075b      	lsls	r3, r3, #29
     c6e:	d4fc      	bmi.n	c6a <_sercom_i2c_sync_send_address+0x2a>
	if (msg->addr & I2C_M_TEN) {
     c70:	882b      	ldrh	r3, [r5, #0]
     c72:	055a      	lsls	r2, r3, #21
     c74:	d54e      	bpl.n	d14 <_sercom_i2c_sync_send_address+0xd4>
		if (msg->flags & I2C_M_RD) {
     c76:	886a      	ldrh	r2, [r5, #2]
     c78:	07d2      	lsls	r2, r2, #31
     c7a:	d504      	bpl.n	c86 <_sercom_i2c_sync_send_address+0x46>
			msg->flags |= I2C_M_TEN;
     c7c:	886a      	ldrh	r2, [r5, #2]
     c7e:	2180      	movs	r1, #128	; 0x80
     c80:	00c9      	lsls	r1, r1, #3
     c82:	430a      	orrs	r2, r1
     c84:	806a      	strh	r2, [r5, #2]
		                              ((msg->addr & TEN_ADDR_MASK) << 1) | SERCOM_I2CM_ADDR_TENBITEN
     c86:	005b      	lsls	r3, r3, #1
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
     c88:	4a85      	ldr	r2, [pc, #532]	; (ea0 <_sercom_i2c_sync_send_address+0x260>)
     c8a:	401a      	ands	r2, r3
     c8c:	69e3      	ldr	r3, [r4, #28]
     c8e:	075b      	lsls	r3, r3, #29
     c90:	d4fc      	bmi.n	c8c <_sercom_i2c_sync_send_address+0x4c>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
     c92:	6a63      	ldr	r3, [r4, #36]	; 0x24
     c94:	2180      	movs	r1, #128	; 0x80
     c96:	01c9      	lsls	r1, r1, #7
     c98:	400b      	ands	r3, r1
     c9a:	4313      	orrs	r3, r2
		hri_sercomi2cm_write_ADDR_reg(hw,
     c9c:	2280      	movs	r2, #128	; 0x80
     c9e:	0212      	lsls	r2, r2, #8
     ca0:	4313      	orrs	r3, r2
	((Sercom *)hw)->I2CM.ADDR.reg = data;
     ca2:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     ca4:	69e3      	ldr	r3, [r4, #28]
     ca6:	075b      	lsls	r3, r3, #29
     ca8:	d4fc      	bmi.n	ca4 <_sercom_i2c_sync_send_address+0x64>
	void *   hw      = i2c_dev->hw;
     caa:	692e      	ldr	r6, [r5, #16]
	uint32_t timeout = 65535;
     cac:	4a7d      	ldr	r2, [pc, #500]	; (ea4 <_sercom_i2c_sync_send_address+0x264>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
     cae:	7e33      	ldrb	r3, [r6, #24]
     cb0:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
     cb2:	0018      	movs	r0, r3
		if (timeout-- == 0) {
     cb4:	1e51      	subs	r1, r2, #1
     cb6:	2a00      	cmp	r2, #0
     cb8:	d002      	beq.n	cc0 <_sercom_i2c_sync_send_address+0x80>
     cba:	000a      	movs	r2, r1
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
     cbc:	079b      	lsls	r3, r3, #30
     cbe:	d0f6      	beq.n	cae <_sercom_i2c_sync_send_address+0x6e>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
     cc0:	6823      	ldr	r3, [r4, #0]
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
     cc2:	0edb      	lsrs	r3, r3, #27
     cc4:	2201      	movs	r2, #1
     cc6:	401a      	ands	r2, r3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     cc8:	69e3      	ldr	r3, [r4, #28]
     cca:	075b      	lsls	r3, r3, #29
     ccc:	d4fc      	bmi.n	cc8 <_sercom_i2c_sync_send_address+0x88>
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_reg(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw, SERCOM_I2CM_SYNCBUSY_SYSOP);
	return ((Sercom *)hw)->I2CM.STATUS.reg;
     cce:	8b63      	ldrh	r3, [r4, #26]
     cd0:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
     cd2:	07c1      	lsls	r1, r0, #31
     cd4:	d400      	bmi.n	cd8 <_sercom_i2c_sync_send_address+0x98>
     cd6:	e08f      	b.n	df8 <_sercom_i2c_sync_send_address+0x1b8>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
     cd8:	079a      	lsls	r2, r3, #30
     cda:	d52f      	bpl.n	d3c <_sercom_i2c_sync_send_address+0xfc>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
     cdc:	2201      	movs	r2, #1
     cde:	7622      	strb	r2, [r4, #24]
			msg->flags |= I2C_M_FAIL;
     ce0:	886a      	ldrh	r2, [r5, #2]
     ce2:	2180      	movs	r1, #128	; 0x80
     ce4:	0149      	lsls	r1, r1, #5
     ce6:	430a      	orrs	r2, r1
     ce8:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
     cea:	886a      	ldrh	r2, [r5, #2]
     cec:	496e      	ldr	r1, [pc, #440]	; (ea8 <_sercom_i2c_sync_send_address+0x268>)
     cee:	400a      	ands	r2, r1
     cf0:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
     cf2:	07db      	lsls	r3, r3, #31
     cf4:	d400      	bmi.n	cf8 <_sercom_i2c_sync_send_address+0xb8>
     cf6:	e0c6      	b.n	e86 <_sercom_i2c_sync_send_address+0x246>
				return I2C_ERR_BUS;
     cf8:	2005      	movs	r0, #5
     cfa:	4240      	negs	r0, r0
     cfc:	e0a2      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
	if (msg->len == 1 && sclsm) {
     cfe:	2e00      	cmp	r6, #0
     d00:	d0af      	beq.n	c62 <_sercom_i2c_sync_send_address+0x22>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     d02:	6862      	ldr	r2, [r4, #4]
     d04:	2380      	movs	r3, #128	; 0x80
     d06:	02db      	lsls	r3, r3, #11
     d08:	4313      	orrs	r3, r2
     d0a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     d0c:	69e3      	ldr	r3, [r4, #28]
     d0e:	075b      	lsls	r3, r3, #29
     d10:	d4fc      	bmi.n	d0c <_sercom_i2c_sync_send_address+0xcc>
     d12:	e7ad      	b.n	c70 <_sercom_i2c_sync_send_address+0x30>
		                              ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0)
     d14:	005b      	lsls	r3, r3, #1
     d16:	22ff      	movs	r2, #255	; 0xff
     d18:	4013      	ands	r3, r2
     d1a:	886a      	ldrh	r2, [r5, #2]
     d1c:	2101      	movs	r1, #1
     d1e:	400a      	ands	r2, r1
     d20:	431a      	orrs	r2, r3
     d22:	69e3      	ldr	r3, [r4, #28]
     d24:	075b      	lsls	r3, r3, #29
     d26:	d4fc      	bmi.n	d22 <_sercom_i2c_sync_send_address+0xe2>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
     d28:	6a63      	ldr	r3, [r4, #36]	; 0x24
		                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
     d2a:	2180      	movs	r1, #128	; 0x80
     d2c:	01c9      	lsls	r1, r1, #7
     d2e:	400b      	ands	r3, r1
		hri_sercomi2cm_write_ADDR_reg(hw,
     d30:	4313      	orrs	r3, r2
	((Sercom *)hw)->I2CM.ADDR.reg = data;
     d32:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     d34:	69e3      	ldr	r3, [r4, #28]
     d36:	075b      	lsls	r3, r3, #29
     d38:	d4fc      	bmi.n	d34 <_sercom_i2c_sync_send_address+0xf4>
     d3a:	e7b6      	b.n	caa <_sercom_i2c_sync_send_address+0x6a>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
     d3c:	075b      	lsls	r3, r3, #29
     d3e:	d41b      	bmi.n	d78 <_sercom_i2c_sync_send_address+0x138>
			if (msg->flags & I2C_M_TEN) {
     d40:	886b      	ldrh	r3, [r5, #2]
     d42:	055b      	lsls	r3, r3, #21
     d44:	d534      	bpl.n	db0 <_sercom_i2c_sync_send_address+0x170>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
     d46:	882a      	ldrh	r2, [r5, #0]
     d48:	1212      	asrs	r2, r2, #8
     d4a:	0052      	lsls	r2, r2, #1
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
     d4c:	2306      	movs	r3, #6
     d4e:	401a      	ands	r2, r3
     d50:	69e3      	ldr	r3, [r4, #28]
     d52:	075b      	lsls	r3, r3, #29
     d54:	d4fc      	bmi.n	d50 <_sercom_i2c_sync_send_address+0x110>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
     d56:	6a63      	ldr	r3, [r4, #36]	; 0x24
     d58:	2180      	movs	r1, #128	; 0x80
     d5a:	01c9      	lsls	r1, r1, #7
     d5c:	400b      	ands	r3, r1
     d5e:	4313      	orrs	r3, r2
				hri_sercomi2cm_write_ADDR_reg(hw,
     d60:	22f1      	movs	r2, #241	; 0xf1
     d62:	4313      	orrs	r3, r2
	((Sercom *)hw)->I2CM.ADDR.reg = data;
     d64:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     d66:	69e3      	ldr	r3, [r4, #28]
     d68:	075b      	lsls	r3, r3, #29
     d6a:	d4fc      	bmi.n	d66 <_sercom_i2c_sync_send_address+0x126>
				msg->flags &= ~I2C_M_TEN;
     d6c:	886b      	ldrh	r3, [r5, #2]
     d6e:	4a4f      	ldr	r2, [pc, #316]	; (eac <_sercom_i2c_sync_send_address+0x26c>)
     d70:	4013      	ands	r3, r2
     d72:	806b      	strh	r3, [r5, #2]
				return I2C_OK;
     d74:	2000      	movs	r0, #0
     d76:	e065      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
				if (msg->len > 0) {
     d78:	686b      	ldr	r3, [r5, #4]
     d7a:	2b00      	cmp	r3, #0
     d7c:	dd04      	ble.n	d88 <_sercom_i2c_sync_send_address+0x148>
					msg->flags |= I2C_M_FAIL;
     d7e:	886b      	ldrh	r3, [r5, #2]
     d80:	2280      	movs	r2, #128	; 0x80
     d82:	0152      	lsls	r2, r2, #5
     d84:	4313      	orrs	r3, r2
     d86:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
     d88:	886b      	ldrh	r3, [r5, #2]
     d8a:	b21b      	sxth	r3, r3
     d8c:	2b00      	cmp	r3, #0
     d8e:	db06      	blt.n	d9e <_sercom_i2c_sync_send_address+0x15e>
				msg->flags &= ~I2C_M_BUSY;
     d90:	886b      	ldrh	r3, [r5, #2]
     d92:	4a45      	ldr	r2, [pc, #276]	; (ea8 <_sercom_i2c_sync_send_address+0x268>)
     d94:	4013      	ands	r3, r2
     d96:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
     d98:	2002      	movs	r0, #2
     d9a:	4240      	negs	r0, r0
     d9c:	e052      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     d9e:	6862      	ldr	r2, [r4, #4]
     da0:	23c0      	movs	r3, #192	; 0xc0
     da2:	029b      	lsls	r3, r3, #10
     da4:	4313      	orrs	r3, r2
     da6:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     da8:	69e3      	ldr	r3, [r4, #28]
     daa:	075b      	lsls	r3, r3, #29
     dac:	d4fc      	bmi.n	da8 <_sercom_i2c_sync_send_address+0x168>
     dae:	e7ef      	b.n	d90 <_sercom_i2c_sync_send_address+0x150>
			if (msg->len == 0) {
     db0:	6868      	ldr	r0, [r5, #4]
     db2:	2800      	cmp	r0, #0
     db4:	d111      	bne.n	dda <_sercom_i2c_sync_send_address+0x19a>
				if (msg->flags & I2C_M_STOP) {
     db6:	886b      	ldrh	r3, [r5, #2]
     db8:	b21b      	sxth	r3, r3
     dba:	2b00      	cmp	r3, #0
     dbc:	db04      	blt.n	dc8 <_sercom_i2c_sync_send_address+0x188>
				msg->flags &= ~I2C_M_BUSY;
     dbe:	886b      	ldrh	r3, [r5, #2]
     dc0:	4a39      	ldr	r2, [pc, #228]	; (ea8 <_sercom_i2c_sync_send_address+0x268>)
     dc2:	4013      	ands	r3, r2
     dc4:	806b      	strh	r3, [r5, #2]
     dc6:	e03d      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     dc8:	6862      	ldr	r2, [r4, #4]
     dca:	23c0      	movs	r3, #192	; 0xc0
     dcc:	029b      	lsls	r3, r3, #10
     dce:	4313      	orrs	r3, r2
     dd0:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     dd2:	69e3      	ldr	r3, [r4, #28]
     dd4:	075b      	lsls	r3, r3, #29
     dd6:	d4fc      	bmi.n	dd2 <_sercom_i2c_sync_send_address+0x192>
     dd8:	e7f1      	b.n	dbe <_sercom_i2c_sync_send_address+0x17e>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
     dda:	68ab      	ldr	r3, [r5, #8]
     ddc:	781a      	ldrb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
     dde:	2328      	movs	r3, #40	; 0x28
     de0:	54e2      	strb	r2, [r4, r3]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     de2:	69e3      	ldr	r3, [r4, #28]
     de4:	075b      	lsls	r3, r3, #29
     de6:	d4fc      	bmi.n	de2 <_sercom_i2c_sync_send_address+0x1a2>
				msg->buffer++;
     de8:	68ab      	ldr	r3, [r5, #8]
     dea:	3301      	adds	r3, #1
     dec:	60ab      	str	r3, [r5, #8]
				msg->len--;
     dee:	686b      	ldr	r3, [r5, #4]
     df0:	3b01      	subs	r3, #1
     df2:	606b      	str	r3, [r5, #4]
			return I2C_OK;
     df4:	2000      	movs	r0, #0
     df6:	e025      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
	} else if (flags & SB_FLAG) {
     df8:	0781      	lsls	r1, r0, #30
     dfa:	d547      	bpl.n	e8c <_sercom_i2c_sync_send_address+0x24c>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
     dfc:	6869      	ldr	r1, [r5, #4]
     dfe:	2900      	cmp	r1, #0
     e00:	d03c      	beq.n	e7c <_sercom_i2c_sync_send_address+0x23c>
     e02:	075b      	lsls	r3, r3, #29
     e04:	d43a      	bmi.n	e7c <_sercom_i2c_sync_send_address+0x23c>
			msg->len--;
     e06:	3901      	subs	r1, #1
     e08:	6069      	str	r1, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
     e0a:	2900      	cmp	r1, #0
     e0c:	d101      	bne.n	e12 <_sercom_i2c_sync_send_address+0x1d2>
     e0e:	2a00      	cmp	r2, #0
     e10:	d01b      	beq.n	e4a <_sercom_i2c_sync_send_address+0x20a>
     e12:	2901      	cmp	r1, #1
     e14:	d017      	beq.n	e46 <_sercom_i2c_sync_send_address+0x206>
			if (msg->len == 0) {
     e16:	686b      	ldr	r3, [r5, #4]
     e18:	2b00      	cmp	r3, #0
     e1a:	d107      	bne.n	e2c <_sercom_i2c_sync_send_address+0x1ec>
				if (msg->flags & I2C_M_STOP) {
     e1c:	886b      	ldrh	r3, [r5, #2]
     e1e:	b21b      	sxth	r3, r3
     e20:	2b00      	cmp	r3, #0
     e22:	db1b      	blt.n	e5c <_sercom_i2c_sync_send_address+0x21c>
				msg->flags &= ~I2C_M_BUSY;
     e24:	886b      	ldrh	r3, [r5, #2]
     e26:	4a20      	ldr	r2, [pc, #128]	; (ea8 <_sercom_i2c_sync_send_address+0x268>)
     e28:	4013      	ands	r3, r2
     e2a:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
     e2c:	68aa      	ldr	r2, [r5, #8]
     e2e:	1c53      	adds	r3, r2, #1
     e30:	60ab      	str	r3, [r5, #8]
     e32:	69e3      	ldr	r3, [r4, #28]
     e34:	075b      	lsls	r3, r3, #29
     e36:	d4fc      	bmi.n	e32 <_sercom_i2c_sync_send_address+0x1f2>
	return ((Sercom *)hw)->I2CM.DATA.reg;
     e38:	2328      	movs	r3, #40	; 0x28
     e3a:	5ce3      	ldrb	r3, [r4, r3]
     e3c:	7013      	strb	r3, [r2, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     e3e:	2302      	movs	r3, #2
     e40:	7623      	strb	r3, [r4, #24]
	return I2C_OK;
     e42:	2000      	movs	r0, #0
}
     e44:	bd70      	pop	{r4, r5, r6, pc}
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
     e46:	2a00      	cmp	r2, #0
     e48:	d0e5      	beq.n	e16 <_sercom_i2c_sync_send_address+0x1d6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     e4a:	6862      	ldr	r2, [r4, #4]
     e4c:	2380      	movs	r3, #128	; 0x80
     e4e:	02db      	lsls	r3, r3, #11
     e50:	4313      	orrs	r3, r2
     e52:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     e54:	69e3      	ldr	r3, [r4, #28]
     e56:	075b      	lsls	r3, r3, #29
     e58:	d4fc      	bmi.n	e54 <_sercom_i2c_sync_send_address+0x214>
     e5a:	e7dc      	b.n	e16 <_sercom_i2c_sync_send_address+0x1d6>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
     e5c:	6863      	ldr	r3, [r4, #4]
     e5e:	4a12      	ldr	r2, [pc, #72]	; (ea8 <_sercom_i2c_sync_send_address+0x268>)
     e60:	4013      	ands	r3, r2
     e62:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     e64:	69e3      	ldr	r3, [r4, #28]
     e66:	075b      	lsls	r3, r3, #29
     e68:	d4fc      	bmi.n	e64 <_sercom_i2c_sync_send_address+0x224>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     e6a:	6862      	ldr	r2, [r4, #4]
     e6c:	23c0      	movs	r3, #192	; 0xc0
     e6e:	029b      	lsls	r3, r3, #10
     e70:	4313      	orrs	r3, r2
     e72:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     e74:	69e3      	ldr	r3, [r4, #28]
     e76:	075b      	lsls	r3, r3, #29
     e78:	d4fc      	bmi.n	e74 <_sercom_i2c_sync_send_address+0x234>
     e7a:	e7d3      	b.n	e24 <_sercom_i2c_sync_send_address+0x1e4>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     e7c:	2302      	movs	r3, #2
     e7e:	7623      	strb	r3, [r4, #24]
			return I2C_NACK;
     e80:	2002      	movs	r0, #2
     e82:	4240      	negs	r0, r0
     e84:	e7de      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
			return I2C_ERR_BAD_ADDRESS;
     e86:	2004      	movs	r0, #4
     e88:	4240      	negs	r0, r0
     e8a:	e7db      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
	return I2C_OK;
     e8c:	2000      	movs	r0, #0
	return _sercom_i2c_sync_analyse_flags(hw, flags, msg);
     e8e:	e7d9      	b.n	e44 <_sercom_i2c_sync_send_address+0x204>
     e90:	000005bc 	.word	0x000005bc
     e94:	000066cc 	.word	0x000066cc
     e98:	000007b5 	.word	0x000007b5
     e9c:	fffbffff 	.word	0xfffbffff
     ea0:	000007fe 	.word	0x000007fe
     ea4:	0000ffff 	.word	0x0000ffff
     ea8:	fffffeff 	.word	0xfffffeff
     eac:	fffffbff 	.word	0xfffffbff

00000eb0 <_usart_async_init>:
{
     eb0:	b570      	push	{r4, r5, r6, lr}
     eb2:	0006      	movs	r6, r0
     eb4:	000c      	movs	r4, r1
	ASSERT(device);
     eb6:	1e43      	subs	r3, r0, #1
     eb8:	4198      	sbcs	r0, r3
     eba:	b2c0      	uxtb	r0, r0
     ebc:	22c4      	movs	r2, #196	; 0xc4
     ebe:	4919      	ldr	r1, [pc, #100]	; (f24 <_usart_async_init+0x74>)
     ec0:	4b19      	ldr	r3, [pc, #100]	; (f28 <_usart_async_init+0x78>)
     ec2:	4798      	blx	r3
	init_status = _usart_init(hw);
     ec4:	0020      	movs	r0, r4
     ec6:	4b19      	ldr	r3, [pc, #100]	; (f2c <_usart_async_init+0x7c>)
     ec8:	4798      	blx	r3
     eca:	1e05      	subs	r5, r0, #0
	if (init_status) {
     ecc:	d001      	beq.n	ed2 <_usart_async_init+0x22>
}
     ece:	0028      	movs	r0, r5
     ed0:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
     ed2:	61b4      	str	r4, [r6, #24]
	_sercom_init_irq_param(hw, (void *)device);
     ed4:	0031      	movs	r1, r6
     ed6:	0020      	movs	r0, r4
     ed8:	4b15      	ldr	r3, [pc, #84]	; (f30 <_usart_async_init+0x80>)
     eda:	4798      	blx	r3
	NVIC_DisableIRQ((IRQn_Type)_sercom_get_irq_num(hw));
     edc:	0020      	movs	r0, r4
     ede:	4b15      	ldr	r3, [pc, #84]	; (f34 <_usart_async_init+0x84>)
     ee0:	4798      	blx	r3
     ee2:	b243      	sxtb	r3, r0
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
     ee4:	2b00      	cmp	r3, #0
     ee6:	db0a      	blt.n	efe <_usart_async_init+0x4e>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     ee8:	211f      	movs	r1, #31
     eea:	4001      	ands	r1, r0
     eec:	2201      	movs	r2, #1
     eee:	408a      	lsls	r2, r1
     ef0:	2180      	movs	r1, #128	; 0x80
     ef2:	4c11      	ldr	r4, [pc, #68]	; (f38 <_usart_async_init+0x88>)
     ef4:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
     ef6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     efa:	f3bf 8f6f 	isb	sy
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
     efe:	2b00      	cmp	r3, #0
     f00:	db07      	blt.n	f12 <_usart_async_init+0x62>
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     f02:	211f      	movs	r1, #31
     f04:	4001      	ands	r1, r0
     f06:	2201      	movs	r2, #1
     f08:	408a      	lsls	r2, r1
     f0a:	21c0      	movs	r1, #192	; 0xc0
     f0c:	0049      	lsls	r1, r1, #1
     f0e:	4c0a      	ldr	r4, [pc, #40]	; (f38 <_usart_async_init+0x88>)
     f10:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
     f12:	2b00      	cmp	r3, #0
     f14:	dbdb      	blt.n	ece <_usart_async_init+0x1e>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     f16:	231f      	movs	r3, #31
     f18:	4018      	ands	r0, r3
     f1a:	3b1e      	subs	r3, #30
     f1c:	4083      	lsls	r3, r0
     f1e:	4a06      	ldr	r2, [pc, #24]	; (f38 <_usart_async_init+0x88>)
     f20:	6013      	str	r3, [r2, #0]
     f22:	e7d4      	b.n	ece <_usart_async_init+0x1e>
     f24:	000066cc 	.word	0x000066cc
     f28:	000007b5 	.word	0x000007b5
     f2c:	00000a3d 	.word	0x00000a3d
     f30:	000009d1 	.word	0x000009d1
     f34:	000009e9 	.word	0x000009e9
     f38:	e000e100 	.word	0xe000e100

00000f3c <_usart_async_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
     f3c:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
     f3e:	6813      	ldr	r3, [r2, #0]
     f40:	2102      	movs	r1, #2
     f42:	430b      	orrs	r3, r1
     f44:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     f46:	69d3      	ldr	r3, [r2, #28]
     f48:	079b      	lsls	r3, r3, #30
     f4a:	d1fc      	bne.n	f46 <_usart_async_enable+0xa>
}
     f4c:	4770      	bx	lr

00000f4e <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
     f4e:	6983      	ldr	r3, [r0, #24]
     f50:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
     f52:	8519      	strh	r1, [r3, #40]	; 0x28
}
     f54:	4770      	bx	lr

00000f56 <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
     f56:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
     f58:	2201      	movs	r2, #1
     f5a:	759a      	strb	r2, [r3, #22]
}
     f5c:	4770      	bx	lr

00000f5e <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
     f5e:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
     f60:	2202      	movs	r2, #2
     f62:	759a      	strb	r2, [r3, #22]
}
     f64:	4770      	bx	lr
	...

00000f68 <_i2c_m_sync_init>:
{
     f68:	b570      	push	{r4, r5, r6, lr}
     f6a:	0004      	movs	r4, r0
     f6c:	000d      	movs	r5, r1
	ASSERT(i2c_dev);
     f6e:	1e43      	subs	r3, r0, #1
     f70:	4198      	sbcs	r0, r3
     f72:	b2c0      	uxtb	r0, r0
     f74:	4a04      	ldr	r2, [pc, #16]	; (f88 <_i2c_m_sync_init+0x20>)
     f76:	4905      	ldr	r1, [pc, #20]	; (f8c <_i2c_m_sync_init+0x24>)
     f78:	4b05      	ldr	r3, [pc, #20]	; (f90 <_i2c_m_sync_init+0x28>)
     f7a:	4798      	blx	r3
	i2c_dev->hw = hw;
     f7c:	6125      	str	r5, [r4, #16]
	return _i2c_m_sync_init_impl(&i2c_dev->service, hw);
     f7e:	0029      	movs	r1, r5
     f80:	0020      	movs	r0, r4
     f82:	4b04      	ldr	r3, [pc, #16]	; (f94 <_i2c_m_sync_init+0x2c>)
     f84:	4798      	blx	r3
}
     f86:	bd70      	pop	{r4, r5, r6, pc}
     f88:	0000052f 	.word	0x0000052f
     f8c:	000066cc 	.word	0x000066cc
     f90:	000007b5 	.word	0x000007b5
     f94:	00000b75 	.word	0x00000b75

00000f98 <_i2c_m_sync_enable>:
{
     f98:	b570      	push	{r4, r5, r6, lr}
     f9a:	0004      	movs	r4, r0
	ASSERT(i2c_dev);
     f9c:	4d19      	ldr	r5, [pc, #100]	; (1004 <_i2c_m_sync_enable+0x6c>)
     f9e:	1e43      	subs	r3, r0, #1
     fa0:	4198      	sbcs	r0, r3
     fa2:	b2c0      	uxtb	r0, r0
     fa4:	4a18      	ldr	r2, [pc, #96]	; (1008 <_i2c_m_sync_enable+0x70>)
     fa6:	0029      	movs	r1, r5
     fa8:	4e18      	ldr	r6, [pc, #96]	; (100c <_i2c_m_sync_enable+0x74>)
     faa:	47b0      	blx	r6
	return _i2c_m_enable_implementation(i2c_dev->hw);
     fac:	6924      	ldr	r4, [r4, #16]
	ASSERT(hw);
     fae:	0020      	movs	r0, r4
     fb0:	1e43      	subs	r3, r0, #1
     fb2:	4198      	sbcs	r0, r3
     fb4:	b2c0      	uxtb	r0, r0
     fb6:	4a16      	ldr	r2, [pc, #88]	; (1010 <_i2c_m_sync_enable+0x78>)
     fb8:	0029      	movs	r1, r5
     fba:	47b0      	blx	r6
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
     fbc:	6823      	ldr	r3, [r4, #0]
     fbe:	2202      	movs	r2, #2
     fc0:	4313      	orrs	r3, r2
     fc2:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     fc4:	69e3      	ldr	r3, [r4, #28]
     fc6:	079b      	lsls	r3, r3, #30
     fc8:	d1fc      	bne.n	fc4 <_i2c_m_sync_enable+0x2c>
     fca:	2004      	movs	r0, #4
     fcc:	4911      	ldr	r1, [pc, #68]	; (1014 <_i2c_m_sync_enable+0x7c>)
     fce:	69e3      	ldr	r3, [r4, #28]
     fd0:	075b      	lsls	r3, r3, #29
     fd2:	d4fc      	bmi.n	fce <_i2c_m_sync_enable+0x36>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
     fd4:	8b62      	ldrh	r2, [r4, #26]
     fd6:	0912      	lsrs	r2, r2, #4
     fd8:	2303      	movs	r3, #3
     fda:	4013      	ands	r3, r2
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
     fdc:	2b01      	cmp	r3, #1
     fde:	d00b      	beq.n	ff8 <_i2c_m_sync_enable+0x60>
		timeout--;
     fe0:	3901      	subs	r1, #1
		if (timeout <= 0) {
     fe2:	2900      	cmp	r1, #0
     fe4:	dcf3      	bgt.n	fce <_i2c_m_sync_enable+0x36>
			if (--timeout_attempt)
     fe6:	3801      	subs	r0, #1
     fe8:	2800      	cmp	r0, #0
     fea:	d007      	beq.n	ffc <_i2c_m_sync_enable+0x64>
}

static inline void hri_sercomi2cm_clear_STATUS_reg(const void *const hw, hri_sercomi2cm_status_reg_t mask)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.STATUS.reg = mask;
     fec:	2310      	movs	r3, #16
     fee:	8363      	strh	r3, [r4, #26]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
     ff0:	69e3      	ldr	r3, [r4, #28]
     ff2:	075b      	lsls	r3, r3, #29
     ff4:	d4fc      	bmi.n	ff0 <_i2c_m_sync_enable+0x58>
     ff6:	e7e9      	b.n	fcc <_i2c_m_sync_enable+0x34>
	return ERR_NONE;
     ff8:	2000      	movs	r0, #0
}
     ffa:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
     ffc:	2006      	movs	r0, #6
     ffe:	4240      	negs	r0, r0
	return _i2c_m_enable_implementation(i2c_dev->hw);
    1000:	e7fb      	b.n	ffa <_i2c_m_sync_enable+0x62>
    1002:	46c0      	nop			; (mov r8, r8)
    1004:	000066cc 	.word	0x000066cc
    1008:	0000054c 	.word	0x0000054c
    100c:	000007b5 	.word	0x000007b5
    1010:	0000061c 	.word	0x0000061c
    1014:	0000ffff 	.word	0x0000ffff

00001018 <_i2c_m_sync_transfer>:
{
    1018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    101a:	0005      	movs	r5, r0
    101c:	000e      	movs	r6, r1
	void *   hw = i2c_dev->hw;
    101e:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1020:	1e43      	subs	r3, r0, #1
    1022:	4198      	sbcs	r0, r3
    1024:	b2c0      	uxtb	r0, r0
    1026:	4a93      	ldr	r2, [pc, #588]	; (1274 <_i2c_m_sync_transfer+0x25c>)
    1028:	4993      	ldr	r1, [pc, #588]	; (1278 <_i2c_m_sync_transfer+0x260>)
    102a:	4f94      	ldr	r7, [pc, #592]	; (127c <_i2c_m_sync_transfer+0x264>)
    102c:	47b8      	blx	r7
	ASSERT(i2c_dev->hw);
    102e:	6928      	ldr	r0, [r5, #16]
    1030:	1e43      	subs	r3, r0, #1
    1032:	4198      	sbcs	r0, r3
    1034:	b2c0      	uxtb	r0, r0
    1036:	22bd      	movs	r2, #189	; 0xbd
    1038:	00d2      	lsls	r2, r2, #3
    103a:	498f      	ldr	r1, [pc, #572]	; (1278 <_i2c_m_sync_transfer+0x260>)
    103c:	47b8      	blx	r7
	ASSERT(msg);
    103e:	0030      	movs	r0, r6
    1040:	1e43      	subs	r3, r0, #1
    1042:	4198      	sbcs	r0, r3
    1044:	b2c0      	uxtb	r0, r0
    1046:	4a8e      	ldr	r2, [pc, #568]	; (1280 <_i2c_m_sync_transfer+0x268>)
    1048:	498b      	ldr	r1, [pc, #556]	; (1278 <_i2c_m_sync_transfer+0x260>)
    104a:	47b8      	blx	r7
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    104c:	886b      	ldrh	r3, [r5, #2]
    104e:	05db      	lsls	r3, r3, #23
    1050:	d500      	bpl.n	1054 <_i2c_m_sync_transfer+0x3c>
    1052:	e10b      	b.n	126c <_i2c_m_sync_transfer+0x254>
	msg->flags |= I2C_M_BUSY;
    1054:	8872      	ldrh	r2, [r6, #2]
    1056:	2380      	movs	r3, #128	; 0x80
    1058:	005b      	lsls	r3, r3, #1
    105a:	469c      	mov	ip, r3
    105c:	431a      	orrs	r2, r3
    105e:	8072      	strh	r2, [r6, #2]
	i2c_dev->service.msg = *msg;
    1060:	002a      	movs	r2, r5
    1062:	0031      	movs	r1, r6
    1064:	c989      	ldmia	r1!, {r0, r3, r7}
    1066:	c289      	stmia	r2!, {r0, r3, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    1068:	6862      	ldr	r2, [r4, #4]
    106a:	4663      	mov	r3, ip
    106c:	4313      	orrs	r3, r2
    106e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1070:	69e3      	ldr	r3, [r4, #28]
    1072:	075b      	lsls	r3, r3, #29
    1074:	d4fc      	bmi.n	1070 <_i2c_m_sync_transfer+0x58>
	ret = _sercom_i2c_sync_send_address(i2c_dev);
    1076:	0028      	movs	r0, r5
    1078:	4b82      	ldr	r3, [pc, #520]	; (1284 <_i2c_m_sync_transfer+0x26c>)
    107a:	4798      	blx	r3
	if (ret) {
    107c:	2800      	cmp	r0, #0
    107e:	d100      	bne.n	1082 <_i2c_m_sync_transfer+0x6a>
    1080:	e09d      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    1082:	886b      	ldrh	r3, [r5, #2]
    1084:	4a80      	ldr	r2, [pc, #512]	; (1288 <_i2c_m_sync_transfer+0x270>)
    1086:	4013      	ands	r3, r2
    1088:	806b      	strh	r3, [r5, #2]
}
    108a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return I2C_ERR_BUS;
    108c:	2005      	movs	r0, #5
    108e:	4240      	negs	r0, r0
    1090:	e0a6      	b.n	11e0 <_i2c_m_sync_transfer+0x1c8>
			if (msg->flags & I2C_M_STOP) {
    1092:	8873      	ldrh	r3, [r6, #2]
    1094:	b21b      	sxth	r3, r3
    1096:	2b00      	cmp	r3, #0
    1098:	db04      	blt.n	10a4 <_i2c_m_sync_transfer+0x8c>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    109a:	886b      	ldrh	r3, [r5, #2]
    109c:	4a7a      	ldr	r2, [pc, #488]	; (1288 <_i2c_m_sync_transfer+0x270>)
    109e:	4013      	ands	r3, r2
    10a0:	806b      	strh	r3, [r5, #2]
			return ret;
    10a2:	e7f2      	b.n	108a <_i2c_m_sync_transfer+0x72>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    10a4:	6862      	ldr	r2, [r4, #4]
    10a6:	23c0      	movs	r3, #192	; 0xc0
    10a8:	029b      	lsls	r3, r3, #10
    10aa:	4313      	orrs	r3, r2
    10ac:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    10ae:	69e3      	ldr	r3, [r4, #28]
    10b0:	075b      	lsls	r3, r3, #29
    10b2:	d4fc      	bmi.n	10ae <_i2c_m_sync_transfer+0x96>
    10b4:	e7f1      	b.n	109a <_i2c_m_sync_transfer+0x82>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    10b6:	0753      	lsls	r3, r2, #29
    10b8:	d41b      	bmi.n	10f2 <_i2c_m_sync_transfer+0xda>
			if (msg->flags & I2C_M_TEN) {
    10ba:	886b      	ldrh	r3, [r5, #2]
    10bc:	055b      	lsls	r3, r3, #21
    10be:	d534      	bpl.n	112a <_i2c_m_sync_transfer+0x112>
				                              ((((msg->addr & TEN_ADDR_MASK) >> 8) | TEN_ADDR_FRAME) << 1) | I2C_M_RD
    10c0:	882a      	ldrh	r2, [r5, #0]
    10c2:	1212      	asrs	r2, r2, #8
    10c4:	0052      	lsls	r2, r2, #1
				                                  | (hri_sercomi2cm_read_ADDR_reg(hw) & SERCOM_I2CM_ADDR_HS));
    10c6:	2306      	movs	r3, #6
    10c8:	401a      	ands	r2, r3
    10ca:	69e3      	ldr	r3, [r4, #28]
    10cc:	075b      	lsls	r3, r3, #29
    10ce:	d4fc      	bmi.n	10ca <_i2c_m_sync_transfer+0xb2>
	return ((Sercom *)hw)->I2CM.ADDR.reg;
    10d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    10d2:	2180      	movs	r1, #128	; 0x80
    10d4:	01c9      	lsls	r1, r1, #7
    10d6:	400b      	ands	r3, r1
    10d8:	4313      	orrs	r3, r2
				hri_sercomi2cm_write_ADDR_reg(hw,
    10da:	22f1      	movs	r2, #241	; 0xf1
    10dc:	4313      	orrs	r3, r2
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    10de:	6263      	str	r3, [r4, #36]	; 0x24
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    10e0:	69e3      	ldr	r3, [r4, #28]
    10e2:	075b      	lsls	r3, r3, #29
    10e4:	d4fc      	bmi.n	10e0 <_i2c_m_sync_transfer+0xc8>
				msg->flags &= ~I2C_M_TEN;
    10e6:	886b      	ldrh	r3, [r5, #2]
    10e8:	4a68      	ldr	r2, [pc, #416]	; (128c <_i2c_m_sync_transfer+0x274>)
    10ea:	4013      	ands	r3, r2
    10ec:	806b      	strh	r3, [r5, #2]
				return I2C_OK;
    10ee:	2000      	movs	r0, #0
    10f0:	e065      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
				if (msg->len > 0) {
    10f2:	686b      	ldr	r3, [r5, #4]
    10f4:	2b00      	cmp	r3, #0
    10f6:	dd04      	ble.n	1102 <_i2c_m_sync_transfer+0xea>
					msg->flags |= I2C_M_FAIL;
    10f8:	886b      	ldrh	r3, [r5, #2]
    10fa:	2280      	movs	r2, #128	; 0x80
    10fc:	0152      	lsls	r2, r2, #5
    10fe:	4313      	orrs	r3, r2
    1100:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    1102:	886b      	ldrh	r3, [r5, #2]
    1104:	b21b      	sxth	r3, r3
    1106:	2b00      	cmp	r3, #0
    1108:	db06      	blt.n	1118 <_i2c_m_sync_transfer+0x100>
				msg->flags &= ~I2C_M_BUSY;
    110a:	886b      	ldrh	r3, [r5, #2]
    110c:	4a5e      	ldr	r2, [pc, #376]	; (1288 <_i2c_m_sync_transfer+0x270>)
    110e:	4013      	ands	r3, r2
    1110:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    1112:	2002      	movs	r0, #2
    1114:	4240      	negs	r0, r0
    1116:	e052      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1118:	6862      	ldr	r2, [r4, #4]
    111a:	23c0      	movs	r3, #192	; 0xc0
    111c:	029b      	lsls	r3, r3, #10
    111e:	4313      	orrs	r3, r2
    1120:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1122:	69e3      	ldr	r3, [r4, #28]
    1124:	075b      	lsls	r3, r3, #29
    1126:	d4fc      	bmi.n	1122 <_i2c_m_sync_transfer+0x10a>
    1128:	e7ef      	b.n	110a <_i2c_m_sync_transfer+0xf2>
			if (msg->len == 0) {
    112a:	6868      	ldr	r0, [r5, #4]
    112c:	2800      	cmp	r0, #0
    112e:	d111      	bne.n	1154 <_i2c_m_sync_transfer+0x13c>
				if (msg->flags & I2C_M_STOP) {
    1130:	886b      	ldrh	r3, [r5, #2]
    1132:	b21b      	sxth	r3, r3
    1134:	2b00      	cmp	r3, #0
    1136:	db04      	blt.n	1142 <_i2c_m_sync_transfer+0x12a>
				msg->flags &= ~I2C_M_BUSY;
    1138:	886b      	ldrh	r3, [r5, #2]
    113a:	4a53      	ldr	r2, [pc, #332]	; (1288 <_i2c_m_sync_transfer+0x270>)
    113c:	4013      	ands	r3, r2
    113e:	806b      	strh	r3, [r5, #2]
    1140:	e03d      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1142:	6862      	ldr	r2, [r4, #4]
    1144:	23c0      	movs	r3, #192	; 0xc0
    1146:	029b      	lsls	r3, r3, #10
    1148:	4313      	orrs	r3, r2
    114a:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    114c:	69e3      	ldr	r3, [r4, #28]
    114e:	075b      	lsls	r3, r3, #29
    1150:	d4fc      	bmi.n	114c <_i2c_m_sync_transfer+0x134>
    1152:	e7f1      	b.n	1138 <_i2c_m_sync_transfer+0x120>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    1154:	68ab      	ldr	r3, [r5, #8]
    1156:	781a      	ldrb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    1158:	2328      	movs	r3, #40	; 0x28
    115a:	54e2      	strb	r2, [r4, r3]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    115c:	69e3      	ldr	r3, [r4, #28]
    115e:	075b      	lsls	r3, r3, #29
    1160:	d4fc      	bmi.n	115c <_i2c_m_sync_transfer+0x144>
				msg->buffer++;
    1162:	68ab      	ldr	r3, [r5, #8]
    1164:	3301      	adds	r3, #1
    1166:	60ab      	str	r3, [r5, #8]
				msg->len--;
    1168:	686b      	ldr	r3, [r5, #4]
    116a:	3b01      	subs	r3, #1
    116c:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    116e:	2000      	movs	r0, #0
    1170:	e025      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
	} else if (flags & SB_FLAG) {
    1172:	07bb      	lsls	r3, r7, #30
    1174:	d578      	bpl.n	1268 <_i2c_m_sync_transfer+0x250>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    1176:	686b      	ldr	r3, [r5, #4]
    1178:	2b00      	cmp	r3, #0
    117a:	d06d      	beq.n	1258 <_i2c_m_sync_transfer+0x240>
    117c:	0752      	lsls	r2, r2, #29
    117e:	d46b      	bmi.n	1258 <_i2c_m_sync_transfer+0x240>
			msg->len--;
    1180:	3b01      	subs	r3, #1
    1182:	606b      	str	r3, [r5, #4]
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1184:	2b00      	cmp	r3, #0
    1186:	d101      	bne.n	118c <_i2c_m_sync_transfer+0x174>
    1188:	2900      	cmp	r1, #0
    118a:	d04c      	beq.n	1226 <_i2c_m_sync_transfer+0x20e>
    118c:	2b01      	cmp	r3, #1
    118e:	d048      	beq.n	1222 <_i2c_m_sync_transfer+0x20a>
			if (msg->len == 0) {
    1190:	686b      	ldr	r3, [r5, #4]
    1192:	2b00      	cmp	r3, #0
    1194:	d107      	bne.n	11a6 <_i2c_m_sync_transfer+0x18e>
				if (msg->flags & I2C_M_STOP) {
    1196:	886b      	ldrh	r3, [r5, #2]
    1198:	b21b      	sxth	r3, r3
    119a:	2b00      	cmp	r3, #0
    119c:	db4c      	blt.n	1238 <_i2c_m_sync_transfer+0x220>
				msg->flags &= ~I2C_M_BUSY;
    119e:	886b      	ldrh	r3, [r5, #2]
    11a0:	4a39      	ldr	r2, [pc, #228]	; (1288 <_i2c_m_sync_transfer+0x270>)
    11a2:	4013      	ands	r3, r2
    11a4:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    11a6:	68aa      	ldr	r2, [r5, #8]
    11a8:	1c53      	adds	r3, r2, #1
    11aa:	60ab      	str	r3, [r5, #8]
    11ac:	69e3      	ldr	r3, [r4, #28]
    11ae:	075b      	lsls	r3, r3, #29
    11b0:	d4fc      	bmi.n	11ac <_i2c_m_sync_transfer+0x194>
	return ((Sercom *)hw)->I2CM.DATA.reg;
    11b2:	2328      	movs	r3, #40	; 0x28
    11b4:	5ce3      	ldrb	r3, [r4, r3]
    11b6:	7013      	strb	r3, [r2, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    11b8:	2302      	movs	r3, #2
    11ba:	7623      	strb	r3, [r4, #24]
	return I2C_OK;
    11bc:	2000      	movs	r0, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    11be:	886b      	ldrh	r3, [r5, #2]
    11c0:	05db      	lsls	r3, r3, #23
    11c2:	d400      	bmi.n	11c6 <_i2c_m_sync_transfer+0x1ae>
    11c4:	e761      	b.n	108a <_i2c_m_sync_transfer+0x72>
	void *   hw      = i2c_dev->hw;
    11c6:	6928      	ldr	r0, [r5, #16]
	uint32_t timeout = 65535;
    11c8:	4a31      	ldr	r2, [pc, #196]	; (1290 <_i2c_m_sync_transfer+0x278>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    11ca:	7e03      	ldrb	r3, [r0, #24]
    11cc:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
    11ce:	001f      	movs	r7, r3
		if (timeout-- == 0) {
    11d0:	1e51      	subs	r1, r2, #1
    11d2:	2a00      	cmp	r2, #0
    11d4:	d100      	bne.n	11d8 <_i2c_m_sync_transfer+0x1c0>
    11d6:	e759      	b.n	108c <_i2c_m_sync_transfer+0x74>
    11d8:	000a      	movs	r2, r1
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    11da:	079b      	lsls	r3, r3, #30
    11dc:	d0f5      	beq.n	11ca <_i2c_m_sync_transfer+0x1b2>
	return I2C_OK;
    11de:	2000      	movs	r0, #0
		if (ret) {
    11e0:	2800      	cmp	r0, #0
    11e2:	d000      	beq.n	11e6 <_i2c_m_sync_transfer+0x1ce>
    11e4:	e755      	b.n	1092 <_i2c_m_sync_transfer+0x7a>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    11e6:	6823      	ldr	r3, [r4, #0]
	tmp = (tmp & SERCOM_I2CM_CTRLA_SCLSM) >> SERCOM_I2CM_CTRLA_SCLSM_Pos;
    11e8:	0edb      	lsrs	r3, r3, #27
    11ea:	2101      	movs	r1, #1
    11ec:	4019      	ands	r1, r3
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    11ee:	69e3      	ldr	r3, [r4, #28]
    11f0:	075b      	lsls	r3, r3, #29
    11f2:	d4fc      	bmi.n	11ee <_i2c_m_sync_transfer+0x1d6>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    11f4:	8b62      	ldrh	r2, [r4, #26]
    11f6:	b292      	uxth	r2, r2
	if (flags & MB_FLAG) {
    11f8:	07fb      	lsls	r3, r7, #31
    11fa:	d5ba      	bpl.n	1172 <_i2c_m_sync_transfer+0x15a>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    11fc:	0793      	lsls	r3, r2, #30
    11fe:	d400      	bmi.n	1202 <_i2c_m_sync_transfer+0x1ea>
    1200:	e759      	b.n	10b6 <_i2c_m_sync_transfer+0x9e>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    1202:	2301      	movs	r3, #1
    1204:	7623      	strb	r3, [r4, #24]
			msg->flags |= I2C_M_FAIL;
    1206:	886b      	ldrh	r3, [r5, #2]
    1208:	2180      	movs	r1, #128	; 0x80
    120a:	0149      	lsls	r1, r1, #5
    120c:	430b      	orrs	r3, r1
    120e:	806b      	strh	r3, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1210:	886b      	ldrh	r3, [r5, #2]
    1212:	491d      	ldr	r1, [pc, #116]	; (1288 <_i2c_m_sync_transfer+0x270>)
    1214:	400b      	ands	r3, r1
    1216:	806b      	strh	r3, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    1218:	07d3      	lsls	r3, r2, #31
    121a:	d522      	bpl.n	1262 <_i2c_m_sync_transfer+0x24a>
				return I2C_ERR_BUS;
    121c:	2005      	movs	r0, #5
    121e:	4240      	negs	r0, r0
    1220:	e7cd      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
			if ((msg->len == 0 && !sclsm) || (msg->len == 1 && sclsm)) {
    1222:	2900      	cmp	r1, #0
    1224:	d0b4      	beq.n	1190 <_i2c_m_sync_transfer+0x178>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1226:	6862      	ldr	r2, [r4, #4]
    1228:	2380      	movs	r3, #128	; 0x80
    122a:	02db      	lsls	r3, r3, #11
    122c:	4313      	orrs	r3, r2
    122e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1230:	69e3      	ldr	r3, [r4, #28]
    1232:	075b      	lsls	r3, r3, #29
    1234:	d4fc      	bmi.n	1230 <_i2c_m_sync_transfer+0x218>
    1236:	e7ab      	b.n	1190 <_i2c_m_sync_transfer+0x178>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    1238:	6863      	ldr	r3, [r4, #4]
    123a:	4a13      	ldr	r2, [pc, #76]	; (1288 <_i2c_m_sync_transfer+0x270>)
    123c:	4013      	ands	r3, r2
    123e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1240:	69e3      	ldr	r3, [r4, #28]
    1242:	075b      	lsls	r3, r3, #29
    1244:	d4fc      	bmi.n	1240 <_i2c_m_sync_transfer+0x228>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1246:	6862      	ldr	r2, [r4, #4]
    1248:	23c0      	movs	r3, #192	; 0xc0
    124a:	029b      	lsls	r3, r3, #10
    124c:	4313      	orrs	r3, r2
    124e:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->I2CM.SYNCBUSY.reg & reg) {
    1250:	69e3      	ldr	r3, [r4, #28]
    1252:	075b      	lsls	r3, r3, #29
    1254:	d4fc      	bmi.n	1250 <_i2c_m_sync_transfer+0x238>
    1256:	e7a2      	b.n	119e <_i2c_m_sync_transfer+0x186>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1258:	2302      	movs	r3, #2
    125a:	7623      	strb	r3, [r4, #24]
			return I2C_NACK;
    125c:	2002      	movs	r0, #2
    125e:	4240      	negs	r0, r0
    1260:	e7ad      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
			return I2C_ERR_BAD_ADDRESS;
    1262:	2004      	movs	r0, #4
    1264:	4240      	negs	r0, r0
    1266:	e7aa      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
	return I2C_OK;
    1268:	2000      	movs	r0, #0
    126a:	e7a8      	b.n	11be <_i2c_m_sync_transfer+0x1a6>
		return I2C_ERR_BUSY;
    126c:	2006      	movs	r0, #6
    126e:	4240      	negs	r0, r0
    1270:	e70b      	b.n	108a <_i2c_m_sync_transfer+0x72>
    1272:	46c0      	nop			; (mov r8, r8)
    1274:	000005e7 	.word	0x000005e7
    1278:	000066cc 	.word	0x000066cc
    127c:	000007b5 	.word	0x000007b5
    1280:	000005e9 	.word	0x000005e9
    1284:	00000c41 	.word	0x00000c41
    1288:	fffffeff 	.word	0xfffffeff
    128c:	fffffbff 	.word	0xfffffbff
    1290:	0000ffff 	.word	0x0000ffff

00001294 <SERCOM5_Handler>:

	return NULL;
}

void SERCOM5_Handler(void)
{
    1294:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom5_dev);
    1296:	4b02      	ldr	r3, [pc, #8]	; (12a0 <SERCOM5_Handler+0xc>)
    1298:	6818      	ldr	r0, [r3, #0]
    129a:	4b02      	ldr	r3, [pc, #8]	; (12a4 <SERCOM5_Handler+0x10>)
    129c:	4798      	blx	r3
}
    129e:	bd10      	pop	{r4, pc}
    12a0:	20000878 	.word	0x20000878
    12a4:	0000096d 	.word	0x0000096d

000012a8 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    12a8:	4a0e      	ldr	r2, [pc, #56]	; (12e4 <_sysctrl_init_sources+0x3c>)
    12aa:	6a11      	ldr	r1, [r2, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    12ac:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    12ae:	6a13      	ldr	r3, [r2, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    12b0:	0f9b      	lsrs	r3, r3, #30
    12b2:	079b      	lsls	r3, r3, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    12b4:	0409      	lsls	r1, r1, #16
    12b6:	480c      	ldr	r0, [pc, #48]	; (12e8 <_sysctrl_init_sources+0x40>)
    12b8:	4001      	ands	r1, r0
#endif
	                                SYSCTRL_OSC8M_PRESC(CONF_OSC8M_PRESC)
	                                | (CONF_OSC8M_RUNSTDBY << SYSCTRL_OSC8M_RUNSTDBY_Pos)
    12ba:	430b      	orrs	r3, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    12bc:	2102      	movs	r1, #2
    12be:	430b      	orrs	r3, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    12c0:	6213      	str	r3, [r2, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    12c2:	6993      	ldr	r3, [r2, #24]
    12c4:	430b      	orrs	r3, r1
    12c6:	6193      	str	r3, [r2, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    12c8:	7f13      	ldrb	r3, [r2, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    12ca:	311d      	adds	r1, #29
    12cc:	400b      	ands	r3, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    12ce:	7713      	strb	r3, [r2, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    12d0:	4b04      	ldr	r3, [pc, #16]	; (12e4 <_sysctrl_init_sources+0x3c>)
    12d2:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    12d4:	071b      	lsls	r3, r3, #28
    12d6:	d5fb      	bpl.n	12d0 <_sysctrl_init_sources+0x28>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    12d8:	4a02      	ldr	r2, [pc, #8]	; (12e4 <_sysctrl_init_sources+0x3c>)
    12da:	6a13      	ldr	r3, [r2, #32]
    12dc:	2180      	movs	r1, #128	; 0x80
    12de:	430b      	orrs	r3, r1
    12e0:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    12e2:	4770      	bx	lr
    12e4:	40000800 	.word	0x40000800
    12e8:	0fff0000 	.word	0x0fff0000

000012ec <_sysctrl_init_referenced_generators>:
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    12ec:	4a02      	ldr	r2, [pc, #8]	; (12f8 <_sysctrl_init_referenced_generators+0xc>)
    12ee:	6993      	ldr	r3, [r2, #24]
    12f0:	2102      	movs	r1, #2
    12f2:	438b      	bics	r3, r1
    12f4:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    12f6:	4770      	bx	lr
    12f8:	40000800 	.word	0x40000800

000012fc <_system_time_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
    12fc:	4b02      	ldr	r3, [pc, #8]	; (1308 <_system_time_init+0xc>)
    12fe:	4a03      	ldr	r2, [pc, #12]	; (130c <_system_time_init+0x10>)
    1300:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
    1302:	2205      	movs	r2, #5
    1304:	601a      	str	r2, [r3, #0]
	                | (1 << SysTick_CTRL_CLKSOURCE_Pos);
}
    1306:	4770      	bx	lr
    1308:	e000e010 	.word	0xe000e010
    130c:	00ffffff 	.word	0x00ffffff

00001310 <_delay_init>:
/**
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
    1310:	b510      	push	{r4, lr}
	_system_time_init(hw);
    1312:	4b01      	ldr	r3, [pc, #4]	; (1318 <_delay_init+0x8>)
    1314:	4798      	blx	r3
}
    1316:	bd10      	pop	{r4, pc}
    1318:	000012fd 	.word	0x000012fd

0000131c <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
    131c:	0e08      	lsrs	r0, r1, #24
	uint32_t buf = cycles;

	while (n--) {
    131e:	e00b      	b.n	1338 <_delay_cycles+0x1c>
		SysTick->LOAD = 0xFFFFFF;
    1320:	4b0b      	ldr	r3, [pc, #44]	; (1350 <_delay_cycles+0x34>)
    1322:	480c      	ldr	r0, [pc, #48]	; (1354 <_delay_cycles+0x38>)
    1324:	6058      	str	r0, [r3, #4]
		SysTick->VAL  = 0xFFFFFF;
    1326:	6098      	str	r0, [r3, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    1328:	4b09      	ldr	r3, [pc, #36]	; (1350 <_delay_cycles+0x34>)
    132a:	681b      	ldr	r3, [r3, #0]
    132c:	03db      	lsls	r3, r3, #15
    132e:	d5fb      	bpl.n	1328 <_delay_cycles+0xc>
			;
		buf -= 0xFFFFFF;
    1330:	4b09      	ldr	r3, [pc, #36]	; (1358 <_delay_cycles+0x3c>)
    1332:	469c      	mov	ip, r3
    1334:	4461      	add	r1, ip
	while (n--) {
    1336:	0010      	movs	r0, r2
    1338:	1e42      	subs	r2, r0, #1
    133a:	b2d2      	uxtb	r2, r2
    133c:	2800      	cmp	r0, #0
    133e:	d1ef      	bne.n	1320 <_delay_cycles+0x4>
	}

	SysTick->LOAD = buf;
    1340:	4b03      	ldr	r3, [pc, #12]	; (1350 <_delay_cycles+0x34>)
    1342:	6059      	str	r1, [r3, #4]
	SysTick->VAL  = buf;
    1344:	6099      	str	r1, [r3, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    1346:	4b02      	ldr	r3, [pc, #8]	; (1350 <_delay_cycles+0x34>)
    1348:	681b      	ldr	r3, [r3, #0]
    134a:	03db      	lsls	r3, r3, #15
    134c:	d5fb      	bpl.n	1346 <_delay_cycles+0x2a>
		;
}
    134e:	4770      	bx	lr
    1350:	e000e010 	.word	0xe000e010
    1354:	00ffffff 	.word	0x00ffffff
    1358:	ff000001 	.word	0xff000001

0000135c <main>:
uint8_t NumberSamples = 10;

uint8_t i2c_read_data(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len);

int main(void)
{
    135c:	b5f0      	push	{r4, r5, r6, r7, lr}
    135e:	46c6      	mov	lr, r8
    1360:	b500      	push	{lr}
    1362:	b084      	sub	sp, #16
	/* Initializes MCU, drivers and middle-ware */
	atmel_start_init();
    1364:	4b55      	ldr	r3, [pc, #340]	; (14bc <main+0x160>)
    1366:	4798      	blx	r3
	sht40x_basic_initialize(SHT40_AD1B_VARIANT);
    1368:	2000      	movs	r0, #0
    136a:	4b55      	ldr	r3, [pc, #340]	; (14c0 <main+0x164>)
    136c:	4798      	blx	r3
	sht40x_info(&sht40xInfo);
    136e:	4c55      	ldr	r4, [pc, #340]	; (14c4 <main+0x168>)
    1370:	0020      	movs	r0, r4
    1372:	4b55      	ldr	r3, [pc, #340]	; (14c8 <main+0x16c>)
    1374:	4798      	blx	r3
	
	sht40x_interface_debug_print("Chip Name: \t%s\r\n", sht40xInfo.chip_name);
    1376:	0021      	movs	r1, r4
    1378:	4854      	ldr	r0, [pc, #336]	; (14cc <main+0x170>)
    137a:	4d55      	ldr	r5, [pc, #340]	; (14d0 <main+0x174>)
    137c:	47a8      	blx	r5
	sht40x_interface_debug_print("Manufacturer: \t%s\r\n",sht40xInfo.manufacturer_name);
    137e:	0021      	movs	r1, r4
    1380:	310a      	adds	r1, #10
    1382:	4854      	ldr	r0, [pc, #336]	; (14d4 <main+0x178>)
    1384:	47a8      	blx	r5
	sht40x_interface_debug_print("Interface Protocol: \t%s\r\n", sht40xInfo.interface);
    1386:	0021      	movs	r1, r4
    1388:	3123      	adds	r1, #35	; 0x23
    138a:	4853      	ldr	r0, [pc, #332]	; (14d8 <main+0x17c>)
    138c:	47a8      	blx	r5
	sht40x_interface_debug_print("Supply Volt Max: \t%.1f V\r\n",sht40xInfo.supply_voltage_max_v);
    138e:	4e53      	ldr	r6, [pc, #332]	; (14dc <main+0x180>)
    1390:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    1392:	47b0      	blx	r6
    1394:	0002      	movs	r2, r0
    1396:	000b      	movs	r3, r1
    1398:	4851      	ldr	r0, [pc, #324]	; (14e0 <main+0x184>)
    139a:	47a8      	blx	r5
	sht40x_interface_debug_print("Supply Volt Min: \t%.1f V\r\n",sht40xInfo.supply_voltage_min_v);
    139c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    139e:	47b0      	blx	r6
    13a0:	0002      	movs	r2, r0
    13a2:	000b      	movs	r3, r1
    13a4:	484f      	ldr	r0, [pc, #316]	; (14e4 <main+0x188>)
    13a6:	47a8      	blx	r5
	sht40x_interface_debug_print("Maximum Current: \t%.1f uA\r\n",sht40xInfo.max_current_ma);
    13a8:	6b20      	ldr	r0, [r4, #48]	; 0x30
    13aa:	47b0      	blx	r6
    13ac:	0002      	movs	r2, r0
    13ae:	000b      	movs	r3, r1
    13b0:	484d      	ldr	r0, [pc, #308]	; (14e8 <main+0x18c>)
    13b2:	47a8      	blx	r5
	sht40x_interface_debug_print("Max Temperature: \t%.1f C\r\n",sht40xInfo.temperature_max);
    13b4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
    13b6:	47b0      	blx	r6
    13b8:	0002      	movs	r2, r0
    13ba:	000b      	movs	r3, r1
    13bc:	484b      	ldr	r0, [pc, #300]	; (14ec <main+0x190>)
    13be:	47a8      	blx	r5
	sht40x_interface_debug_print("Diver Version: \t\tV%.1f.%.2d\r\n",(sht40xInfo.driver_version /1000), (uint8_t)(sht40xInfo.driver_version - (uint8_t)(sht40xInfo.driver_version / 100)*100));
    13c0:	6be4      	ldr	r4, [r4, #60]	; 0x3c
    13c2:	4f4b      	ldr	r7, [pc, #300]	; (14f0 <main+0x194>)
    13c4:	494b      	ldr	r1, [pc, #300]	; (14f4 <main+0x198>)
    13c6:	1c20      	adds	r0, r4, #0
    13c8:	47b8      	blx	r7
    13ca:	9003      	str	r0, [sp, #12]
    13cc:	494a      	ldr	r1, [pc, #296]	; (14f8 <main+0x19c>)
    13ce:	1c20      	adds	r0, r4, #0
    13d0:	47b8      	blx	r7
    13d2:	4f4a      	ldr	r7, [pc, #296]	; (14fc <main+0x1a0>)
    13d4:	47b8      	blx	r7
    13d6:	b2c3      	uxtb	r3, r0
    13d8:	2064      	movs	r0, #100	; 0x64
    13da:	4358      	muls	r0, r3
    13dc:	4b48      	ldr	r3, [pc, #288]	; (1500 <main+0x1a4>)
    13de:	4798      	blx	r3
    13e0:	1c01      	adds	r1, r0, #0
    13e2:	1c20      	adds	r0, r4, #0
    13e4:	4b47      	ldr	r3, [pc, #284]	; (1504 <main+0x1a8>)
    13e6:	4798      	blx	r3
    13e8:	47b8      	blx	r7
    13ea:	b2c4      	uxtb	r4, r0
    13ec:	9803      	ldr	r0, [sp, #12]
    13ee:	47b0      	blx	r6
    13f0:	0002      	movs	r2, r0
    13f2:	000b      	movs	r3, r1
    13f4:	9400      	str	r4, [sp, #0]
    13f6:	4844      	ldr	r0, [pc, #272]	; (1508 <main+0x1ac>)
    13f8:	47a8      	blx	r5
    13fa:	e049      	b.n	1490 <main+0x134>
		err =  sht40x_basic_get_temp_rh(SHT40X_PRECISION_HIGH, &dataRead);
		if(err)
		{
		sht40x_interface_debug_print("failed to read\n");
		}
		sht40x_interface_debug_print("\nTemp C: %.2f\n", dataRead.temperature_C);
    13fc:	4c43      	ldr	r4, [pc, #268]	; (150c <main+0x1b0>)
    13fe:	4e37      	ldr	r6, [pc, #220]	; (14dc <main+0x180>)
    1400:	6820      	ldr	r0, [r4, #0]
    1402:	47b0      	blx	r6
    1404:	0002      	movs	r2, r0
    1406:	000b      	movs	r3, r1
    1408:	4841      	ldr	r0, [pc, #260]	; (1510 <main+0x1b4>)
    140a:	4d31      	ldr	r5, [pc, #196]	; (14d0 <main+0x174>)
    140c:	47a8      	blx	r5
		sht40x_interface_debug_print("Temp F: %.2f\n", dataRead.temperature_F);
    140e:	6860      	ldr	r0, [r4, #4]
    1410:	47b0      	blx	r6
    1412:	0002      	movs	r2, r0
    1414:	000b      	movs	r3, r1
    1416:	483f      	ldr	r0, [pc, #252]	; (1514 <main+0x1b8>)
    1418:	47a8      	blx	r5
		sht40x_interface_debug_print("Humidity: %.2f\n", dataRead.humidity);
    141a:	68a0      	ldr	r0, [r4, #8]
    141c:	47b0      	blx	r6
    141e:	0002      	movs	r2, r0
    1420:	000b      	movs	r3, r1
    1422:	483d      	ldr	r0, [pc, #244]	; (1518 <main+0x1bc>)
    1424:	47a8      	blx	r5

		/**Measure Temp and humidity with n number of samples */
		err = sht40x_basic_get_temp_humidity_nSample(SHT40X_PRECISION_HIGH, &dataRead, NumberSamples);
    1426:	4b3d      	ldr	r3, [pc, #244]	; (151c <main+0x1c0>)
    1428:	781a      	ldrb	r2, [r3, #0]
    142a:	0021      	movs	r1, r4
    142c:	2000      	movs	r0, #0
    142e:	4b3c      	ldr	r3, [pc, #240]	; (1520 <main+0x1c4>)
    1430:	4798      	blx	r3
    1432:	4f3c      	ldr	r7, [pc, #240]	; (1524 <main+0x1c8>)
    1434:	6038      	str	r0, [r7, #0]
		sht40x_interface_debug_print("\nTemp C sampled: %.2f\n", dataRead.temperature_C);
    1436:	6820      	ldr	r0, [r4, #0]
    1438:	47b0      	blx	r6
    143a:	0002      	movs	r2, r0
    143c:	000b      	movs	r3, r1
    143e:	483a      	ldr	r0, [pc, #232]	; (1528 <main+0x1cc>)
    1440:	47a8      	blx	r5
		sht40x_interface_debug_print("Humidity sampled: %.2f\n", dataRead.humidity);
    1442:	68a0      	ldr	r0, [r4, #8]
    1444:	47b0      	blx	r6
    1446:	0002      	movs	r2, r0
    1448:	000b      	movs	r3, r1
    144a:	4838      	ldr	r0, [pc, #224]	; (152c <main+0x1d0>)
    144c:	47a8      	blx	r5

		/** Get device unique ID */
		err = sht40x_basic_get_serial_number((uint32_t*) &UID);
    144e:	4b38      	ldr	r3, [pc, #224]	; (1530 <main+0x1d4>)
    1450:	4698      	mov	r8, r3
    1452:	0018      	movs	r0, r3
    1454:	4b37      	ldr	r3, [pc, #220]	; (1534 <main+0x1d8>)
    1456:	4798      	blx	r3
    1458:	6038      	str	r0, [r7, #0]
		if(err)
		{
		/**< do something */
		}
		sht40x_interface_debug_print("serial number : %lu\n", UID);
    145a:	4643      	mov	r3, r8
    145c:	6819      	ldr	r1, [r3, #0]
    145e:	4836      	ldr	r0, [pc, #216]	; (1538 <main+0x1dc>)
    1460:	47a8      	blx	r5

		/** Activate heater and measure temperature */
		err = sht40x_basic_activate_heater(SHT40X_HEATER_POWER_20mW_100mS, &dataRead);
    1462:	0021      	movs	r1, r4
    1464:	2005      	movs	r0, #5
    1466:	4b35      	ldr	r3, [pc, #212]	; (153c <main+0x1e0>)
    1468:	4798      	blx	r3
    146a:	6038      	str	r0, [r7, #0]
		sht40x_interface_debug_print("\nHeater Temp C: %.2f\n", dataRead.temperature_C);
    146c:	6820      	ldr	r0, [r4, #0]
    146e:	47b0      	blx	r6
    1470:	0002      	movs	r2, r0
    1472:	000b      	movs	r3, r1
    1474:	4832      	ldr	r0, [pc, #200]	; (1540 <main+0x1e4>)
    1476:	47a8      	blx	r5
		sht40x_interface_debug_print("Heater Temp F: %.2f\n", dataRead.temperature_F);
    1478:	6860      	ldr	r0, [r4, #4]
    147a:	47b0      	blx	r6
    147c:	0002      	movs	r2, r0
    147e:	000b      	movs	r3, r1
    1480:	4830      	ldr	r0, [pc, #192]	; (1544 <main+0x1e8>)
    1482:	47a8      	blx	r5
		sht40x_interface_debug_print("Heater Humidity: %.2f\n", dataRead.humidity);
    1484:	68a0      	ldr	r0, [r4, #8]
    1486:	47b0      	blx	r6
    1488:	0002      	movs	r2, r0
    148a:	000b      	movs	r3, r1
    148c:	482e      	ldr	r0, [pc, #184]	; (1548 <main+0x1ec>)
    148e:	47a8      	blx	r5
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    1490:	2280      	movs	r2, #128	; 0x80
    1492:	0352      	lsls	r2, r2, #13
    1494:	23c0      	movs	r3, #192	; 0xc0
    1496:	05db      	lsls	r3, r3, #23
    1498:	61da      	str	r2, [r3, #28]
		sht40x_interface_delay_ms(2000);
    149a:	20fa      	movs	r0, #250	; 0xfa
    149c:	00c0      	lsls	r0, r0, #3
    149e:	4b2b      	ldr	r3, [pc, #172]	; (154c <main+0x1f0>)
    14a0:	4798      	blx	r3
		err =  sht40x_basic_get_temp_rh(SHT40X_PRECISION_HIGH, &dataRead);
    14a2:	491a      	ldr	r1, [pc, #104]	; (150c <main+0x1b0>)
    14a4:	2000      	movs	r0, #0
    14a6:	4b2a      	ldr	r3, [pc, #168]	; (1550 <main+0x1f4>)
    14a8:	4798      	blx	r3
    14aa:	4b1e      	ldr	r3, [pc, #120]	; (1524 <main+0x1c8>)
    14ac:	6018      	str	r0, [r3, #0]
		if(err)
    14ae:	2800      	cmp	r0, #0
    14b0:	d0a4      	beq.n	13fc <main+0xa0>
		sht40x_interface_debug_print("failed to read\n");
    14b2:	4828      	ldr	r0, [pc, #160]	; (1554 <main+0x1f8>)
    14b4:	4b06      	ldr	r3, [pc, #24]	; (14d0 <main+0x174>)
    14b6:	4798      	blx	r3
    14b8:	e7a0      	b.n	13fc <main+0xa0>
    14ba:	46c0      	nop			; (mov r8, r8)
    14bc:	00000115 	.word	0x00000115
    14c0:	00001b99 	.word	0x00001b99
    14c4:	20000960 	.word	0x20000960
    14c8:	00001b21 	.word	0x00001b21
    14cc:	000066e8 	.word	0x000066e8
    14d0:	00001e21 	.word	0x00001e21
    14d4:	000066fc 	.word	0x000066fc
    14d8:	00006710 	.word	0x00006710
    14dc:	00004791 	.word	0x00004791
    14e0:	0000672c 	.word	0x0000672c
    14e4:	00006748 	.word	0x00006748
    14e8:	00006764 	.word	0x00006764
    14ec:	00006780 	.word	0x00006780
    14f0:	00002521 	.word	0x00002521
    14f4:	447a0000 	.word	0x447a0000
    14f8:	42c80000 	.word	0x42c80000
    14fc:	0000204d 	.word	0x0000204d
    1500:	00002eb9 	.word	0x00002eb9
    1504:	00002b41 	.word	0x00002b41
    1508:	0000679c 	.word	0x0000679c
    150c:	20000944 	.word	0x20000944
    1510:	000067cc 	.word	0x000067cc
    1514:	000067dc 	.word	0x000067dc
    1518:	000067ec 	.word	0x000067ec
    151c:	20000000 	.word	0x20000000
    1520:	00001ca5 	.word	0x00001ca5
    1524:	20000958 	.word	0x20000958
    1528:	000067fc 	.word	0x000067fc
    152c:	00006814 	.word	0x00006814
    1530:	20000954 	.word	0x20000954
    1534:	00001d91 	.word	0x00001d91
    1538:	0000682c 	.word	0x0000682c
    153c:	00001dbd 	.word	0x00001dbd
    1540:	00006844 	.word	0x00006844
    1544:	0000685c 	.word	0x0000685c
    1548:	00006874 	.word	0x00006874
    154c:	00001e15 	.word	0x00001e15
    1550:	00001c75 	.word	0x00001c75
    1554:	000067bc 	.word	0x000067bc

00001558 <serial_print>:
	}
}


void serial_print(char *const pBuffer, uint8_t u8Length)
{
    1558:	b570      	push	{r4, r5, r6, lr}
    155a:	b082      	sub	sp, #8
    155c:	0006      	movs	r6, r0
    155e:	000c      	movs	r4, r1
	struct io_descriptor *io;

	//usart_async_register_callback(&USART_0, USART_ASYNC_TXC_CB, tx_cb_USART_0);
	/*usart_async_register_callback(&USART_0, USART_ASYNC_RXC_CB, rx_cb);
	usart_async_register_callback(&USART_0, USART_ASYNC_ERROR_CB, err_cb);*/
	usart_async_get_io_descriptor(&USART_0, &io);
    1560:	4d07      	ldr	r5, [pc, #28]	; (1580 <serial_print+0x28>)
    1562:	a901      	add	r1, sp, #4
    1564:	0028      	movs	r0, r5
    1566:	4b07      	ldr	r3, [pc, #28]	; (1584 <serial_print+0x2c>)
    1568:	4798      	blx	r3
	usart_async_enable(&USART_0);
    156a:	0028      	movs	r0, r5
    156c:	4b06      	ldr	r3, [pc, #24]	; (1588 <serial_print+0x30>)
    156e:	4798      	blx	r3

	io_write(io, (uint8_t*)pBuffer, u8Length);
    1570:	b2a2      	uxth	r2, r4
    1572:	0031      	movs	r1, r6
    1574:	9801      	ldr	r0, [sp, #4]
    1576:	4b05      	ldr	r3, [pc, #20]	; (158c <serial_print+0x34>)
    1578:	4798      	blx	r3
	
}
    157a:	b002      	add	sp, #8
    157c:	bd70      	pop	{r4, r5, r6, pc}
    157e:	46c0      	nop			; (mov r8, r8)
    1580:	200008d0 	.word	0x200008d0
    1584:	00000785 	.word	0x00000785
    1588:	00000759 	.word	0x00000759
    158c:	000004e1 	.word	0x000004e1

00001590 <i2c_read_data>:

uint8_t i2c_read_data(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
    1590:	b5f0      	push	{r4, r5, r6, r7, lr}
    1592:	b083      	sub	sp, #12
    1594:	0005      	movs	r5, r0
    1596:	0016      	movs	r6, r2
    1598:	001f      	movs	r7, r3
	struct io_descriptor *I2C_0_io;

	i2c_m_sync_get_io_descriptor(&I2C_0, &I2C_0_io);
    159a:	4c0b      	ldr	r4, [pc, #44]	; (15c8 <i2c_read_data+0x38>)
    159c:	a901      	add	r1, sp, #4
    159e:	0020      	movs	r0, r4
    15a0:	4b0a      	ldr	r3, [pc, #40]	; (15cc <i2c_read_data+0x3c>)
    15a2:	4798      	blx	r3
	i2c_m_sync_enable(&I2C_0);
    15a4:	0020      	movs	r0, r4
    15a6:	4b0a      	ldr	r3, [pc, #40]	; (15d0 <i2c_read_data+0x40>)
    15a8:	4798      	blx	r3
	i2c_m_sync_set_slaveaddr(&I2C_0, addr, I2C_M_SEVEN);
    15aa:	b229      	sxth	r1, r5
    15ac:	2280      	movs	r2, #128	; 0x80
    15ae:	0112      	lsls	r2, r2, #4
    15b0:	0020      	movs	r0, r4
    15b2:	4b08      	ldr	r3, [pc, #32]	; (15d4 <i2c_read_data+0x44>)
    15b4:	4798      	blx	r3
	
	io_read(I2C_0_io, buf,  len);
    15b6:	003a      	movs	r2, r7
    15b8:	0031      	movs	r1, r6
    15ba:	9801      	ldr	r0, [sp, #4]
    15bc:	4b06      	ldr	r3, [pc, #24]	; (15d8 <i2c_read_data+0x48>)
    15be:	4798      	blx	r3
	return 0;
}
    15c0:	2000      	movs	r0, #0
    15c2:	b003      	add	sp, #12
    15c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    15c6:	46c0      	nop			; (mov r8, r8)
    15c8:	20000920 	.word	0x20000920
    15cc:	000004d7 	.word	0x000004d7
    15d0:	000004b9 	.word	0x000004b9
    15d4:	000004c5 	.word	0x000004c5
    15d8:	00000519 	.word	0x00000519

000015dc <i2c_write_data>:

uint8_t i2c_write_data(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
    15dc:	b570      	push	{r4, r5, r6, lr}
    15de:	b084      	sub	sp, #16
    15e0:	0005      	movs	r5, r0
    15e2:	466b      	mov	r3, sp
    15e4:	1dde      	adds	r6, r3, #7
    15e6:	71d9      	strb	r1, [r3, #7]
    struct io_descriptor *I2C_0_io;

    i2c_m_sync_get_io_descriptor(&I2C_0, &I2C_0_io);
    15e8:	4c0a      	ldr	r4, [pc, #40]	; (1614 <i2c_write_data+0x38>)
    15ea:	a903      	add	r1, sp, #12
    15ec:	0020      	movs	r0, r4
    15ee:	4b0a      	ldr	r3, [pc, #40]	; (1618 <i2c_write_data+0x3c>)
    15f0:	4798      	blx	r3
    i2c_m_sync_enable(&I2C_0);
    15f2:	0020      	movs	r0, r4
    15f4:	4b09      	ldr	r3, [pc, #36]	; (161c <i2c_write_data+0x40>)
    15f6:	4798      	blx	r3
    i2c_m_sync_set_slaveaddr(&I2C_0, addr, I2C_M_SEVEN);
    15f8:	b229      	sxth	r1, r5
    15fa:	2280      	movs	r2, #128	; 0x80
    15fc:	0112      	lsls	r2, r2, #4
    15fe:	0020      	movs	r0, r4
    1600:	4b07      	ldr	r3, [pc, #28]	; (1620 <i2c_write_data+0x44>)
    1602:	4798      	blx	r3
	
	io_write(I2C_0_io, (uint8_t *)&reg, 1);
    1604:	2201      	movs	r2, #1
    1606:	0031      	movs	r1, r6
    1608:	9803      	ldr	r0, [sp, #12]
    160a:	4b06      	ldr	r3, [pc, #24]	; (1624 <i2c_write_data+0x48>)
    160c:	4798      	blx	r3
	return 0;	
    160e:	2000      	movs	r0, #0
    1610:	b004      	add	sp, #16
    1612:	bd70      	pop	{r4, r5, r6, pc}
    1614:	20000920 	.word	0x20000920
    1618:	000004d7 	.word	0x000004d7
    161c:	000004b9 	.word	0x000004b9
    1620:	000004c5 	.word	0x000004c5
    1624:	000004e1 	.word	0x000004e1

00001628 <a_sht40x_i2c_write>:
            - 0 success
            - 1 failed to write
* @note none
*/
uint8_t a_sht40x_i2c_write(sht40x_handle_t *const pHandle, uint8_t u8Reg, void *pBuf, uint8_t u8Length)
{
    1628:	b510      	push	{r4, lr}
    if(pHandle->i2c_write(pHandle->i2c_address, u8Reg, (uint8_t*)pBuf, u8Length) !=  0)
    162a:	68c4      	ldr	r4, [r0, #12]
    162c:	b29b      	uxth	r3, r3
    162e:	7e00      	ldrb	r0, [r0, #24]
    1630:	47a0      	blx	r4
    1632:	2800      	cmp	r0, #0
    1634:	d100      	bne.n	1638 <a_sht40x_i2c_write+0x10>
    {
        return 1;                                      /**< return an error if failed to execute */
    }
    return 0;                                          /**< return success */
}
    1636:	bd10      	pop	{r4, pc}
        return 1;                                      /**< return an error if failed to execute */
    1638:	2001      	movs	r0, #1
    163a:	e7fc      	b.n	1636 <a_sht40x_i2c_write+0xe>

0000163c <a_sht40x_i2c_read>:
*          - 1 failed to read
* @note none
*/

uint8_t a_sht40x_i2c_read(sht40x_handle_t  *const pHandle, uint16_t u8Reg, void *pBuf, uint8_t u8Length)
{
    163c:	b510      	push	{r4, lr}
    if(pHandle->i2c_read(pHandle->i2c_address, u8Reg, (uint8_t*)pBuf, u8Length) != 0)
    163e:	6884      	ldr	r4, [r0, #8]
    1640:	b29b      	uxth	r3, r3
    1642:	b2c9      	uxtb	r1, r1
    1644:	7e00      	ldrb	r0, [r0, #24]
    1646:	47a0      	blx	r4
    1648:	2800      	cmp	r0, #0
    164a:	d100      	bne.n	164e <a_sht40x_i2c_read+0x12>
    {
        return 1;                                       /**< return an error if failed to execute */
    }
    return 0;                                           /**< return success */
}
    164c:	bd10      	pop	{r4, pc}
        return 1;                                       /**< return an error if failed to execute */
    164e:	2001      	movs	r0, #1
    1650:	e7fc      	b.n	164c <a_sht40x_i2c_read+0x10>
	...

00001654 <a_sht40x_print_error_msg>:
* @param[in] *pBuffer point to the string to be printed
* @return none
* @note   none
*/
void a_sht40x_print_error_msg(sht40x_handle_t *const pHandle, char *const pBuffer)
{
    1654:	b510      	push	{r4, lr}
#ifdef SHT40X_DEBUG_MODE
    pHandle->debug_print("sht40x: failed to %s.\r\n", pBuffer);
    1656:	6943      	ldr	r3, [r0, #20]
    1658:	4801      	ldr	r0, [pc, #4]	; (1660 <a_sht40x_print_error_msg+0xc>)
    165a:	4798      	blx	r3
#endif // SHT40X_DEBUG_MODE
}
    165c:	bd10      	pop	{r4, pc}
    165e:	46c0      	nop			; (mov r8, r8)
    1660:	00006898 	.word	0x00006898

00001664 <sht40x_init>:
 *            - 2 pHandle is NULL
 *            - 3 linked functions is NULL
 * @note      none
 */
uint8_t sht40x_init(sht40x_handle_t *pHandle)
{
    1664:	b510      	push	{r4, lr}
    1666:	1e04      	subs	r4, r0, #0

    if(pHandle == NULL)
    1668:	d031      	beq.n	16ce <sht40x_init+0x6a>
        return 2;     /**< return failed error */
    if(pHandle->debug_print == NULL)
    166a:	6943      	ldr	r3, [r0, #20]
    166c:	2b00      	cmp	r3, #0
    166e:	d030      	beq.n	16d2 <sht40x_init+0x6e>
        return 3;      /**< return failed error */

    if(pHandle->delay_ms == NULL)
    1670:	6902      	ldr	r2, [r0, #16]
    1672:	2a00      	cmp	r2, #0
    1674:	d011      	beq.n	169a <sht40x_init+0x36>
        pHandle->debug_print("sht40x: delay_ms is null\r\n");
#endif // SHT40X_DEBUG_MODE
        return 3;
    }

    if(pHandle->i2c_init == NULL )
    1676:	6802      	ldr	r2, [r0, #0]
    1678:	2a00      	cmp	r2, #0
    167a:	d012      	beq.n	16a2 <sht40x_init+0x3e>
        pHandle->debug_print("sht40x: i2c_init is null\r\n");
#endif // SHT40X_DEBUG_MODE
        return 3;
    }

    if(pHandle->i2c_deinit == NULL )
    167c:	6841      	ldr	r1, [r0, #4]
    167e:	2900      	cmp	r1, #0
    1680:	d013      	beq.n	16aa <sht40x_init+0x46>
        pHandle->debug_print("sht40x: i2c_deinit is null\r\n");
#endif // SHT40X_DEBUG_MODE
        return 3;
    }

    if(pHandle->i2c_read == NULL )
    1682:	6881      	ldr	r1, [r0, #8]
    1684:	2900      	cmp	r1, #0
    1686:	d014      	beq.n	16b2 <sht40x_init+0x4e>
        pHandle->debug_print("sht40x: i2c_read is null\r\n");
#endif // SHT40X_DEBUG_MODE
        return 3;
    }

    if(pHandle->i2c_write == NULL )
    1688:	68c1      	ldr	r1, [r0, #12]
    168a:	2900      	cmp	r1, #0
    168c:	d015      	beq.n	16ba <sht40x_init+0x56>
        pHandle->debug_print("sht40x: i2c_write is null\r\n");
#endif // SHT40X_DEBUG_MODE
        return 3;
    }

    if(pHandle->i2c_init())
    168e:	4790      	blx	r2
    1690:	2800      	cmp	r0, #0
    1692:	d116      	bne.n	16c2 <sht40x_init+0x5e>
    {
        a_sht40x_print_error_msg(pHandle, "initialize i2c");
        return 1 ;
    }
    pHandle->inited = 1;
    1694:	2301      	movs	r3, #1
    1696:	76a3      	strb	r3, [r4, #26]
    return 0;                   /**< return success */
    1698:	e01a      	b.n	16d0 <sht40x_init+0x6c>
        pHandle->debug_print("sht40x: delay_ms is null\r\n");
    169a:	480f      	ldr	r0, [pc, #60]	; (16d8 <sht40x_init+0x74>)
    169c:	4798      	blx	r3
        return 3;
    169e:	2003      	movs	r0, #3
    16a0:	e016      	b.n	16d0 <sht40x_init+0x6c>
        pHandle->debug_print("sht40x: i2c_init is null\r\n");
    16a2:	480e      	ldr	r0, [pc, #56]	; (16dc <sht40x_init+0x78>)
    16a4:	4798      	blx	r3
        return 3;
    16a6:	2003      	movs	r0, #3
    16a8:	e012      	b.n	16d0 <sht40x_init+0x6c>
        pHandle->debug_print("sht40x: i2c_deinit is null\r\n");
    16aa:	480d      	ldr	r0, [pc, #52]	; (16e0 <sht40x_init+0x7c>)
    16ac:	4798      	blx	r3
        return 3;
    16ae:	2003      	movs	r0, #3
    16b0:	e00e      	b.n	16d0 <sht40x_init+0x6c>
        pHandle->debug_print("sht40x: i2c_read is null\r\n");
    16b2:	480c      	ldr	r0, [pc, #48]	; (16e4 <sht40x_init+0x80>)
    16b4:	4798      	blx	r3
        return 3;
    16b6:	2003      	movs	r0, #3
    16b8:	e00a      	b.n	16d0 <sht40x_init+0x6c>
        pHandle->debug_print("sht40x: i2c_write is null\r\n");
    16ba:	480b      	ldr	r0, [pc, #44]	; (16e8 <sht40x_init+0x84>)
    16bc:	4798      	blx	r3
        return 3;
    16be:	2003      	movs	r0, #3
    16c0:	e006      	b.n	16d0 <sht40x_init+0x6c>
        a_sht40x_print_error_msg(pHandle, "initialize i2c");
    16c2:	490a      	ldr	r1, [pc, #40]	; (16ec <sht40x_init+0x88>)
    16c4:	0020      	movs	r0, r4
    16c6:	4b0a      	ldr	r3, [pc, #40]	; (16f0 <sht40x_init+0x8c>)
    16c8:	4798      	blx	r3
        return 1 ;
    16ca:	2001      	movs	r0, #1
    16cc:	e000      	b.n	16d0 <sht40x_init+0x6c>
        return 2;     /**< return failed error */
    16ce:	2002      	movs	r0, #2
}
    16d0:	bd10      	pop	{r4, pc}
        return 3;      /**< return failed error */
    16d2:	2003      	movs	r0, #3
    16d4:	e7fc      	b.n	16d0 <sht40x_init+0x6c>
    16d6:	46c0      	nop			; (mov r8, r8)
    16d8:	000068b0 	.word	0x000068b0
    16dc:	000068cc 	.word	0x000068cc
    16e0:	000068e8 	.word	0x000068e8
    16e4:	00006908 	.word	0x00006908
    16e8:	00006924 	.word	0x00006924
    16ec:	00006940 	.word	0x00006940
    16f0:	00001655 	.word	0x00001655

000016f4 <sht40x_set_addr>:
 * @note      none
 */
uint8_t sht40x_set_addr(sht40x_handle_t *const pHandle)
{

    if(pHandle == NULL)
    16f4:	2800      	cmp	r0, #0
    16f6:	d008      	beq.n	170a <sht40x_set_addr+0x16>
        return 2;     /**< return failed error */
    if(pHandle->inited != 1)
    16f8:	7e83      	ldrb	r3, [r0, #26]
    16fa:	2b01      	cmp	r3, #1
    16fc:	d001      	beq.n	1702 <sht40x_set_addr+0xe>
        return 3;      /**< return failed error */
    16fe:	2003      	movs	r0, #3
        a_sht40x_print_error_msg(pHandle, "set i2c address");
        return 1;           /*< failed */
    }

    return 0;     /*< success */
}
    1700:	4770      	bx	lr
    pHandle->i2c_address = pHandle->addres;
    1702:	7ec3      	ldrb	r3, [r0, #27]
    1704:	7603      	strb	r3, [r0, #24]
    return 0;     /*< success */
    1706:	2000      	movs	r0, #0
    1708:	e7fa      	b.n	1700 <sht40x_set_addr+0xc>
        return 2;     /**< return failed error */
    170a:	2002      	movs	r0, #2
    170c:	e7f8      	b.n	1700 <sht40x_set_addr+0xc>

0000170e <sht40x_set_variant>:
 * @note      none
 */
uint8_t sht40x_set_variant(sht40x_handle_t *const pHandle, sht40x_variant_t variant)
{

    if(pHandle == NULL)
    170e:	2800      	cmp	r0, #0
    1710:	d01f      	beq.n	1752 <sht40x_set_variant+0x44>
        return 2;     /**< return failed error */
    if(pHandle->inited != 1)
    1712:	7e83      	ldrb	r3, [r0, #26]
    1714:	2b01      	cmp	r3, #1
    1716:	d001      	beq.n	171c <sht40x_set_variant+0xe>
        return 3;      /**< return failed error */
    1718:	2003      	movs	r0, #3
        }

    }

    return 0;   /**< success */
}
    171a:	4770      	bx	lr
    pHandle->variant = variant;
    171c:	7641      	strb	r1, [r0, #25]
    switch(variant)
    171e:	2901      	cmp	r1, #1
    1720:	d00b      	beq.n	173a <sht40x_set_variant+0x2c>
    1722:	2900      	cmp	r1, #0
    1724:	d005      	beq.n	1732 <sht40x_set_variant+0x24>
    1726:	2902      	cmp	r1, #2
    1728:	d00b      	beq.n	1742 <sht40x_set_variant+0x34>
    172a:	2903      	cmp	r1, #3
    172c:	d00d      	beq.n	174a <sht40x_set_variant+0x3c>
    return 0;   /**< success */
    172e:	2000      	movs	r0, #0
    1730:	e7f3      	b.n	171a <sht40x_set_variant+0xc>
            pHandle->addres = (sht40x_i2c_address_t)SHT40_AD1B_IIC_ADDRESS;
    1732:	2344      	movs	r3, #68	; 0x44
    1734:	76c3      	strb	r3, [r0, #27]
    return 0;   /**< success */
    1736:	2000      	movs	r0, #0
            break;
    1738:	e7ef      	b.n	171a <sht40x_set_variant+0xc>
            pHandle->addres = (sht40x_i2c_address_t)SHT40_BD1B_IIC_ADDRESS;
    173a:	2345      	movs	r3, #69	; 0x45
    173c:	76c3      	strb	r3, [r0, #27]
    return 0;   /**< success */
    173e:	2000      	movs	r0, #0
            break;
    1740:	e7eb      	b.n	171a <sht40x_set_variant+0xc>
            pHandle->addres = (sht40x_i2c_address_t)SHT41_AD1B_IIC_ADDRESS;
    1742:	2344      	movs	r3, #68	; 0x44
    1744:	76c3      	strb	r3, [r0, #27]
    return 0;   /**< success */
    1746:	2000      	movs	r0, #0
            break;
    1748:	e7e7      	b.n	171a <sht40x_set_variant+0xc>
            pHandle->addres = (sht40x_i2c_address_t)SHT45_AD1B_IIC_ADDRESS;
    174a:	2344      	movs	r3, #68	; 0x44
    174c:	76c3      	strb	r3, [r0, #27]
    return 0;   /**< success */
    174e:	2000      	movs	r0, #0
            break;
    1750:	e7e3      	b.n	171a <sht40x_set_variant+0xc>
        return 2;     /**< return failed error */
    1752:	2002      	movs	r0, #2
    1754:	e7e1      	b.n	171a <sht40x_set_variant+0xc>
	...

00001758 <sht40x_get_temp_rh>:
 *            - 2 pHandle is NULL
 *            - 3 pHandle is not initialized
 * @note      none
 */
uint8_t sht40x_get_temp_rh(sht40x_handle_t *const pHandle,  sht40x_precision_t precision, sht40x_data_t *pData)
{
    1758:	b5f0      	push	{r4, r5, r6, r7, lr}
    175a:	46de      	mov	lr, fp
    175c:	4657      	mov	r7, sl
    175e:	464e      	mov	r6, r9
    1760:	4645      	mov	r5, r8
    1762:	b5e0      	push	{r5, r6, r7, lr}
    1764:	b085      	sub	sp, #20
    1766:	0006      	movs	r6, r0
    1768:	0015      	movs	r5, r2
    uint8_t err;
    uint8_t pStatus[RESPONSE_LENGTH];

    if(pHandle == NULL)
    176a:	2800      	cmp	r0, #0
    176c:	d100      	bne.n	1770 <sht40x_get_temp_rh+0x18>
    176e:	e080      	b.n	1872 <sht40x_get_temp_rh+0x11a>
        return 2;     /**< return failed error */
    if(pHandle->inited != 1)
    1770:	7e83      	ldrb	r3, [r0, #26]
    1772:	2b01      	cmp	r3, #1
    1774:	d008      	beq.n	1788 <sht40x_get_temp_rh+0x30>
        return 3;      /**< return failed error */
    1776:	2403      	movs	r4, #3
    memcpy(pData->pTempRawData, pStatus, 2);
    pData->pHumidityRawData[0] = pStatus[3];
    pData->pHumidityRawData[1] = pStatus[4];

    return 0;
}
    1778:	0020      	movs	r0, r4
    177a:	b005      	add	sp, #20
    177c:	bc3c      	pop	{r2, r3, r4, r5}
    177e:	4690      	mov	r8, r2
    1780:	4699      	mov	r9, r3
    1782:	46a2      	mov	sl, r4
    1784:	46ab      	mov	fp, r5
    1786:	bdf0      	pop	{r4, r5, r6, r7, pc}
    err = a_sht40x_i2c_write(pHandle, READ_PRECISION[precision], DUMMY_DATA, 0);
    1788:	4b3b      	ldr	r3, [pc, #236]	; (1878 <sht40x_get_temp_rh+0x120>)
    178a:	5c59      	ldrb	r1, [r3, r1]
    178c:	2300      	movs	r3, #0
    178e:	2200      	movs	r2, #0
    1790:	4c3a      	ldr	r4, [pc, #232]	; (187c <sht40x_get_temp_rh+0x124>)
    1792:	47a0      	blx	r4
    1794:	1e04      	subs	r4, r0, #0
    if(err)
    1796:	d160      	bne.n	185a <sht40x_get_temp_rh+0x102>
    pHandle->delay_ms(10);      /**< wait 10 ms for conversion to complete */
    1798:	200a      	movs	r0, #10
    179a:	6933      	ldr	r3, [r6, #16]
    179c:	4798      	blx	r3
    err = a_sht40x_i2c_read(pHandle, DUMMY_DATA, (uint8_t *)pStatus, RESPONSE_LENGTH);  /**< read result */
    179e:	2306      	movs	r3, #6
    17a0:	aa02      	add	r2, sp, #8
    17a2:	2100      	movs	r1, #0
    17a4:	0030      	movs	r0, r6
    17a6:	4c36      	ldr	r4, [pc, #216]	; (1880 <sht40x_get_temp_rh+0x128>)
    17a8:	47a0      	blx	r4
    17aa:	1e04      	subs	r4, r0, #0
    if(err)
    17ac:	d15a      	bne.n	1864 <sht40x_get_temp_rh+0x10c>
    pData->temperature_C = (pStatus[0] << 8) |  pStatus[1];
    17ae:	ab02      	add	r3, sp, #8
    17b0:	7818      	ldrb	r0, [r3, #0]
    17b2:	0200      	lsls	r0, r0, #8
    17b4:	785b      	ldrb	r3, [r3, #1]
    17b6:	4318      	orrs	r0, r3
    17b8:	4b32      	ldr	r3, [pc, #200]	; (1884 <sht40x_get_temp_rh+0x12c>)
    17ba:	469b      	mov	fp, r3
    17bc:	4798      	blx	r3
    pData->temperature_C = ((pData->temperature_C/65535.0) * 175) - 45;
    17be:	4b32      	ldr	r3, [pc, #200]	; (1888 <sht40x_get_temp_rh+0x130>)
    17c0:	469a      	mov	sl, r3
    17c2:	4798      	blx	r3
    17c4:	4b31      	ldr	r3, [pc, #196]	; (188c <sht40x_get_temp_rh+0x134>)
    17c6:	4699      	mov	r9, r3
    17c8:	2200      	movs	r2, #0
    17ca:	4b31      	ldr	r3, [pc, #196]	; (1890 <sht40x_get_temp_rh+0x138>)
    17cc:	47c8      	blx	r9
    17ce:	4b31      	ldr	r3, [pc, #196]	; (1894 <sht40x_get_temp_rh+0x13c>)
    17d0:	4698      	mov	r8, r3
    17d2:	2200      	movs	r2, #0
    17d4:	4b30      	ldr	r3, [pc, #192]	; (1898 <sht40x_get_temp_rh+0x140>)
    17d6:	47c0      	blx	r8
    17d8:	4f30      	ldr	r7, [pc, #192]	; (189c <sht40x_get_temp_rh+0x144>)
    17da:	2200      	movs	r2, #0
    17dc:	4b30      	ldr	r3, [pc, #192]	; (18a0 <sht40x_get_temp_rh+0x148>)
    17de:	47b8      	blx	r7
    17e0:	4e30      	ldr	r6, [pc, #192]	; (18a4 <sht40x_get_temp_rh+0x14c>)
    17e2:	47b0      	blx	r6
    17e4:	6028      	str	r0, [r5, #0]
    pData->temperature_F = (pData->temperature_C * 9/5) + 32;
    17e6:	4930      	ldr	r1, [pc, #192]	; (18a8 <sht40x_get_temp_rh+0x150>)
    17e8:	4b30      	ldr	r3, [pc, #192]	; (18ac <sht40x_get_temp_rh+0x154>)
    17ea:	4798      	blx	r3
    17ec:	4930      	ldr	r1, [pc, #192]	; (18b0 <sht40x_get_temp_rh+0x158>)
    17ee:	4b31      	ldr	r3, [pc, #196]	; (18b4 <sht40x_get_temp_rh+0x15c>)
    17f0:	4798      	blx	r3
    17f2:	2184      	movs	r1, #132	; 0x84
    17f4:	05c9      	lsls	r1, r1, #23
    17f6:	4b30      	ldr	r3, [pc, #192]	; (18b8 <sht40x_get_temp_rh+0x160>)
    17f8:	4798      	blx	r3
    17fa:	6068      	str	r0, [r5, #4]
    pData->humidity = (pStatus[3] << 8) | pStatus[4];
    17fc:	ab02      	add	r3, sp, #8
    17fe:	78db      	ldrb	r3, [r3, #3]
    1800:	9300      	str	r3, [sp, #0]
    1802:	0218      	lsls	r0, r3, #8
    1804:	ab02      	add	r3, sp, #8
    1806:	791b      	ldrb	r3, [r3, #4]
    1808:	9301      	str	r3, [sp, #4]
    180a:	4318      	orrs	r0, r3
    180c:	47d8      	blx	fp
    pData->humidity = ((pData->humidity/65535.0) * 125) - 6;
    180e:	47d0      	blx	sl
    1810:	2200      	movs	r2, #0
    1812:	4b1f      	ldr	r3, [pc, #124]	; (1890 <sht40x_get_temp_rh+0x138>)
    1814:	47c8      	blx	r9
    1816:	2200      	movs	r2, #0
    1818:	4b28      	ldr	r3, [pc, #160]	; (18bc <sht40x_get_temp_rh+0x164>)
    181a:	47c0      	blx	r8
    181c:	2200      	movs	r2, #0
    181e:	4b28      	ldr	r3, [pc, #160]	; (18c0 <sht40x_get_temp_rh+0x168>)
    1820:	47b8      	blx	r7
    1822:	47b0      	blx	r6
    1824:	1c06      	adds	r6, r0, #0
    pData->humidity =  pData->humidity > HUMIDITY_MAX ? HUMIDITY_MAX: pData->humidity;                     /**< if humidity is high than max allowed, set to 100 */
    1826:	4927      	ldr	r1, [pc, #156]	; (18c4 <sht40x_get_temp_rh+0x16c>)
    1828:	4b27      	ldr	r3, [pc, #156]	; (18c8 <sht40x_get_temp_rh+0x170>)
    182a:	4798      	blx	r3
    182c:	2800      	cmp	r0, #0
    182e:	d000      	beq.n	1832 <sht40x_get_temp_rh+0xda>
    1830:	4e24      	ldr	r6, [pc, #144]	; (18c4 <sht40x_get_temp_rh+0x16c>)
    pData->humidity =  pData->humidity < HUMIDITY_MIN ? HUMIDITY_MIN:  pData->humidity;                    /**< if humidity is less than min allowed, set to 0 */
    1832:	2100      	movs	r1, #0
    1834:	1c30      	adds	r0, r6, #0
    1836:	4b25      	ldr	r3, [pc, #148]	; (18cc <sht40x_get_temp_rh+0x174>)
    1838:	4798      	blx	r3
    183a:	2800      	cmp	r0, #0
    183c:	d117      	bne.n	186e <sht40x_get_temp_rh+0x116>
    183e:	60ae      	str	r6, [r5, #8]
    memcpy(pData->pTempRawData, pStatus, 2);
    1840:	0028      	movs	r0, r5
    1842:	300c      	adds	r0, #12
    1844:	2202      	movs	r2, #2
    1846:	a902      	add	r1, sp, #8
    1848:	4b21      	ldr	r3, [pc, #132]	; (18d0 <sht40x_get_temp_rh+0x178>)
    184a:	4798      	blx	r3
    pData->pHumidityRawData[0] = pStatus[3];
    184c:	466b      	mov	r3, sp
    184e:	781b      	ldrb	r3, [r3, #0]
    1850:	73ab      	strb	r3, [r5, #14]
    pData->pHumidityRawData[1] = pStatus[4];
    1852:	466b      	mov	r3, sp
    1854:	791b      	ldrb	r3, [r3, #4]
    1856:	73eb      	strb	r3, [r5, #15]
    return 0;
    1858:	e78e      	b.n	1778 <sht40x_get_temp_rh+0x20>
        a_sht40x_print_error_msg(pHandle, "write temp and humidity cmd");
    185a:	491e      	ldr	r1, [pc, #120]	; (18d4 <sht40x_get_temp_rh+0x17c>)
    185c:	0030      	movs	r0, r6
    185e:	4b1e      	ldr	r3, [pc, #120]	; (18d8 <sht40x_get_temp_rh+0x180>)
    1860:	4798      	blx	r3
        return err;  /**< failed*/
    1862:	e789      	b.n	1778 <sht40x_get_temp_rh+0x20>
        a_sht40x_print_error_msg(pHandle, "read temp and humidity");
    1864:	491d      	ldr	r1, [pc, #116]	; (18dc <sht40x_get_temp_rh+0x184>)
    1866:	0030      	movs	r0, r6
    1868:	4b1b      	ldr	r3, [pc, #108]	; (18d8 <sht40x_get_temp_rh+0x180>)
    186a:	4798      	blx	r3
        return err;  /**< failed*/
    186c:	e784      	b.n	1778 <sht40x_get_temp_rh+0x20>
    pData->humidity =  pData->humidity < HUMIDITY_MIN ? HUMIDITY_MIN:  pData->humidity;                    /**< if humidity is less than min allowed, set to 0 */
    186e:	2600      	movs	r6, #0
    1870:	e7e5      	b.n	183e <sht40x_get_temp_rh+0xe6>
        return 2;     /**< return failed error */
    1872:	2402      	movs	r4, #2
    1874:	e780      	b.n	1778 <sht40x_get_temp_rh+0x20>
    1876:	46c0      	nop			; (mov r8, r8)
    1878:	0000688c 	.word	0x0000688c
    187c:	00001629 	.word	0x00001629
    1880:	0000163d 	.word	0x0000163d
    1884:	00002eb9 	.word	0x00002eb9
    1888:	00004791 	.word	0x00004791
    188c:	00003579 	.word	0x00003579
    1890:	40efffe0 	.word	0x40efffe0
    1894:	00003be1 	.word	0x00003be1
    1898:	4065e000 	.word	0x4065e000
    189c:	000040e1 	.word	0x000040e1
    18a0:	40468000 	.word	0x40468000
    18a4:	00004835 	.word	0x00004835
    18a8:	41100000 	.word	0x41100000
    18ac:	00002901 	.word	0x00002901
    18b0:	40a00000 	.word	0x40a00000
    18b4:	00002521 	.word	0x00002521
    18b8:	000021fd 	.word	0x000021fd
    18bc:	405f4000 	.word	0x405f4000
    18c0:	40180000 	.word	0x40180000
    18c4:	42c80000 	.word	0x42c80000
    18c8:	00001fe5 	.word	0x00001fe5
    18cc:	00001fbd 	.word	0x00001fbd
    18d0:	000049e5 	.word	0x000049e5
    18d4:	00006988 	.word	0x00006988
    18d8:	00001655 	.word	0x00001655
    18dc:	000069a4 	.word	0x000069a4

000018e0 <sht40x_get_serial_number>:
 *            - 2 pHandle is NULL
 *            - 3 pHandle is not initialized
 * @note      none
 */
uint8_t sht40x_get_serial_number(sht40x_handle_t *const pHandle, uint32_t *pSerial_Number)
{
    18e0:	b570      	push	{r4, r5, r6, lr}
    18e2:	b082      	sub	sp, #8
    18e4:	0004      	movs	r4, r0
    18e6:	000e      	movs	r6, r1
    uint8_t temp_data[4];         /**< temporary data to hold serial number */
    uint8_t count = 3;
    uint8_t dataOut[4];
    int index;

    if(pHandle == NULL)
    18e8:	2800      	cmp	r0, #0
    18ea:	d039      	beq.n	1960 <sht40x_get_serial_number+0x80>
        return 2;     /**< return failed error */
    if(pHandle->inited != 1)
    18ec:	7e83      	ldrb	r3, [r0, #26]
    18ee:	2b01      	cmp	r3, #1
    18f0:	d003      	beq.n	18fa <sht40x_get_serial_number+0x1a>
        return 3;      /**< return failed error */
    18f2:	2503      	movs	r5, #3
    }
   memcpy(serial.pBuffer, dataOut, 4);
  *pSerial_Number = serial.raw;

    return 0;           /**< success */
}
    18f4:	0028      	movs	r0, r5
    18f6:	b002      	add	sp, #8
    18f8:	bd70      	pop	{r4, r5, r6, pc}
    memset(temp_data, 0, 4);
    18fa:	2300      	movs	r3, #0
    18fc:	9301      	str	r3, [sp, #4]
     err = a_sht40x_i2c_write(pHandle, SHT40X_READ_SERIAL_NUMBER_CMD, DUMMY_DATA, 0);
    18fe:	2200      	movs	r2, #0
    1900:	2189      	movs	r1, #137	; 0x89
    1902:	4d18      	ldr	r5, [pc, #96]	; (1964 <sht40x_get_serial_number+0x84>)
    1904:	47a8      	blx	r5
    1906:	1e05      	subs	r5, r0, #0
    if(err)
    1908:	d112      	bne.n	1930 <sht40x_get_serial_number+0x50>
    pHandle->delay_ms(10);
    190a:	200a      	movs	r0, #10
    190c:	6923      	ldr	r3, [r4, #16]
    190e:	4798      	blx	r3
    err = a_sht40x_i2c_read(pHandle, DUMMY_DATA, (uint8_t *)temp_data, RESPONSE_LENGTH);
    1910:	2306      	movs	r3, #6
    1912:	aa01      	add	r2, sp, #4
    1914:	2100      	movs	r1, #0
    1916:	0020      	movs	r0, r4
    1918:	4d13      	ldr	r5, [pc, #76]	; (1968 <sht40x_get_serial_number+0x88>)
    191a:	47a8      	blx	r5
    191c:	1e05      	subs	r5, r0, #0
    if(err)
    191e:	d10c      	bne.n	193a <sht40x_get_serial_number+0x5a>
	temp_data[2] = temp_data[3];
    1920:	ab01      	add	r3, sp, #4
    1922:	78da      	ldrb	r2, [r3, #3]
    1924:	709a      	strb	r2, [r3, #2]
	temp_data[3] = temp_data[4];
    1926:	791a      	ldrb	r2, [r3, #4]
    1928:	70da      	strb	r2, [r3, #3]
  for( index = 0; index < 4; ++index)
    192a:	2200      	movs	r2, #0
    uint8_t count = 3;
    192c:	2303      	movs	r3, #3
  for( index = 0; index < 4; ++index)
    192e:	e010      	b.n	1952 <sht40x_get_serial_number+0x72>
        a_sht40x_print_error_msg(pHandle, "write UID cmd");
    1930:	490e      	ldr	r1, [pc, #56]	; (196c <sht40x_get_serial_number+0x8c>)
    1932:	0020      	movs	r0, r4
    1934:	4b0e      	ldr	r3, [pc, #56]	; (1970 <sht40x_get_serial_number+0x90>)
    1936:	4798      	blx	r3
        return err;  /**< failed*/
    1938:	e7dc      	b.n	18f4 <sht40x_get_serial_number+0x14>
        a_sht40x_print_error_msg(pHandle, "get UID");
    193a:	490e      	ldr	r1, [pc, #56]	; (1974 <sht40x_get_serial_number+0x94>)
    193c:	0020      	movs	r0, r4
    193e:	4b0c      	ldr	r3, [pc, #48]	; (1970 <sht40x_get_serial_number+0x90>)
    1940:	4798      	blx	r3
        return err;  /**< failed*/
    1942:	e7d7      	b.n	18f4 <sht40x_get_serial_number+0x14>
        dataOut[count] = temp_data[index];     /**< move data into a temporarily buffer in reverse order*/
    1944:	a901      	add	r1, sp, #4
    1946:	5c89      	ldrb	r1, [r1, r2]
    1948:	4668      	mov	r0, sp
    194a:	54c1      	strb	r1, [r0, r3]
        count--;
    194c:	3b01      	subs	r3, #1
    194e:	b2db      	uxtb	r3, r3
  for( index = 0; index < 4; ++index)
    1950:	3201      	adds	r2, #1
    1952:	2a03      	cmp	r2, #3
    1954:	ddf6      	ble.n	1944 <sht40x_get_serial_number+0x64>
   memcpy(serial.pBuffer, dataOut, 4);
    1956:	9b00      	ldr	r3, [sp, #0]
    1958:	4a07      	ldr	r2, [pc, #28]	; (1978 <sht40x_get_serial_number+0x98>)
    195a:	6013      	str	r3, [r2, #0]
  *pSerial_Number = serial.raw;
    195c:	6033      	str	r3, [r6, #0]
    return 0;           /**< success */
    195e:	e7c9      	b.n	18f4 <sht40x_get_serial_number+0x14>
        return 2;     /**< return failed error */
    1960:	2502      	movs	r5, #2
    1962:	e7c7      	b.n	18f4 <sht40x_get_serial_number+0x14>
    1964:	00001629 	.word	0x00001629
    1968:	0000163d 	.word	0x0000163d
    196c:	000069bc 	.word	0x000069bc
    1970:	00001655 	.word	0x00001655
    1974:	000069cc 	.word	0x000069cc
    1978:	2000087c 	.word	0x2000087c

0000197c <sht40x_activate_heater>:
 *            - 2 pHandle is NULL
 *            - 3 pHandle is not initialized
 * @note      Depending on heater setting selected, this routine can take up to 1000 ms delay
 */
uint8_t sht40x_activate_heater(sht40x_handle_t *const pHandle, sht40x_heater_power_t power, sht40x_data_t *pData)
{
    197c:	b5f0      	push	{r4, r5, r6, r7, lr}
    197e:	46de      	mov	lr, fp
    1980:	4657      	mov	r7, sl
    1982:	464e      	mov	r6, r9
    1984:	4645      	mov	r5, r8
    1986:	b5e0      	push	{r5, r6, r7, lr}
    1988:	b085      	sub	sp, #20
    198a:	0006      	movs	r6, r0
    198c:	000f      	movs	r7, r1
    198e:	0015      	movs	r5, r2

    uint8_t err;
    uint8_t pStatus[RESPONSE_LENGTH];


    if(pHandle == NULL)
    1990:	2800      	cmp	r0, #0
    1992:	d100      	bne.n	1996 <sht40x_activate_heater+0x1a>
    1994:	e08d      	b.n	1ab2 <sht40x_activate_heater+0x136>
        return 2;     /**< return failed error */
    if(pHandle->inited != 1)
    1996:	7e83      	ldrb	r3, [r0, #26]
    1998:	2b01      	cmp	r3, #1
    199a:	d008      	beq.n	19ae <sht40x_activate_heater+0x32>
        return 3;      /**< return failed error */
    199c:	2403      	movs	r4, #3

    return 0;


    return 0;
}
    199e:	0020      	movs	r0, r4
    19a0:	b005      	add	sp, #20
    19a2:	bc3c      	pop	{r2, r3, r4, r5}
    19a4:	4690      	mov	r8, r2
    19a6:	4699      	mov	r9, r3
    19a8:	46a2      	mov	sl, r4
    19aa:	46ab      	mov	fp, r5
    19ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    err = a_sht40x_i2c_write(pHandle, HEATER_POWER[power], DUMMY_DATA, 0);
    19ae:	4b42      	ldr	r3, [pc, #264]	; (1ab8 <sht40x_activate_heater+0x13c>)
    19b0:	185b      	adds	r3, r3, r1
    19b2:	7919      	ldrb	r1, [r3, #4]
    19b4:	2300      	movs	r3, #0
    19b6:	2200      	movs	r2, #0
    19b8:	4c40      	ldr	r4, [pc, #256]	; (1abc <sht40x_activate_heater+0x140>)
    19ba:	47a0      	blx	r4
    19bc:	1e04      	subs	r4, r0, #0
    if(err)
    19be:	d109      	bne.n	19d4 <sht40x_activate_heater+0x58>
    if((power == SHT40X_HEATER_POWER_200mW_1S) || (power == SHT40X_HEATER_POWER_110mW_1S) || (power == SHT40X_HEATER_POWER_20mW_1S))
    19c0:	2f00      	cmp	r7, #0
    19c2:	d00c      	beq.n	19de <sht40x_activate_heater+0x62>
    19c4:	2f02      	cmp	r7, #2
    19c6:	d00a      	beq.n	19de <sht40x_activate_heater+0x62>
    19c8:	2f04      	cmp	r7, #4
    19ca:	d008      	beq.n	19de <sht40x_activate_heater+0x62>
     pHandle->delay_ms(HEATER_DELAY_100mS);
    19cc:	2073      	movs	r0, #115	; 0x73
    19ce:	6933      	ldr	r3, [r6, #16]
    19d0:	4798      	blx	r3
    19d2:	e008      	b.n	19e6 <sht40x_activate_heater+0x6a>
        a_sht40x_print_error_msg(pHandle, "write heater cmd");
    19d4:	493a      	ldr	r1, [pc, #232]	; (1ac0 <sht40x_activate_heater+0x144>)
    19d6:	0030      	movs	r0, r6
    19d8:	4b3a      	ldr	r3, [pc, #232]	; (1ac4 <sht40x_activate_heater+0x148>)
    19da:	4798      	blx	r3
        return err;  /**< failed*/
    19dc:	e7df      	b.n	199e <sht40x_activate_heater+0x22>
        pHandle->delay_ms(HEATER_DELAY_1S);
    19de:	20ff      	movs	r0, #255	; 0xff
    19e0:	0080      	lsls	r0, r0, #2
    19e2:	6933      	ldr	r3, [r6, #16]
    19e4:	4798      	blx	r3
    err = a_sht40x_i2c_read(pHandle, DUMMY_DATA, (uint8_t *)pStatus, RESPONSE_LENGTH);
    19e6:	2306      	movs	r3, #6
    19e8:	aa02      	add	r2, sp, #8
    19ea:	2100      	movs	r1, #0
    19ec:	0030      	movs	r0, r6
    19ee:	4c36      	ldr	r4, [pc, #216]	; (1ac8 <sht40x_activate_heater+0x14c>)
    19f0:	47a0      	blx	r4
    19f2:	1e04      	subs	r4, r0, #0
    if(err)
    19f4:	d156      	bne.n	1aa4 <sht40x_activate_heater+0x128>
    pData->temperature_C = (pStatus[0] << 8) |  pStatus[1];
    19f6:	ab02      	add	r3, sp, #8
    19f8:	7818      	ldrb	r0, [r3, #0]
    19fa:	0200      	lsls	r0, r0, #8
    19fc:	785b      	ldrb	r3, [r3, #1]
    19fe:	4318      	orrs	r0, r3
    1a00:	4b32      	ldr	r3, [pc, #200]	; (1acc <sht40x_activate_heater+0x150>)
    1a02:	469b      	mov	fp, r3
    1a04:	4798      	blx	r3
    pData->temperature_C = ((pData->temperature_C/65535.0) * 175) - 45;
    1a06:	4b32      	ldr	r3, [pc, #200]	; (1ad0 <sht40x_activate_heater+0x154>)
    1a08:	469a      	mov	sl, r3
    1a0a:	4798      	blx	r3
    1a0c:	4b31      	ldr	r3, [pc, #196]	; (1ad4 <sht40x_activate_heater+0x158>)
    1a0e:	4699      	mov	r9, r3
    1a10:	2200      	movs	r2, #0
    1a12:	4b31      	ldr	r3, [pc, #196]	; (1ad8 <sht40x_activate_heater+0x15c>)
    1a14:	47c8      	blx	r9
    1a16:	4b31      	ldr	r3, [pc, #196]	; (1adc <sht40x_activate_heater+0x160>)
    1a18:	4698      	mov	r8, r3
    1a1a:	2200      	movs	r2, #0
    1a1c:	4b30      	ldr	r3, [pc, #192]	; (1ae0 <sht40x_activate_heater+0x164>)
    1a1e:	47c0      	blx	r8
    1a20:	4f30      	ldr	r7, [pc, #192]	; (1ae4 <sht40x_activate_heater+0x168>)
    1a22:	2200      	movs	r2, #0
    1a24:	4b30      	ldr	r3, [pc, #192]	; (1ae8 <sht40x_activate_heater+0x16c>)
    1a26:	47b8      	blx	r7
    1a28:	4e30      	ldr	r6, [pc, #192]	; (1aec <sht40x_activate_heater+0x170>)
    1a2a:	47b0      	blx	r6
    1a2c:	6028      	str	r0, [r5, #0]
    pData->temperature_F = (pData->temperature_C * 9/5) + 32;
    1a2e:	4930      	ldr	r1, [pc, #192]	; (1af0 <sht40x_activate_heater+0x174>)
    1a30:	4b30      	ldr	r3, [pc, #192]	; (1af4 <sht40x_activate_heater+0x178>)
    1a32:	4798      	blx	r3
    1a34:	4930      	ldr	r1, [pc, #192]	; (1af8 <sht40x_activate_heater+0x17c>)
    1a36:	4b31      	ldr	r3, [pc, #196]	; (1afc <sht40x_activate_heater+0x180>)
    1a38:	4798      	blx	r3
    1a3a:	2184      	movs	r1, #132	; 0x84
    1a3c:	05c9      	lsls	r1, r1, #23
    1a3e:	4b30      	ldr	r3, [pc, #192]	; (1b00 <sht40x_activate_heater+0x184>)
    1a40:	4798      	blx	r3
    1a42:	6068      	str	r0, [r5, #4]
    pData->humidity = (pStatus[3] << 8) | pStatus[4];
    1a44:	ab02      	add	r3, sp, #8
    1a46:	78db      	ldrb	r3, [r3, #3]
    1a48:	9300      	str	r3, [sp, #0]
    1a4a:	0218      	lsls	r0, r3, #8
    1a4c:	aa02      	add	r2, sp, #8
    1a4e:	7912      	ldrb	r2, [r2, #4]
    1a50:	9201      	str	r2, [sp, #4]
    1a52:	4310      	orrs	r0, r2
    1a54:	47d8      	blx	fp
    pData->humidity = ((pData->humidity/65535.0) * 125) - 6;
    1a56:	47d0      	blx	sl
    1a58:	2200      	movs	r2, #0
    1a5a:	4b1f      	ldr	r3, [pc, #124]	; (1ad8 <sht40x_activate_heater+0x15c>)
    1a5c:	47c8      	blx	r9
    1a5e:	2200      	movs	r2, #0
    1a60:	4b28      	ldr	r3, [pc, #160]	; (1b04 <sht40x_activate_heater+0x188>)
    1a62:	47c0      	blx	r8
    1a64:	2200      	movs	r2, #0
    1a66:	4b28      	ldr	r3, [pc, #160]	; (1b08 <sht40x_activate_heater+0x18c>)
    1a68:	47b8      	blx	r7
    1a6a:	47b0      	blx	r6
    1a6c:	1c06      	adds	r6, r0, #0
    memcpy(pData->pTempRawData, pStatus, 2);
    1a6e:	0028      	movs	r0, r5
    1a70:	300c      	adds	r0, #12
    1a72:	2202      	movs	r2, #2
    1a74:	a902      	add	r1, sp, #8
    1a76:	4b25      	ldr	r3, [pc, #148]	; (1b0c <sht40x_activate_heater+0x190>)
    1a78:	4798      	blx	r3
    pData->pHumidityRawData[0] = pStatus[3];
    1a7a:	466b      	mov	r3, sp
    1a7c:	781b      	ldrb	r3, [r3, #0]
    1a7e:	73ab      	strb	r3, [r5, #14]
    pData->pHumidityRawData[1] = pStatus[4];
    1a80:	466b      	mov	r3, sp
    1a82:	791b      	ldrb	r3, [r3, #4]
    1a84:	73eb      	strb	r3, [r5, #15]
    pData->humidity =  pData->humidity > HUMIDITY_MAX ? HUMIDITY_MAX: pData->humidity;                     /**< if humidity is high than max allowed, set to 100 */
    1a86:	4922      	ldr	r1, [pc, #136]	; (1b10 <sht40x_activate_heater+0x194>)
    1a88:	1c30      	adds	r0, r6, #0
    1a8a:	4b22      	ldr	r3, [pc, #136]	; (1b14 <sht40x_activate_heater+0x198>)
    1a8c:	4798      	blx	r3
    1a8e:	2800      	cmp	r0, #0
    1a90:	d000      	beq.n	1a94 <sht40x_activate_heater+0x118>
    1a92:	4e1f      	ldr	r6, [pc, #124]	; (1b10 <sht40x_activate_heater+0x194>)
    pData->humidity =  pData->humidity < HUMIDITY_MIN ? HUMIDITY_MIN:  pData->humidity;                     /**< if humidity is less than min allowed, set to 0 */
    1a94:	2100      	movs	r1, #0
    1a96:	1c30      	adds	r0, r6, #0
    1a98:	4b1f      	ldr	r3, [pc, #124]	; (1b18 <sht40x_activate_heater+0x19c>)
    1a9a:	4798      	blx	r3
    1a9c:	2800      	cmp	r0, #0
    1a9e:	d106      	bne.n	1aae <sht40x_activate_heater+0x132>
    1aa0:	60ae      	str	r6, [r5, #8]
    return 0;
    1aa2:	e77c      	b.n	199e <sht40x_activate_heater+0x22>
        a_sht40x_print_error_msg(pHandle, "read temp and humidity");
    1aa4:	491d      	ldr	r1, [pc, #116]	; (1b1c <sht40x_activate_heater+0x1a0>)
    1aa6:	0030      	movs	r0, r6
    1aa8:	4b06      	ldr	r3, [pc, #24]	; (1ac4 <sht40x_activate_heater+0x148>)
    1aaa:	4798      	blx	r3
        return err;  /**< failed*/
    1aac:	e777      	b.n	199e <sht40x_activate_heater+0x22>
    pData->humidity =  pData->humidity < HUMIDITY_MIN ? HUMIDITY_MIN:  pData->humidity;                     /**< if humidity is less than min allowed, set to 0 */
    1aae:	2600      	movs	r6, #0
    1ab0:	e7f6      	b.n	1aa0 <sht40x_activate_heater+0x124>
        return 2;     /**< return failed error */
    1ab2:	2402      	movs	r4, #2
    1ab4:	e773      	b.n	199e <sht40x_activate_heater+0x22>
    1ab6:	46c0      	nop			; (mov r8, r8)
    1ab8:	0000688c 	.word	0x0000688c
    1abc:	00001629 	.word	0x00001629
    1ac0:	000069d4 	.word	0x000069d4
    1ac4:	00001655 	.word	0x00001655
    1ac8:	0000163d 	.word	0x0000163d
    1acc:	00002eb9 	.word	0x00002eb9
    1ad0:	00004791 	.word	0x00004791
    1ad4:	00003579 	.word	0x00003579
    1ad8:	40efffe0 	.word	0x40efffe0
    1adc:	00003be1 	.word	0x00003be1
    1ae0:	4065e000 	.word	0x4065e000
    1ae4:	000040e1 	.word	0x000040e1
    1ae8:	40468000 	.word	0x40468000
    1aec:	00004835 	.word	0x00004835
    1af0:	41100000 	.word	0x41100000
    1af4:	00002901 	.word	0x00002901
    1af8:	40a00000 	.word	0x40a00000
    1afc:	00002521 	.word	0x00002521
    1b00:	000021fd 	.word	0x000021fd
    1b04:	405f4000 	.word	0x405f4000
    1b08:	40180000 	.word	0x40180000
    1b0c:	000049e5 	.word	0x000049e5
    1b10:	42c80000 	.word	0x42c80000
    1b14:	00001fe5 	.word	0x00001fe5
    1b18:	00001fbd 	.word	0x00001fbd
    1b1c:	000069a4 	.word	0x000069a4

00001b20 <sht40x_info>:
 *             - 0 success
 *             - 2 pHandle is NULL
 * @note       none
 */
uint8_t sht40x_info(sht40x_info_t *const pInfo)
{
    1b20:	b570      	push	{r4, r5, r6, lr}
    1b22:	1e04      	subs	r4, r0, #0
    if (pInfo == NULL)     /**< check if handle is null */
    1b24:	d020      	beq.n	1b68 <sht40x_info+0x48>
    {
        return 2;              /**<failed, return error */
    }
    memset(pInfo, 0, sizeof (sht40x_info_t));                        /**< initialize sht40x info structure */
    1b26:	2240      	movs	r2, #64	; 0x40
    1b28:	2100      	movs	r1, #0
    1b2a:	4b10      	ldr	r3, [pc, #64]	; (1b6c <sht40x_info+0x4c>)
    1b2c:	4798      	blx	r3
    strncpy(pInfo->chip_name, CHIP_NAME, 10);                        /**< copy chip name */
    1b2e:	220a      	movs	r2, #10
    1b30:	490f      	ldr	r1, [pc, #60]	; (1b70 <sht40x_info+0x50>)
    1b32:	0020      	movs	r0, r4
    1b34:	4d0f      	ldr	r5, [pc, #60]	; (1b74 <sht40x_info+0x54>)
    1b36:	47a8      	blx	r5
    strncpy(pInfo->interface, INTERFACE, 8);                         /**< copy interface name */
    1b38:	0020      	movs	r0, r4
    1b3a:	3023      	adds	r0, #35	; 0x23
    1b3c:	2208      	movs	r2, #8
    1b3e:	490e      	ldr	r1, [pc, #56]	; (1b78 <sht40x_info+0x58>)
    1b40:	47a8      	blx	r5
    strncpy(pInfo->manufacturer_name, MANUFACTURER_NAME, 25);        /**< copy manufacturer name */
    1b42:	0020      	movs	r0, r4
    1b44:	300a      	adds	r0, #10
    1b46:	2219      	movs	r2, #25
    1b48:	490c      	ldr	r1, [pc, #48]	; (1b7c <sht40x_info+0x5c>)
    1b4a:	47a8      	blx	r5
    pInfo->supply_voltage_max_v = SUPPLY_VOLTAGE_MAX;                /**< set minimal supply voltage */
    1b4c:	4b0c      	ldr	r3, [pc, #48]	; (1b80 <sht40x_info+0x60>)
    1b4e:	62e3      	str	r3, [r4, #44]	; 0x2c
    pInfo->supply_voltage_min_v = SUPPLY_VOLTAGE_MIN;                /**< set maximum supply voltage */
    1b50:	4b0c      	ldr	r3, [pc, #48]	; (1b84 <sht40x_info+0x64>)
    1b52:	62a3      	str	r3, [r4, #40]	; 0x28
    pInfo->max_current_ma = MAX_CURRENT;                             /**< set maximum current */
    1b54:	4b0c      	ldr	r3, [pc, #48]	; (1b88 <sht40x_info+0x68>)
    1b56:	6323      	str	r3, [r4, #48]	; 0x30
    pInfo->temperature_max = TEMPERATURE_MAX;                        /**< set minimal temperature */
    1b58:	4b0c      	ldr	r3, [pc, #48]	; (1b8c <sht40x_info+0x6c>)
    1b5a:	63a3      	str	r3, [r4, #56]	; 0x38
    pInfo->temperature_min = TEMPERATURE_MIN;                        /**< set maximum temperature */
    1b5c:	4b0c      	ldr	r3, [pc, #48]	; (1b90 <sht40x_info+0x70>)
    1b5e:	6363      	str	r3, [r4, #52]	; 0x34
    pInfo->driver_version = DRIVER_VERSION;                          /**< set driver version */
    1b60:	4b0c      	ldr	r3, [pc, #48]	; (1b94 <sht40x_info+0x74>)
    1b62:	63e3      	str	r3, [r4, #60]	; 0x3c

    return 0;                                                        /**< return success */
    1b64:	2000      	movs	r0, #0
}
    1b66:	bd70      	pop	{r4, r5, r6, pc}
        return 2;              /**<failed, return error */
    1b68:	2002      	movs	r0, #2
    1b6a:	e7fc      	b.n	1b66 <sht40x_info+0x46>
    1b6c:	00004a69 	.word	0x00004a69
    1b70:	000069f4 	.word	0x000069f4
    1b74:	00004b61 	.word	0x00004b61
    1b78:	000069fc 	.word	0x000069fc
    1b7c:	00006a00 	.word	0x00006a00
    1b80:	40666666 	.word	0x40666666
    1b84:	3fe66666 	.word	0x3fe66666
    1b88:	3dcccccd 	.word	0x3dcccccd
    1b8c:	42fa0000 	.word	0x42fa0000
    1b90:	c2200000 	.word	0xc2200000
    1b94:	44898000 	.word	0x44898000

00001b98 <sht40x_basic_initialize>:
 *          - 1 initialize failed
 * @note    none
 */

uint8_t sht40x_basic_initialize(sht40x_variant_t variant)
{
    1b98:	b530      	push	{r4, r5, lr}
    1b9a:	b083      	sub	sp, #12
    1b9c:	0005      	movs	r5, r0

    volatile uint8_t err;

    /*link function*/
    DRIVER_SHT40X_LINK_INIT(&sht40x_handler, sht40x_handle_t);                               /**< Link the  */
    1b9e:	4c26      	ldr	r4, [pc, #152]	; (1c38 <sht40x_basic_initialize+0xa0>)
    1ba0:	221c      	movs	r2, #28
    1ba2:	2100      	movs	r1, #0
    1ba4:	0020      	movs	r0, r4
    1ba6:	4b25      	ldr	r3, [pc, #148]	; (1c3c <sht40x_basic_initialize+0xa4>)
    1ba8:	4798      	blx	r3
    DRIVER_SHT40X_LINK_I2C_INIT(&sht40x_handler, sht40x_interface_i2c_init);                 /**< Link the i2c initialize function */
    1baa:	4b25      	ldr	r3, [pc, #148]	; (1c40 <sht40x_basic_initialize+0xa8>)
    1bac:	6023      	str	r3, [r4, #0]
    DRIVER_SHT40X_LINK_I2C_DEINIT(&sht40x_handler, sht40x_interface_i2c_deinit);             /**< Link the the i2c de-initialize function */
    1bae:	4b25      	ldr	r3, [pc, #148]	; (1c44 <sht40x_basic_initialize+0xac>)
    1bb0:	6063      	str	r3, [r4, #4]
    DRIVER_SHT40X_LINK_I2C_WRITE(&sht40x_handler, sht40x_interface_i2c_write);               /**< Link the i2c  write function */
    1bb2:	4b25      	ldr	r3, [pc, #148]	; (1c48 <sht40x_basic_initialize+0xb0>)
    1bb4:	60e3      	str	r3, [r4, #12]
    DRIVER_SHT40X_LINK_I2C_READ(&sht40x_handler, sht40x_interface_i2c_read);                 /**< Link the i2c read function */
    1bb6:	4b25      	ldr	r3, [pc, #148]	; (1c4c <sht40x_basic_initialize+0xb4>)
    1bb8:	60a3      	str	r3, [r4, #8]
    DRIVER_SHT40X_LINK_DELAY_MS(&sht40x_handler,sht40x_interface_delay_ms);                  /**< Link delay function */
    1bba:	4b25      	ldr	r3, [pc, #148]	; (1c50 <sht40x_basic_initialize+0xb8>)
    1bbc:	6123      	str	r3, [r4, #16]
    DRIVER_SHT40X_LINK_DEBUG_PRINT(&sht40x_handler, sht40x_interface_debug_print);           /**< Link the the debug print function */
    1bbe:	4b25      	ldr	r3, [pc, #148]	; (1c54 <sht40x_basic_initialize+0xbc>)
    1bc0:	6163      	str	r3, [r4, #20]

    /* sht40x initialize */
    err = sht40x_init(&sht40x_handler);
    1bc2:	0020      	movs	r0, r4
    1bc4:	4b24      	ldr	r3, [pc, #144]	; (1c58 <sht40x_basic_initialize+0xc0>)
    1bc6:	4798      	blx	r3
    1bc8:	466b      	mov	r3, sp
    1bca:	71d8      	strb	r0, [r3, #7]
    1bcc:	3307      	adds	r3, #7
    if(err)
    1bce:	781b      	ldrb	r3, [r3, #0]
    1bd0:	2b00      	cmp	r3, #0
    1bd2:	d117      	bne.n	1c04 <sht40x_basic_initialize+0x6c>
        a_sht40x_print_error_msg(&sht40x_handler, "initialize");
        return err;       /**< failed */
    }

    /* set device variant */
    err = sht40x_set_variant(&sht40x_handler, variant);
    1bd4:	0029      	movs	r1, r5
    1bd6:	4818      	ldr	r0, [pc, #96]	; (1c38 <sht40x_basic_initialize+0xa0>)
    1bd8:	4b20      	ldr	r3, [pc, #128]	; (1c5c <sht40x_basic_initialize+0xc4>)
    1bda:	4798      	blx	r3
    1bdc:	466b      	mov	r3, sp
    1bde:	71d8      	strb	r0, [r3, #7]
    1be0:	3307      	adds	r3, #7
    if(err)
    1be2:	781b      	ldrb	r3, [r3, #0]
    1be4:	2b00      	cmp	r3, #0
    1be6:	d116      	bne.n	1c16 <sht40x_basic_initialize+0x7e>
        a_sht40x_print_error_msg(&sht40x_handler, "set device variant");
        return err;   /**< failed */
    }

    /** set device address */
    err= sht40x_set_addr(&sht40x_handler);
    1be8:	4813      	ldr	r0, [pc, #76]	; (1c38 <sht40x_basic_initialize+0xa0>)
    1bea:	4b1d      	ldr	r3, [pc, #116]	; (1c60 <sht40x_basic_initialize+0xc8>)
    1bec:	4798      	blx	r3
    1bee:	466b      	mov	r3, sp
    1bf0:	71d8      	strb	r0, [r3, #7]
    1bf2:	3307      	adds	r3, #7
    if(err)
    1bf4:	781b      	ldrb	r3, [r3, #0]
    1bf6:	2b00      	cmp	r3, #0
    1bf8:	d115      	bne.n	1c26 <sht40x_basic_initialize+0x8e>
    {
         a_sht40x_print_error_msg(&sht40x_handler, "set device i2c address");
        return err;
    }

    sht40x_interface_delay_ms(10);         /**< wait 10 ms after initialize complete */
    1bfa:	200a      	movs	r0, #10
    1bfc:	4b14      	ldr	r3, [pc, #80]	; (1c50 <sht40x_basic_initialize+0xb8>)
    1bfe:	4798      	blx	r3

    return 0;   /**< success */
    1c00:	2000      	movs	r0, #0
    1c02:	e006      	b.n	1c12 <sht40x_basic_initialize+0x7a>
        a_sht40x_print_error_msg(&sht40x_handler, "initialize");
    1c04:	4917      	ldr	r1, [pc, #92]	; (1c64 <sht40x_basic_initialize+0xcc>)
    1c06:	480c      	ldr	r0, [pc, #48]	; (1c38 <sht40x_basic_initialize+0xa0>)
    1c08:	4b17      	ldr	r3, [pc, #92]	; (1c68 <sht40x_basic_initialize+0xd0>)
    1c0a:	4798      	blx	r3
        return err;       /**< failed */
    1c0c:	466b      	mov	r3, sp
    1c0e:	79d8      	ldrb	r0, [r3, #7]
    1c10:	b2c0      	uxtb	r0, r0
}
    1c12:	b003      	add	sp, #12
    1c14:	bd30      	pop	{r4, r5, pc}
        a_sht40x_print_error_msg(&sht40x_handler, "set device variant");
    1c16:	4915      	ldr	r1, [pc, #84]	; (1c6c <sht40x_basic_initialize+0xd4>)
    1c18:	4807      	ldr	r0, [pc, #28]	; (1c38 <sht40x_basic_initialize+0xa0>)
    1c1a:	4b13      	ldr	r3, [pc, #76]	; (1c68 <sht40x_basic_initialize+0xd0>)
    1c1c:	4798      	blx	r3
        return err;   /**< failed */
    1c1e:	466b      	mov	r3, sp
    1c20:	79d8      	ldrb	r0, [r3, #7]
    1c22:	b2c0      	uxtb	r0, r0
    1c24:	e7f5      	b.n	1c12 <sht40x_basic_initialize+0x7a>
         a_sht40x_print_error_msg(&sht40x_handler, "set device i2c address");
    1c26:	4912      	ldr	r1, [pc, #72]	; (1c70 <sht40x_basic_initialize+0xd8>)
    1c28:	4803      	ldr	r0, [pc, #12]	; (1c38 <sht40x_basic_initialize+0xa0>)
    1c2a:	4b0f      	ldr	r3, [pc, #60]	; (1c68 <sht40x_basic_initialize+0xd0>)
    1c2c:	4798      	blx	r3
        return err;
    1c2e:	466b      	mov	r3, sp
    1c30:	79d8      	ldrb	r0, [r3, #7]
    1c32:	b2c0      	uxtb	r0, r0
    1c34:	e7ed      	b.n	1c12 <sht40x_basic_initialize+0x7a>
    1c36:	46c0      	nop			; (mov r8, r8)
    1c38:	20000880 	.word	0x20000880
    1c3c:	00004a69 	.word	0x00004a69
    1c40:	00001ded 	.word	0x00001ded
    1c44:	00001df1 	.word	0x00001df1
    1c48:	00001e05 	.word	0x00001e05
    1c4c:	00001df5 	.word	0x00001df5
    1c50:	00001e15 	.word	0x00001e15
    1c54:	00001e21 	.word	0x00001e21
    1c58:	00001665 	.word	0x00001665
    1c5c:	0000170f 	.word	0x0000170f
    1c60:	000016f5 	.word	0x000016f5
    1c64:	00006a0c 	.word	0x00006a0c
    1c68:	00001655 	.word	0x00001655
    1c6c:	00006a18 	.word	0x00006a18
    1c70:	00006a2c 	.word	0x00006a2c

00001c74 <sht40x_basic_get_temp_rh>:
 *            - 0 success
 *            - 1 failed to get temp/humidity
 * @note      none
 */
uint8_t sht40x_basic_get_temp_rh(sht40x_precision_t precision, sht40x_data_t *pData)
{
    1c74:	b510      	push	{r4, lr}
    1c76:	000a      	movs	r2, r1
    if(sht40x_get_temp_rh(&sht40x_handler, precision, pData) != SHT40X_DRV_OK)
    1c78:	0001      	movs	r1, r0
    1c7a:	4806      	ldr	r0, [pc, #24]	; (1c94 <sht40x_basic_get_temp_rh+0x20>)
    1c7c:	4b06      	ldr	r3, [pc, #24]	; (1c98 <sht40x_basic_get_temp_rh+0x24>)
    1c7e:	4798      	blx	r3
    1c80:	2800      	cmp	r0, #0
    1c82:	d100      	bne.n	1c86 <sht40x_basic_get_temp_rh+0x12>
    {
        a_sht40x_print_error_msg(&sht40x_handler, "read data");
        return 1; /**< failed */
    }
    return 0;   /**< success*/
}
    1c84:	bd10      	pop	{r4, pc}
        a_sht40x_print_error_msg(&sht40x_handler, "read data");
    1c86:	4905      	ldr	r1, [pc, #20]	; (1c9c <sht40x_basic_get_temp_rh+0x28>)
    1c88:	4802      	ldr	r0, [pc, #8]	; (1c94 <sht40x_basic_get_temp_rh+0x20>)
    1c8a:	4b05      	ldr	r3, [pc, #20]	; (1ca0 <sht40x_basic_get_temp_rh+0x2c>)
    1c8c:	4798      	blx	r3
        return 1; /**< failed */
    1c8e:	2001      	movs	r0, #1
    1c90:	e7f8      	b.n	1c84 <sht40x_basic_get_temp_rh+0x10>
    1c92:	46c0      	nop			; (mov r8, r8)
    1c94:	20000880 	.word	0x20000880
    1c98:	00001759 	.word	0x00001759
    1c9c:	00006a44 	.word	0x00006a44
    1ca0:	00001655 	.word	0x00001655

00001ca4 <sht40x_basic_get_temp_humidity_nSample>:
 *            - 0 success
 *            - 1 failed to get temp/humidity
 * @note      none
 */
uint8_t sht40x_basic_get_temp_humidity_nSample(sht40x_precision_t precision, sht40x_data_t *pData, uint8_t u8NumSample)
{
    1ca4:	b5f0      	push	{r4, r5, r6, r7, lr}
    1ca6:	46d6      	mov	lr, sl
    1ca8:	b500      	push	{lr}
    1caa:	b088      	sub	sp, #32
    1cac:	9006      	str	r0, [sp, #24]
    1cae:	000e      	movs	r6, r1
    1cb0:	4692      	mov	sl, r2
    int index;
    double temp_C_Samples = 0;
    double humiditySamples = 0;
    double temp_F_Samples = 0;
    1cb2:	2300      	movs	r3, #0
    1cb4:	2400      	movs	r4, #0
    1cb6:	9304      	str	r3, [sp, #16]
    1cb8:	9405      	str	r4, [sp, #20]
    double humiditySamples = 0;
    1cba:	9302      	str	r3, [sp, #8]
    1cbc:	9403      	str	r4, [sp, #12]
    double temp_C_Samples = 0;
    1cbe:	9300      	str	r3, [sp, #0]
    1cc0:	9401      	str	r4, [sp, #4]

    for(index = 0; index < u8NumSample; index++)
    1cc2:	2700      	movs	r7, #0
    1cc4:	4650      	mov	r0, sl
    1cc6:	4557      	cmp	r7, sl
    1cc8:	da2e      	bge.n	1d28 <sht40x_basic_get_temp_humidity_nSample+0x84>
    {
        if(sht40x_get_temp_rh(&sht40x_handler, precision, pData) != SHT40X_DRV_OK)
    1cca:	0032      	movs	r2, r6
    1ccc:	9906      	ldr	r1, [sp, #24]
    1cce:	4826      	ldr	r0, [pc, #152]	; (1d68 <sht40x_basic_get_temp_humidity_nSample+0xc4>)
    1cd0:	4b26      	ldr	r3, [pc, #152]	; (1d6c <sht40x_basic_get_temp_humidity_nSample+0xc8>)
    1cd2:	4798      	blx	r3
    1cd4:	2800      	cmp	r0, #0
    1cd6:	d121      	bne.n	1d1c <sht40x_basic_get_temp_humidity_nSample+0x78>
        {
            a_sht40x_print_error_msg(&sht40x_handler, "read sample data");
            return 1; /**< failed */
        }
        sht40x_interface_delay_ms(100);              /**< wait 100 ms between each sample measurement */
    1cd8:	2064      	movs	r0, #100	; 0x64
    1cda:	4b25      	ldr	r3, [pc, #148]	; (1d70 <sht40x_basic_get_temp_humidity_nSample+0xcc>)
    1cdc:	4798      	blx	r3
        temp_C_Samples += pData->temperature_C;
    1cde:	4d25      	ldr	r5, [pc, #148]	; (1d74 <sht40x_basic_get_temp_humidity_nSample+0xd0>)
    1ce0:	6830      	ldr	r0, [r6, #0]
    1ce2:	47a8      	blx	r5
    1ce4:	0002      	movs	r2, r0
    1ce6:	000b      	movs	r3, r1
    1ce8:	4c23      	ldr	r4, [pc, #140]	; (1d78 <sht40x_basic_get_temp_humidity_nSample+0xd4>)
    1cea:	9800      	ldr	r0, [sp, #0]
    1cec:	9901      	ldr	r1, [sp, #4]
    1cee:	47a0      	blx	r4
    1cf0:	9000      	str	r0, [sp, #0]
    1cf2:	9101      	str	r1, [sp, #4]
        temp_F_Samples += pData->temperature_F;
    1cf4:	6870      	ldr	r0, [r6, #4]
    1cf6:	47a8      	blx	r5
    1cf8:	0002      	movs	r2, r0
    1cfa:	000b      	movs	r3, r1
    1cfc:	9804      	ldr	r0, [sp, #16]
    1cfe:	9905      	ldr	r1, [sp, #20]
    1d00:	47a0      	blx	r4
    1d02:	9004      	str	r0, [sp, #16]
    1d04:	9105      	str	r1, [sp, #20]
        humiditySamples += pData->humidity;
    1d06:	68b0      	ldr	r0, [r6, #8]
    1d08:	47a8      	blx	r5
    1d0a:	0002      	movs	r2, r0
    1d0c:	000b      	movs	r3, r1
    1d0e:	9802      	ldr	r0, [sp, #8]
    1d10:	9903      	ldr	r1, [sp, #12]
    1d12:	47a0      	blx	r4
    1d14:	9002      	str	r0, [sp, #8]
    1d16:	9103      	str	r1, [sp, #12]
    for(index = 0; index < u8NumSample; index++)
    1d18:	3701      	adds	r7, #1
    1d1a:	e7d3      	b.n	1cc4 <sht40x_basic_get_temp_humidity_nSample+0x20>
            a_sht40x_print_error_msg(&sht40x_handler, "read sample data");
    1d1c:	4917      	ldr	r1, [pc, #92]	; (1d7c <sht40x_basic_get_temp_humidity_nSample+0xd8>)
    1d1e:	4812      	ldr	r0, [pc, #72]	; (1d68 <sht40x_basic_get_temp_humidity_nSample+0xc4>)
    1d20:	4b17      	ldr	r3, [pc, #92]	; (1d80 <sht40x_basic_get_temp_humidity_nSample+0xdc>)
    1d22:	4798      	blx	r3
            return 1; /**< failed */
    1d24:	2001      	movs	r0, #1
    1d26:	e01b      	b.n	1d60 <sht40x_basic_get_temp_humidity_nSample+0xbc>
    }

    pData->temperature_C = (float)(temp_C_Samples / u8NumSample);
    1d28:	4b16      	ldr	r3, [pc, #88]	; (1d84 <sht40x_basic_get_temp_humidity_nSample+0xe0>)
    1d2a:	4798      	blx	r3
    1d2c:	4c16      	ldr	r4, [pc, #88]	; (1d88 <sht40x_basic_get_temp_humidity_nSample+0xe4>)
    1d2e:	9006      	str	r0, [sp, #24]
    1d30:	9107      	str	r1, [sp, #28]
    1d32:	0002      	movs	r2, r0
    1d34:	000b      	movs	r3, r1
    1d36:	9800      	ldr	r0, [sp, #0]
    1d38:	9901      	ldr	r1, [sp, #4]
    1d3a:	47a0      	blx	r4
    1d3c:	4f13      	ldr	r7, [pc, #76]	; (1d8c <sht40x_basic_get_temp_humidity_nSample+0xe8>)
    1d3e:	47b8      	blx	r7
    1d40:	6030      	str	r0, [r6, #0]
    pData->temperature_F = (float)(temp_F_Samples / u8NumSample);
    1d42:	9a06      	ldr	r2, [sp, #24]
    1d44:	9b07      	ldr	r3, [sp, #28]
    1d46:	9804      	ldr	r0, [sp, #16]
    1d48:	9905      	ldr	r1, [sp, #20]
    1d4a:	47a0      	blx	r4
    1d4c:	47b8      	blx	r7
    1d4e:	6070      	str	r0, [r6, #4]
    pData->humidity = (float)(humiditySamples / u8NumSample);
    1d50:	9a06      	ldr	r2, [sp, #24]
    1d52:	9b07      	ldr	r3, [sp, #28]
    1d54:	9802      	ldr	r0, [sp, #8]
    1d56:	9903      	ldr	r1, [sp, #12]
    1d58:	47a0      	blx	r4
    1d5a:	47b8      	blx	r7
    1d5c:	60b0      	str	r0, [r6, #8]

     return 0;   /**< success*/
    1d5e:	2000      	movs	r0, #0
}
    1d60:	b008      	add	sp, #32
    1d62:	bc04      	pop	{r2}
    1d64:	4692      	mov	sl, r2
    1d66:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1d68:	20000880 	.word	0x20000880
    1d6c:	00001759 	.word	0x00001759
    1d70:	00001e15 	.word	0x00001e15
    1d74:	00004791 	.word	0x00004791
    1d78:	00002f59 	.word	0x00002f59
    1d7c:	00006a50 	.word	0x00006a50
    1d80:	00001655 	.word	0x00001655
    1d84:	0000470d 	.word	0x0000470d
    1d88:	00003579 	.word	0x00003579
    1d8c:	00004835 	.word	0x00004835

00001d90 <sht40x_basic_get_serial_number>:
 *            - 0 success
 *            - 1 failed to get S/N
 * @note      none
 */
uint8_t sht40x_basic_get_serial_number(uint32_t *pSerial_Number)
{
    1d90:	b510      	push	{r4, lr}
    1d92:	0001      	movs	r1, r0
  if(sht40x_get_serial_number(&sht40x_handler, (uint32_t *)pSerial_Number) != SHT40X_DRV_OK)
    1d94:	4805      	ldr	r0, [pc, #20]	; (1dac <sht40x_basic_get_serial_number+0x1c>)
    1d96:	4b06      	ldr	r3, [pc, #24]	; (1db0 <sht40x_basic_get_serial_number+0x20>)
    1d98:	4798      	blx	r3
    1d9a:	2800      	cmp	r0, #0
    1d9c:	d100      	bne.n	1da0 <sht40x_basic_get_serial_number+0x10>
  {
     a_sht40x_print_error_msg(&sht40x_handler, "read serial number");
     return 1; /**< failed */
  }
  return 0;     /**< success */
}
    1d9e:	bd10      	pop	{r4, pc}
     a_sht40x_print_error_msg(&sht40x_handler, "read serial number");
    1da0:	4904      	ldr	r1, [pc, #16]	; (1db4 <sht40x_basic_get_serial_number+0x24>)
    1da2:	4802      	ldr	r0, [pc, #8]	; (1dac <sht40x_basic_get_serial_number+0x1c>)
    1da4:	4b04      	ldr	r3, [pc, #16]	; (1db8 <sht40x_basic_get_serial_number+0x28>)
    1da6:	4798      	blx	r3
     return 1; /**< failed */
    1da8:	2001      	movs	r0, #1
    1daa:	e7f8      	b.n	1d9e <sht40x_basic_get_serial_number+0xe>
    1dac:	20000880 	.word	0x20000880
    1db0:	000018e1 	.word	0x000018e1
    1db4:	00006a64 	.word	0x00006a64
    1db8:	00001655 	.word	0x00001655

00001dbc <sht40x_basic_activate_heater>:
 *            - 0 success
 *            - 1 failed activate heater
 * @note      none
 */
uint8_t sht40x_basic_activate_heater(sht40x_heater_power_t power, sht40x_data_t *pData)
{
    1dbc:	b510      	push	{r4, lr}
    1dbe:	000a      	movs	r2, r1
    if(sht40x_activate_heater(&sht40x_handler, power, pData) != SHT40X_DRV_OK)
    1dc0:	0001      	movs	r1, r0
    1dc2:	4806      	ldr	r0, [pc, #24]	; (1ddc <sht40x_basic_activate_heater+0x20>)
    1dc4:	4b06      	ldr	r3, [pc, #24]	; (1de0 <sht40x_basic_activate_heater+0x24>)
    1dc6:	4798      	blx	r3
    1dc8:	2800      	cmp	r0, #0
    1dca:	d100      	bne.n	1dce <sht40x_basic_activate_heater+0x12>
         a_sht40x_print_error_msg(&sht40x_handler, "activate heater");
         return 1; /**< failed */
    }
    return 0;   /**< success */

}
    1dcc:	bd10      	pop	{r4, pc}
         a_sht40x_print_error_msg(&sht40x_handler, "activate heater");
    1dce:	4905      	ldr	r1, [pc, #20]	; (1de4 <sht40x_basic_activate_heater+0x28>)
    1dd0:	4802      	ldr	r0, [pc, #8]	; (1ddc <sht40x_basic_activate_heater+0x20>)
    1dd2:	4b05      	ldr	r3, [pc, #20]	; (1de8 <sht40x_basic_activate_heater+0x2c>)
    1dd4:	4798      	blx	r3
         return 1; /**< failed */
    1dd6:	2001      	movs	r0, #1
    1dd8:	e7f8      	b.n	1dcc <sht40x_basic_activate_heater+0x10>
    1dda:	46c0      	nop			; (mov r8, r8)
    1ddc:	20000880 	.word	0x20000880
    1de0:	0000197d 	.word	0x0000197d
    1de4:	00006a78 	.word	0x00006a78
    1de8:	00001655 	.word	0x00001655

00001dec <sht40x_interface_i2c_init>:
    /*call your i2c initialize function here*/
    /*user code begin */
 
    /*user code end*/
    return 0; /**< success */
}
    1dec:	2000      	movs	r0, #0
    1dee:	4770      	bx	lr

00001df0 <sht40x_interface_i2c_deinit>:
    /*call your i2c de-initialize function here*/
    /*user code begin */
 
    /*user code end*/
    return 0; /**< success */
}
    1df0:	2000      	movs	r0, #0
    1df2:	4770      	bx	lr

00001df4 <sht40x_interface_i2c_read>:
 *             - 0 success
 *             - 1 read failed
 * @note       none
 */
uint8_t sht40x_interface_i2c_read(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
    1df4:	b510      	push	{r4, lr}
    /*call your i2c read function here*/
    /*user code begin */
	i2c_read_data(addr, reg, buf, len);
    1df6:	4c02      	ldr	r4, [pc, #8]	; (1e00 <sht40x_interface_i2c_read+0xc>)
    1df8:	47a0      	blx	r4
    /*user code end*/
    return 0; /**< success */
}
    1dfa:	2000      	movs	r0, #0
    1dfc:	bd10      	pop	{r4, pc}
    1dfe:	46c0      	nop			; (mov r8, r8)
    1e00:	00001591 	.word	0x00001591

00001e04 <sht40x_interface_i2c_write>:
 *            - 0 success
 *            - 1 write failed
 * @note      none
 */
uint8_t sht40x_interface_i2c_write(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
    1e04:	b510      	push	{r4, lr}
    /*call your i2c write function here*/
    /*user code begin */
	i2c_write_data(addr, reg, buf, len);
    1e06:	4c02      	ldr	r4, [pc, #8]	; (1e10 <sht40x_interface_i2c_write+0xc>)
    1e08:	47a0      	blx	r4
    /*user code end*/
    return 0; /**< success */
}
    1e0a:	2000      	movs	r0, #0
    1e0c:	bd10      	pop	{r4, pc}
    1e0e:	46c0      	nop			; (mov r8, r8)
    1e10:	000015dd 	.word	0x000015dd

00001e14 <sht40x_interface_delay_ms>:
 * @brief     interface delay ms
 * @param[in] u32Ms is the time in milliseconds
 * @note      none
 */
void sht40x_interface_delay_ms(uint32_t u32Ms)
{
    1e14:	b510      	push	{r4, lr}
    /*call your delay function here*/
    /*user code begin */
    delay_ms(u32Ms);
    1e16:	4b01      	ldr	r3, [pc, #4]	; (1e1c <sht40x_interface_delay_ms+0x8>)
    1e18:	4798      	blx	r3
    /*user code end*/
}
    1e1a:	bd10      	pop	{r4, pc}
    1e1c:	000003f1 	.word	0x000003f1

00001e20 <sht40x_interface_debug_print>:
 * @brief     interface print format data
 * @param[in] fmt is the format data
 * @note      none
 */
void sht40x_interface_debug_print(const char *const fmt, ...)
{
    1e20:	b40f      	push	{r0, r1, r2, r3}
    1e22:	b530      	push	{r4, r5, lr}
    1e24:	b09d      	sub	sp, #116	; 0x74
    1e26:	ac20      	add	r4, sp, #128	; 0x80
    1e28:	cc20      	ldmia	r4!, {r5}
#ifdef SHT40X_DEBUG_MODE
    volatile char str[100];
    volatile uint8_t len;
    va_list args;

    memset((char *) str, 0, sizeof (char)*100);
    1e2a:	2264      	movs	r2, #100	; 0x64
    1e2c:	2100      	movs	r1, #0
    1e2e:	a803      	add	r0, sp, #12
    1e30:	4b0e      	ldr	r3, [pc, #56]	; (1e6c <sht40x_interface_debug_print+0x4c>)
    1e32:	4798      	blx	r3
    va_start(args, fmt);
    1e34:	9401      	str	r4, [sp, #4]
    vsniprintf((char *) str, 100, (char const *) fmt, args);
    1e36:	0023      	movs	r3, r4
    1e38:	002a      	movs	r2, r5
    1e3a:	2164      	movs	r1, #100	; 0x64
    1e3c:	a803      	add	r0, sp, #12
    1e3e:	4c0c      	ldr	r4, [pc, #48]	; (1e70 <sht40x_interface_debug_print+0x50>)
    1e40:	47a0      	blx	r4
    va_end(args);

    len = strlen((char *) str);
    1e42:	a803      	add	r0, sp, #12
    1e44:	4b0b      	ldr	r3, [pc, #44]	; (1e74 <sht40x_interface_debug_print+0x54>)
    1e46:	4798      	blx	r3
    1e48:	b2c0      	uxtb	r0, r0
    1e4a:	230b      	movs	r3, #11
    1e4c:	446b      	add	r3, sp
    1e4e:	7018      	strb	r0, [r3, #0]
     serial_print((char *const )str, len);                  /**< example of printf function, comment out if used */
    1e50:	7819      	ldrb	r1, [r3, #0]
    1e52:	b2c9      	uxtb	r1, r1
    1e54:	a803      	add	r0, sp, #12
    1e56:	4b08      	ldr	r3, [pc, #32]	; (1e78 <sht40x_interface_debug_print+0x58>)
    1e58:	4798      	blx	r3
     //memset((char *) str, 0, sizeof (char)*100);
    /*user code end*/
     sht40x_interface_delay_ms(10);        /**< delay needed for processors that fails to clear buffer quick enough */
    1e5a:	200a      	movs	r0, #10
    1e5c:	4b07      	ldr	r3, [pc, #28]	; (1e7c <sht40x_interface_debug_print+0x5c>)
    1e5e:	4798      	blx	r3
#endif
}
    1e60:	b01d      	add	sp, #116	; 0x74
    1e62:	bc30      	pop	{r4, r5}
    1e64:	bc08      	pop	{r3}
    1e66:	b004      	add	sp, #16
    1e68:	4718      	bx	r3
    1e6a:	46c0      	nop			; (mov r8, r8)
    1e6c:	00004a69 	.word	0x00004a69
    1e70:	00004c4d 	.word	0x00004c4d
    1e74:	00004afd 	.word	0x00004afd
    1e78:	00001559 	.word	0x00001559
    1e7c:	00001e15 	.word	0x00001e15

00001e80 <__udivsi3>:
    1e80:	2200      	movs	r2, #0
    1e82:	0843      	lsrs	r3, r0, #1
    1e84:	428b      	cmp	r3, r1
    1e86:	d374      	bcc.n	1f72 <__udivsi3+0xf2>
    1e88:	0903      	lsrs	r3, r0, #4
    1e8a:	428b      	cmp	r3, r1
    1e8c:	d35f      	bcc.n	1f4e <__udivsi3+0xce>
    1e8e:	0a03      	lsrs	r3, r0, #8
    1e90:	428b      	cmp	r3, r1
    1e92:	d344      	bcc.n	1f1e <__udivsi3+0x9e>
    1e94:	0b03      	lsrs	r3, r0, #12
    1e96:	428b      	cmp	r3, r1
    1e98:	d328      	bcc.n	1eec <__udivsi3+0x6c>
    1e9a:	0c03      	lsrs	r3, r0, #16
    1e9c:	428b      	cmp	r3, r1
    1e9e:	d30d      	bcc.n	1ebc <__udivsi3+0x3c>
    1ea0:	22ff      	movs	r2, #255	; 0xff
    1ea2:	0209      	lsls	r1, r1, #8
    1ea4:	ba12      	rev	r2, r2
    1ea6:	0c03      	lsrs	r3, r0, #16
    1ea8:	428b      	cmp	r3, r1
    1eaa:	d302      	bcc.n	1eb2 <__udivsi3+0x32>
    1eac:	1212      	asrs	r2, r2, #8
    1eae:	0209      	lsls	r1, r1, #8
    1eb0:	d065      	beq.n	1f7e <__udivsi3+0xfe>
    1eb2:	0b03      	lsrs	r3, r0, #12
    1eb4:	428b      	cmp	r3, r1
    1eb6:	d319      	bcc.n	1eec <__udivsi3+0x6c>
    1eb8:	e000      	b.n	1ebc <__udivsi3+0x3c>
    1eba:	0a09      	lsrs	r1, r1, #8
    1ebc:	0bc3      	lsrs	r3, r0, #15
    1ebe:	428b      	cmp	r3, r1
    1ec0:	d301      	bcc.n	1ec6 <__udivsi3+0x46>
    1ec2:	03cb      	lsls	r3, r1, #15
    1ec4:	1ac0      	subs	r0, r0, r3
    1ec6:	4152      	adcs	r2, r2
    1ec8:	0b83      	lsrs	r3, r0, #14
    1eca:	428b      	cmp	r3, r1
    1ecc:	d301      	bcc.n	1ed2 <__udivsi3+0x52>
    1ece:	038b      	lsls	r3, r1, #14
    1ed0:	1ac0      	subs	r0, r0, r3
    1ed2:	4152      	adcs	r2, r2
    1ed4:	0b43      	lsrs	r3, r0, #13
    1ed6:	428b      	cmp	r3, r1
    1ed8:	d301      	bcc.n	1ede <__udivsi3+0x5e>
    1eda:	034b      	lsls	r3, r1, #13
    1edc:	1ac0      	subs	r0, r0, r3
    1ede:	4152      	adcs	r2, r2
    1ee0:	0b03      	lsrs	r3, r0, #12
    1ee2:	428b      	cmp	r3, r1
    1ee4:	d301      	bcc.n	1eea <__udivsi3+0x6a>
    1ee6:	030b      	lsls	r3, r1, #12
    1ee8:	1ac0      	subs	r0, r0, r3
    1eea:	4152      	adcs	r2, r2
    1eec:	0ac3      	lsrs	r3, r0, #11
    1eee:	428b      	cmp	r3, r1
    1ef0:	d301      	bcc.n	1ef6 <__udivsi3+0x76>
    1ef2:	02cb      	lsls	r3, r1, #11
    1ef4:	1ac0      	subs	r0, r0, r3
    1ef6:	4152      	adcs	r2, r2
    1ef8:	0a83      	lsrs	r3, r0, #10
    1efa:	428b      	cmp	r3, r1
    1efc:	d301      	bcc.n	1f02 <__udivsi3+0x82>
    1efe:	028b      	lsls	r3, r1, #10
    1f00:	1ac0      	subs	r0, r0, r3
    1f02:	4152      	adcs	r2, r2
    1f04:	0a43      	lsrs	r3, r0, #9
    1f06:	428b      	cmp	r3, r1
    1f08:	d301      	bcc.n	1f0e <__udivsi3+0x8e>
    1f0a:	024b      	lsls	r3, r1, #9
    1f0c:	1ac0      	subs	r0, r0, r3
    1f0e:	4152      	adcs	r2, r2
    1f10:	0a03      	lsrs	r3, r0, #8
    1f12:	428b      	cmp	r3, r1
    1f14:	d301      	bcc.n	1f1a <__udivsi3+0x9a>
    1f16:	020b      	lsls	r3, r1, #8
    1f18:	1ac0      	subs	r0, r0, r3
    1f1a:	4152      	adcs	r2, r2
    1f1c:	d2cd      	bcs.n	1eba <__udivsi3+0x3a>
    1f1e:	09c3      	lsrs	r3, r0, #7
    1f20:	428b      	cmp	r3, r1
    1f22:	d301      	bcc.n	1f28 <__udivsi3+0xa8>
    1f24:	01cb      	lsls	r3, r1, #7
    1f26:	1ac0      	subs	r0, r0, r3
    1f28:	4152      	adcs	r2, r2
    1f2a:	0983      	lsrs	r3, r0, #6
    1f2c:	428b      	cmp	r3, r1
    1f2e:	d301      	bcc.n	1f34 <__udivsi3+0xb4>
    1f30:	018b      	lsls	r3, r1, #6
    1f32:	1ac0      	subs	r0, r0, r3
    1f34:	4152      	adcs	r2, r2
    1f36:	0943      	lsrs	r3, r0, #5
    1f38:	428b      	cmp	r3, r1
    1f3a:	d301      	bcc.n	1f40 <__udivsi3+0xc0>
    1f3c:	014b      	lsls	r3, r1, #5
    1f3e:	1ac0      	subs	r0, r0, r3
    1f40:	4152      	adcs	r2, r2
    1f42:	0903      	lsrs	r3, r0, #4
    1f44:	428b      	cmp	r3, r1
    1f46:	d301      	bcc.n	1f4c <__udivsi3+0xcc>
    1f48:	010b      	lsls	r3, r1, #4
    1f4a:	1ac0      	subs	r0, r0, r3
    1f4c:	4152      	adcs	r2, r2
    1f4e:	08c3      	lsrs	r3, r0, #3
    1f50:	428b      	cmp	r3, r1
    1f52:	d301      	bcc.n	1f58 <__udivsi3+0xd8>
    1f54:	00cb      	lsls	r3, r1, #3
    1f56:	1ac0      	subs	r0, r0, r3
    1f58:	4152      	adcs	r2, r2
    1f5a:	0883      	lsrs	r3, r0, #2
    1f5c:	428b      	cmp	r3, r1
    1f5e:	d301      	bcc.n	1f64 <__udivsi3+0xe4>
    1f60:	008b      	lsls	r3, r1, #2
    1f62:	1ac0      	subs	r0, r0, r3
    1f64:	4152      	adcs	r2, r2
    1f66:	0843      	lsrs	r3, r0, #1
    1f68:	428b      	cmp	r3, r1
    1f6a:	d301      	bcc.n	1f70 <__udivsi3+0xf0>
    1f6c:	004b      	lsls	r3, r1, #1
    1f6e:	1ac0      	subs	r0, r0, r3
    1f70:	4152      	adcs	r2, r2
    1f72:	1a41      	subs	r1, r0, r1
    1f74:	d200      	bcs.n	1f78 <__udivsi3+0xf8>
    1f76:	4601      	mov	r1, r0
    1f78:	4152      	adcs	r2, r2
    1f7a:	4610      	mov	r0, r2
    1f7c:	4770      	bx	lr
    1f7e:	e7ff      	b.n	1f80 <__udivsi3+0x100>
    1f80:	b501      	push	{r0, lr}
    1f82:	2000      	movs	r0, #0
    1f84:	f000 f806 	bl	1f94 <__aeabi_idiv0>
    1f88:	bd02      	pop	{r1, pc}
    1f8a:	46c0      	nop			; (mov r8, r8)

00001f8c <__aeabi_uidivmod>:
    1f8c:	2900      	cmp	r1, #0
    1f8e:	d0f7      	beq.n	1f80 <__udivsi3+0x100>
    1f90:	e776      	b.n	1e80 <__udivsi3>
    1f92:	4770      	bx	lr

00001f94 <__aeabi_idiv0>:
    1f94:	4770      	bx	lr
    1f96:	46c0      	nop			; (mov r8, r8)

00001f98 <__aeabi_cfrcmple>:
    1f98:	4684      	mov	ip, r0
    1f9a:	1c08      	adds	r0, r1, #0
    1f9c:	4661      	mov	r1, ip
    1f9e:	e7ff      	b.n	1fa0 <__aeabi_cfcmpeq>

00001fa0 <__aeabi_cfcmpeq>:
    1fa0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    1fa2:	f000 fc6b 	bl	287c <__lesf2>
    1fa6:	2800      	cmp	r0, #0
    1fa8:	d401      	bmi.n	1fae <__aeabi_cfcmpeq+0xe>
    1faa:	2100      	movs	r1, #0
    1fac:	42c8      	cmn	r0, r1
    1fae:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00001fb0 <__aeabi_fcmpeq>:
    1fb0:	b510      	push	{r4, lr}
    1fb2:	f000 fbfd 	bl	27b0 <__eqsf2>
    1fb6:	4240      	negs	r0, r0
    1fb8:	3001      	adds	r0, #1
    1fba:	bd10      	pop	{r4, pc}

00001fbc <__aeabi_fcmplt>:
    1fbc:	b510      	push	{r4, lr}
    1fbe:	f000 fc5d 	bl	287c <__lesf2>
    1fc2:	2800      	cmp	r0, #0
    1fc4:	db01      	blt.n	1fca <__aeabi_fcmplt+0xe>
    1fc6:	2000      	movs	r0, #0
    1fc8:	bd10      	pop	{r4, pc}
    1fca:	2001      	movs	r0, #1
    1fcc:	bd10      	pop	{r4, pc}
    1fce:	46c0      	nop			; (mov r8, r8)

00001fd0 <__aeabi_fcmple>:
    1fd0:	b510      	push	{r4, lr}
    1fd2:	f000 fc53 	bl	287c <__lesf2>
    1fd6:	2800      	cmp	r0, #0
    1fd8:	dd01      	ble.n	1fde <__aeabi_fcmple+0xe>
    1fda:	2000      	movs	r0, #0
    1fdc:	bd10      	pop	{r4, pc}
    1fde:	2001      	movs	r0, #1
    1fe0:	bd10      	pop	{r4, pc}
    1fe2:	46c0      	nop			; (mov r8, r8)

00001fe4 <__aeabi_fcmpgt>:
    1fe4:	b510      	push	{r4, lr}
    1fe6:	f000 fc09 	bl	27fc <__gesf2>
    1fea:	2800      	cmp	r0, #0
    1fec:	dc01      	bgt.n	1ff2 <__aeabi_fcmpgt+0xe>
    1fee:	2000      	movs	r0, #0
    1ff0:	bd10      	pop	{r4, pc}
    1ff2:	2001      	movs	r0, #1
    1ff4:	bd10      	pop	{r4, pc}
    1ff6:	46c0      	nop			; (mov r8, r8)

00001ff8 <__aeabi_fcmpge>:
    1ff8:	b510      	push	{r4, lr}
    1ffa:	f000 fbff 	bl	27fc <__gesf2>
    1ffe:	2800      	cmp	r0, #0
    2000:	da01      	bge.n	2006 <STACK_SIZE+0x6>
    2002:	2000      	movs	r0, #0
    2004:	bd10      	pop	{r4, pc}
    2006:	2001      	movs	r0, #1
    2008:	bd10      	pop	{r4, pc}
    200a:	46c0      	nop			; (mov r8, r8)

0000200c <__aeabi_uldivmod>:
    200c:	2b00      	cmp	r3, #0
    200e:	d111      	bne.n	2034 <__aeabi_uldivmod+0x28>
    2010:	2a00      	cmp	r2, #0
    2012:	d10f      	bne.n	2034 <__aeabi_uldivmod+0x28>
    2014:	2900      	cmp	r1, #0
    2016:	d100      	bne.n	201a <__aeabi_uldivmod+0xe>
    2018:	2800      	cmp	r0, #0
    201a:	d002      	beq.n	2022 <__aeabi_uldivmod+0x16>
    201c:	2100      	movs	r1, #0
    201e:	43c9      	mvns	r1, r1
    2020:	1c08      	adds	r0, r1, #0
    2022:	b407      	push	{r0, r1, r2}
    2024:	4802      	ldr	r0, [pc, #8]	; (2030 <__aeabi_uldivmod+0x24>)
    2026:	a102      	add	r1, pc, #8	; (adr r1, 2030 <__aeabi_uldivmod+0x24>)
    2028:	1840      	adds	r0, r0, r1
    202a:	9002      	str	r0, [sp, #8]
    202c:	bd03      	pop	{r0, r1, pc}
    202e:	46c0      	nop			; (mov r8, r8)
    2030:	ffffff65 	.word	0xffffff65
    2034:	b403      	push	{r0, r1}
    2036:	4668      	mov	r0, sp
    2038:	b501      	push	{r0, lr}
    203a:	9802      	ldr	r0, [sp, #8]
    203c:	f000 f81e 	bl	207c <__udivmoddi4>
    2040:	9b01      	ldr	r3, [sp, #4]
    2042:	469e      	mov	lr, r3
    2044:	b002      	add	sp, #8
    2046:	bc0c      	pop	{r2, r3}
    2048:	4770      	bx	lr
    204a:	46c0      	nop			; (mov r8, r8)

0000204c <__aeabi_f2uiz>:
    204c:	219e      	movs	r1, #158	; 0x9e
    204e:	b510      	push	{r4, lr}
    2050:	05c9      	lsls	r1, r1, #23
    2052:	1c04      	adds	r4, r0, #0
    2054:	f7ff ffd0 	bl	1ff8 <__aeabi_fcmpge>
    2058:	2800      	cmp	r0, #0
    205a:	d103      	bne.n	2064 <__aeabi_f2uiz+0x18>
    205c:	1c20      	adds	r0, r4, #0
    205e:	f000 ff0b 	bl	2e78 <__aeabi_f2iz>
    2062:	bd10      	pop	{r4, pc}
    2064:	219e      	movs	r1, #158	; 0x9e
    2066:	1c20      	adds	r0, r4, #0
    2068:	05c9      	lsls	r1, r1, #23
    206a:	f000 fd69 	bl	2b40 <__aeabi_fsub>
    206e:	f000 ff03 	bl	2e78 <__aeabi_f2iz>
    2072:	2380      	movs	r3, #128	; 0x80
    2074:	061b      	lsls	r3, r3, #24
    2076:	469c      	mov	ip, r3
    2078:	4460      	add	r0, ip
    207a:	e7f2      	b.n	2062 <__aeabi_f2uiz+0x16>

0000207c <__udivmoddi4>:
    207c:	b5f0      	push	{r4, r5, r6, r7, lr}
    207e:	4657      	mov	r7, sl
    2080:	464e      	mov	r6, r9
    2082:	4645      	mov	r5, r8
    2084:	46de      	mov	lr, fp
    2086:	b5e0      	push	{r5, r6, r7, lr}
    2088:	0004      	movs	r4, r0
    208a:	b083      	sub	sp, #12
    208c:	000d      	movs	r5, r1
    208e:	4692      	mov	sl, r2
    2090:	4699      	mov	r9, r3
    2092:	428b      	cmp	r3, r1
    2094:	d82f      	bhi.n	20f6 <__udivmoddi4+0x7a>
    2096:	d02c      	beq.n	20f2 <__udivmoddi4+0x76>
    2098:	4649      	mov	r1, r9
    209a:	4650      	mov	r0, sl
    209c:	f002 fc72 	bl	4984 <__clzdi2>
    20a0:	0029      	movs	r1, r5
    20a2:	0006      	movs	r6, r0
    20a4:	0020      	movs	r0, r4
    20a6:	f002 fc6d 	bl	4984 <__clzdi2>
    20aa:	1a33      	subs	r3, r6, r0
    20ac:	4698      	mov	r8, r3
    20ae:	3b20      	subs	r3, #32
    20b0:	469b      	mov	fp, r3
    20b2:	d500      	bpl.n	20b6 <__udivmoddi4+0x3a>
    20b4:	e074      	b.n	21a0 <__udivmoddi4+0x124>
    20b6:	4653      	mov	r3, sl
    20b8:	465a      	mov	r2, fp
    20ba:	4093      	lsls	r3, r2
    20bc:	001f      	movs	r7, r3
    20be:	4653      	mov	r3, sl
    20c0:	4642      	mov	r2, r8
    20c2:	4093      	lsls	r3, r2
    20c4:	001e      	movs	r6, r3
    20c6:	42af      	cmp	r7, r5
    20c8:	d829      	bhi.n	211e <__udivmoddi4+0xa2>
    20ca:	d026      	beq.n	211a <__udivmoddi4+0x9e>
    20cc:	465b      	mov	r3, fp
    20ce:	1ba4      	subs	r4, r4, r6
    20d0:	41bd      	sbcs	r5, r7
    20d2:	2b00      	cmp	r3, #0
    20d4:	da00      	bge.n	20d8 <__udivmoddi4+0x5c>
    20d6:	e079      	b.n	21cc <__udivmoddi4+0x150>
    20d8:	2200      	movs	r2, #0
    20da:	2300      	movs	r3, #0
    20dc:	9200      	str	r2, [sp, #0]
    20de:	9301      	str	r3, [sp, #4]
    20e0:	2301      	movs	r3, #1
    20e2:	465a      	mov	r2, fp
    20e4:	4093      	lsls	r3, r2
    20e6:	9301      	str	r3, [sp, #4]
    20e8:	2301      	movs	r3, #1
    20ea:	4642      	mov	r2, r8
    20ec:	4093      	lsls	r3, r2
    20ee:	9300      	str	r3, [sp, #0]
    20f0:	e019      	b.n	2126 <__udivmoddi4+0xaa>
    20f2:	4282      	cmp	r2, r0
    20f4:	d9d0      	bls.n	2098 <__udivmoddi4+0x1c>
    20f6:	2200      	movs	r2, #0
    20f8:	2300      	movs	r3, #0
    20fa:	9200      	str	r2, [sp, #0]
    20fc:	9301      	str	r3, [sp, #4]
    20fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2100:	2b00      	cmp	r3, #0
    2102:	d001      	beq.n	2108 <__udivmoddi4+0x8c>
    2104:	601c      	str	r4, [r3, #0]
    2106:	605d      	str	r5, [r3, #4]
    2108:	9800      	ldr	r0, [sp, #0]
    210a:	9901      	ldr	r1, [sp, #4]
    210c:	b003      	add	sp, #12
    210e:	bc3c      	pop	{r2, r3, r4, r5}
    2110:	4690      	mov	r8, r2
    2112:	4699      	mov	r9, r3
    2114:	46a2      	mov	sl, r4
    2116:	46ab      	mov	fp, r5
    2118:	bdf0      	pop	{r4, r5, r6, r7, pc}
    211a:	42a3      	cmp	r3, r4
    211c:	d9d6      	bls.n	20cc <__udivmoddi4+0x50>
    211e:	2200      	movs	r2, #0
    2120:	2300      	movs	r3, #0
    2122:	9200      	str	r2, [sp, #0]
    2124:	9301      	str	r3, [sp, #4]
    2126:	4643      	mov	r3, r8
    2128:	2b00      	cmp	r3, #0
    212a:	d0e8      	beq.n	20fe <__udivmoddi4+0x82>
    212c:	07fb      	lsls	r3, r7, #31
    212e:	0872      	lsrs	r2, r6, #1
    2130:	431a      	orrs	r2, r3
    2132:	4646      	mov	r6, r8
    2134:	087b      	lsrs	r3, r7, #1
    2136:	e00e      	b.n	2156 <__udivmoddi4+0xda>
    2138:	42ab      	cmp	r3, r5
    213a:	d101      	bne.n	2140 <__udivmoddi4+0xc4>
    213c:	42a2      	cmp	r2, r4
    213e:	d80c      	bhi.n	215a <__udivmoddi4+0xde>
    2140:	1aa4      	subs	r4, r4, r2
    2142:	419d      	sbcs	r5, r3
    2144:	2001      	movs	r0, #1
    2146:	1924      	adds	r4, r4, r4
    2148:	416d      	adcs	r5, r5
    214a:	2100      	movs	r1, #0
    214c:	3e01      	subs	r6, #1
    214e:	1824      	adds	r4, r4, r0
    2150:	414d      	adcs	r5, r1
    2152:	2e00      	cmp	r6, #0
    2154:	d006      	beq.n	2164 <__udivmoddi4+0xe8>
    2156:	42ab      	cmp	r3, r5
    2158:	d9ee      	bls.n	2138 <__udivmoddi4+0xbc>
    215a:	3e01      	subs	r6, #1
    215c:	1924      	adds	r4, r4, r4
    215e:	416d      	adcs	r5, r5
    2160:	2e00      	cmp	r6, #0
    2162:	d1f8      	bne.n	2156 <__udivmoddi4+0xda>
    2164:	465b      	mov	r3, fp
    2166:	9800      	ldr	r0, [sp, #0]
    2168:	9901      	ldr	r1, [sp, #4]
    216a:	1900      	adds	r0, r0, r4
    216c:	4169      	adcs	r1, r5
    216e:	2b00      	cmp	r3, #0
    2170:	db22      	blt.n	21b8 <__udivmoddi4+0x13c>
    2172:	002b      	movs	r3, r5
    2174:	465a      	mov	r2, fp
    2176:	40d3      	lsrs	r3, r2
    2178:	002a      	movs	r2, r5
    217a:	4644      	mov	r4, r8
    217c:	40e2      	lsrs	r2, r4
    217e:	001c      	movs	r4, r3
    2180:	465b      	mov	r3, fp
    2182:	0015      	movs	r5, r2
    2184:	2b00      	cmp	r3, #0
    2186:	db2c      	blt.n	21e2 <__udivmoddi4+0x166>
    2188:	0026      	movs	r6, r4
    218a:	409e      	lsls	r6, r3
    218c:	0033      	movs	r3, r6
    218e:	0026      	movs	r6, r4
    2190:	4647      	mov	r7, r8
    2192:	40be      	lsls	r6, r7
    2194:	0032      	movs	r2, r6
    2196:	1a80      	subs	r0, r0, r2
    2198:	4199      	sbcs	r1, r3
    219a:	9000      	str	r0, [sp, #0]
    219c:	9101      	str	r1, [sp, #4]
    219e:	e7ae      	b.n	20fe <__udivmoddi4+0x82>
    21a0:	4642      	mov	r2, r8
    21a2:	2320      	movs	r3, #32
    21a4:	1a9b      	subs	r3, r3, r2
    21a6:	4652      	mov	r2, sl
    21a8:	40da      	lsrs	r2, r3
    21aa:	4641      	mov	r1, r8
    21ac:	0013      	movs	r3, r2
    21ae:	464a      	mov	r2, r9
    21b0:	408a      	lsls	r2, r1
    21b2:	0017      	movs	r7, r2
    21b4:	431f      	orrs	r7, r3
    21b6:	e782      	b.n	20be <__udivmoddi4+0x42>
    21b8:	4642      	mov	r2, r8
    21ba:	2320      	movs	r3, #32
    21bc:	1a9b      	subs	r3, r3, r2
    21be:	002a      	movs	r2, r5
    21c0:	4646      	mov	r6, r8
    21c2:	409a      	lsls	r2, r3
    21c4:	0023      	movs	r3, r4
    21c6:	40f3      	lsrs	r3, r6
    21c8:	4313      	orrs	r3, r2
    21ca:	e7d5      	b.n	2178 <__udivmoddi4+0xfc>
    21cc:	4642      	mov	r2, r8
    21ce:	2320      	movs	r3, #32
    21d0:	2100      	movs	r1, #0
    21d2:	1a9b      	subs	r3, r3, r2
    21d4:	2200      	movs	r2, #0
    21d6:	9100      	str	r1, [sp, #0]
    21d8:	9201      	str	r2, [sp, #4]
    21da:	2201      	movs	r2, #1
    21dc:	40da      	lsrs	r2, r3
    21de:	9201      	str	r2, [sp, #4]
    21e0:	e782      	b.n	20e8 <__udivmoddi4+0x6c>
    21e2:	4642      	mov	r2, r8
    21e4:	2320      	movs	r3, #32
    21e6:	0026      	movs	r6, r4
    21e8:	1a9b      	subs	r3, r3, r2
    21ea:	40de      	lsrs	r6, r3
    21ec:	002f      	movs	r7, r5
    21ee:	46b4      	mov	ip, r6
    21f0:	4097      	lsls	r7, r2
    21f2:	4666      	mov	r6, ip
    21f4:	003b      	movs	r3, r7
    21f6:	4333      	orrs	r3, r6
    21f8:	e7c9      	b.n	218e <__udivmoddi4+0x112>
    21fa:	46c0      	nop			; (mov r8, r8)

000021fc <__aeabi_fadd>:
    21fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    21fe:	46c6      	mov	lr, r8
    2200:	024e      	lsls	r6, r1, #9
    2202:	0247      	lsls	r7, r0, #9
    2204:	0a76      	lsrs	r6, r6, #9
    2206:	0a7b      	lsrs	r3, r7, #9
    2208:	0044      	lsls	r4, r0, #1
    220a:	0fc5      	lsrs	r5, r0, #31
    220c:	00f7      	lsls	r7, r6, #3
    220e:	0048      	lsls	r0, r1, #1
    2210:	4698      	mov	r8, r3
    2212:	b500      	push	{lr}
    2214:	0e24      	lsrs	r4, r4, #24
    2216:	002a      	movs	r2, r5
    2218:	00db      	lsls	r3, r3, #3
    221a:	0e00      	lsrs	r0, r0, #24
    221c:	0fc9      	lsrs	r1, r1, #31
    221e:	46bc      	mov	ip, r7
    2220:	428d      	cmp	r5, r1
    2222:	d067      	beq.n	22f4 <__aeabi_fadd+0xf8>
    2224:	1a22      	subs	r2, r4, r0
    2226:	2a00      	cmp	r2, #0
    2228:	dc00      	bgt.n	222c <__aeabi_fadd+0x30>
    222a:	e0a5      	b.n	2378 <__aeabi_fadd+0x17c>
    222c:	2800      	cmp	r0, #0
    222e:	d13a      	bne.n	22a6 <__aeabi_fadd+0xaa>
    2230:	2f00      	cmp	r7, #0
    2232:	d100      	bne.n	2236 <__aeabi_fadd+0x3a>
    2234:	e093      	b.n	235e <__aeabi_fadd+0x162>
    2236:	1e51      	subs	r1, r2, #1
    2238:	2900      	cmp	r1, #0
    223a:	d000      	beq.n	223e <__aeabi_fadd+0x42>
    223c:	e0bc      	b.n	23b8 <__aeabi_fadd+0x1bc>
    223e:	2401      	movs	r4, #1
    2240:	1bdb      	subs	r3, r3, r7
    2242:	015a      	lsls	r2, r3, #5
    2244:	d546      	bpl.n	22d4 <__aeabi_fadd+0xd8>
    2246:	019b      	lsls	r3, r3, #6
    2248:	099e      	lsrs	r6, r3, #6
    224a:	0030      	movs	r0, r6
    224c:	f002 fb7c 	bl	4948 <__clzsi2>
    2250:	3805      	subs	r0, #5
    2252:	4086      	lsls	r6, r0
    2254:	4284      	cmp	r4, r0
    2256:	dd00      	ble.n	225a <__aeabi_fadd+0x5e>
    2258:	e09d      	b.n	2396 <__aeabi_fadd+0x19a>
    225a:	1b04      	subs	r4, r0, r4
    225c:	0032      	movs	r2, r6
    225e:	2020      	movs	r0, #32
    2260:	3401      	adds	r4, #1
    2262:	40e2      	lsrs	r2, r4
    2264:	1b04      	subs	r4, r0, r4
    2266:	40a6      	lsls	r6, r4
    2268:	0033      	movs	r3, r6
    226a:	1e5e      	subs	r6, r3, #1
    226c:	41b3      	sbcs	r3, r6
    226e:	2400      	movs	r4, #0
    2270:	4313      	orrs	r3, r2
    2272:	075a      	lsls	r2, r3, #29
    2274:	d004      	beq.n	2280 <__aeabi_fadd+0x84>
    2276:	220f      	movs	r2, #15
    2278:	401a      	ands	r2, r3
    227a:	2a04      	cmp	r2, #4
    227c:	d000      	beq.n	2280 <__aeabi_fadd+0x84>
    227e:	3304      	adds	r3, #4
    2280:	015a      	lsls	r2, r3, #5
    2282:	d529      	bpl.n	22d8 <__aeabi_fadd+0xdc>
    2284:	3401      	adds	r4, #1
    2286:	2cff      	cmp	r4, #255	; 0xff
    2288:	d100      	bne.n	228c <__aeabi_fadd+0x90>
    228a:	e081      	b.n	2390 <__aeabi_fadd+0x194>
    228c:	002a      	movs	r2, r5
    228e:	019b      	lsls	r3, r3, #6
    2290:	0a5b      	lsrs	r3, r3, #9
    2292:	b2e4      	uxtb	r4, r4
    2294:	025b      	lsls	r3, r3, #9
    2296:	05e4      	lsls	r4, r4, #23
    2298:	0a58      	lsrs	r0, r3, #9
    229a:	07d2      	lsls	r2, r2, #31
    229c:	4320      	orrs	r0, r4
    229e:	4310      	orrs	r0, r2
    22a0:	bc04      	pop	{r2}
    22a2:	4690      	mov	r8, r2
    22a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    22a6:	2cff      	cmp	r4, #255	; 0xff
    22a8:	d0e3      	beq.n	2272 <__aeabi_fadd+0x76>
    22aa:	2180      	movs	r1, #128	; 0x80
    22ac:	0038      	movs	r0, r7
    22ae:	04c9      	lsls	r1, r1, #19
    22b0:	4308      	orrs	r0, r1
    22b2:	4684      	mov	ip, r0
    22b4:	2a1b      	cmp	r2, #27
    22b6:	dd00      	ble.n	22ba <__aeabi_fadd+0xbe>
    22b8:	e082      	b.n	23c0 <__aeabi_fadd+0x1c4>
    22ba:	2020      	movs	r0, #32
    22bc:	4661      	mov	r1, ip
    22be:	40d1      	lsrs	r1, r2
    22c0:	1a82      	subs	r2, r0, r2
    22c2:	4660      	mov	r0, ip
    22c4:	4090      	lsls	r0, r2
    22c6:	0002      	movs	r2, r0
    22c8:	1e50      	subs	r0, r2, #1
    22ca:	4182      	sbcs	r2, r0
    22cc:	430a      	orrs	r2, r1
    22ce:	1a9b      	subs	r3, r3, r2
    22d0:	015a      	lsls	r2, r3, #5
    22d2:	d4b8      	bmi.n	2246 <__aeabi_fadd+0x4a>
    22d4:	075a      	lsls	r2, r3, #29
    22d6:	d1ce      	bne.n	2276 <__aeabi_fadd+0x7a>
    22d8:	08de      	lsrs	r6, r3, #3
    22da:	002a      	movs	r2, r5
    22dc:	2cff      	cmp	r4, #255	; 0xff
    22de:	d13a      	bne.n	2356 <__aeabi_fadd+0x15a>
    22e0:	2e00      	cmp	r6, #0
    22e2:	d100      	bne.n	22e6 <__aeabi_fadd+0xea>
    22e4:	e0ae      	b.n	2444 <__aeabi_fadd+0x248>
    22e6:	2380      	movs	r3, #128	; 0x80
    22e8:	03db      	lsls	r3, r3, #15
    22ea:	4333      	orrs	r3, r6
    22ec:	025b      	lsls	r3, r3, #9
    22ee:	0a5b      	lsrs	r3, r3, #9
    22f0:	24ff      	movs	r4, #255	; 0xff
    22f2:	e7cf      	b.n	2294 <__aeabi_fadd+0x98>
    22f4:	1a21      	subs	r1, r4, r0
    22f6:	2900      	cmp	r1, #0
    22f8:	dd52      	ble.n	23a0 <__aeabi_fadd+0x1a4>
    22fa:	2800      	cmp	r0, #0
    22fc:	d031      	beq.n	2362 <__aeabi_fadd+0x166>
    22fe:	2cff      	cmp	r4, #255	; 0xff
    2300:	d0b7      	beq.n	2272 <__aeabi_fadd+0x76>
    2302:	2080      	movs	r0, #128	; 0x80
    2304:	003e      	movs	r6, r7
    2306:	04c0      	lsls	r0, r0, #19
    2308:	4306      	orrs	r6, r0
    230a:	46b4      	mov	ip, r6
    230c:	291b      	cmp	r1, #27
    230e:	dd00      	ble.n	2312 <__aeabi_fadd+0x116>
    2310:	e0aa      	b.n	2468 <__aeabi_fadd+0x26c>
    2312:	2620      	movs	r6, #32
    2314:	4660      	mov	r0, ip
    2316:	40c8      	lsrs	r0, r1
    2318:	1a71      	subs	r1, r6, r1
    231a:	4666      	mov	r6, ip
    231c:	408e      	lsls	r6, r1
    231e:	0031      	movs	r1, r6
    2320:	1e4e      	subs	r6, r1, #1
    2322:	41b1      	sbcs	r1, r6
    2324:	4301      	orrs	r1, r0
    2326:	185b      	adds	r3, r3, r1
    2328:	0159      	lsls	r1, r3, #5
    232a:	d5d3      	bpl.n	22d4 <__aeabi_fadd+0xd8>
    232c:	3401      	adds	r4, #1
    232e:	2cff      	cmp	r4, #255	; 0xff
    2330:	d100      	bne.n	2334 <__aeabi_fadd+0x138>
    2332:	e087      	b.n	2444 <__aeabi_fadd+0x248>
    2334:	2201      	movs	r2, #1
    2336:	4978      	ldr	r1, [pc, #480]	; (2518 <__aeabi_fadd+0x31c>)
    2338:	401a      	ands	r2, r3
    233a:	085b      	lsrs	r3, r3, #1
    233c:	400b      	ands	r3, r1
    233e:	4313      	orrs	r3, r2
    2340:	e797      	b.n	2272 <__aeabi_fadd+0x76>
    2342:	2c00      	cmp	r4, #0
    2344:	d000      	beq.n	2348 <__aeabi_fadd+0x14c>
    2346:	e0a7      	b.n	2498 <__aeabi_fadd+0x29c>
    2348:	2b00      	cmp	r3, #0
    234a:	d000      	beq.n	234e <__aeabi_fadd+0x152>
    234c:	e0b6      	b.n	24bc <__aeabi_fadd+0x2c0>
    234e:	1e3b      	subs	r3, r7, #0
    2350:	d162      	bne.n	2418 <__aeabi_fadd+0x21c>
    2352:	2600      	movs	r6, #0
    2354:	2200      	movs	r2, #0
    2356:	0273      	lsls	r3, r6, #9
    2358:	0a5b      	lsrs	r3, r3, #9
    235a:	b2e4      	uxtb	r4, r4
    235c:	e79a      	b.n	2294 <__aeabi_fadd+0x98>
    235e:	0014      	movs	r4, r2
    2360:	e787      	b.n	2272 <__aeabi_fadd+0x76>
    2362:	2f00      	cmp	r7, #0
    2364:	d04d      	beq.n	2402 <__aeabi_fadd+0x206>
    2366:	1e48      	subs	r0, r1, #1
    2368:	2800      	cmp	r0, #0
    236a:	d157      	bne.n	241c <__aeabi_fadd+0x220>
    236c:	4463      	add	r3, ip
    236e:	2401      	movs	r4, #1
    2370:	015a      	lsls	r2, r3, #5
    2372:	d5af      	bpl.n	22d4 <__aeabi_fadd+0xd8>
    2374:	2402      	movs	r4, #2
    2376:	e7dd      	b.n	2334 <__aeabi_fadd+0x138>
    2378:	2a00      	cmp	r2, #0
    237a:	d124      	bne.n	23c6 <__aeabi_fadd+0x1ca>
    237c:	1c62      	adds	r2, r4, #1
    237e:	b2d2      	uxtb	r2, r2
    2380:	2a01      	cmp	r2, #1
    2382:	ddde      	ble.n	2342 <__aeabi_fadd+0x146>
    2384:	1bde      	subs	r6, r3, r7
    2386:	0172      	lsls	r2, r6, #5
    2388:	d535      	bpl.n	23f6 <__aeabi_fadd+0x1fa>
    238a:	1afe      	subs	r6, r7, r3
    238c:	000d      	movs	r5, r1
    238e:	e75c      	b.n	224a <__aeabi_fadd+0x4e>
    2390:	002a      	movs	r2, r5
    2392:	2300      	movs	r3, #0
    2394:	e77e      	b.n	2294 <__aeabi_fadd+0x98>
    2396:	0033      	movs	r3, r6
    2398:	4a60      	ldr	r2, [pc, #384]	; (251c <__aeabi_fadd+0x320>)
    239a:	1a24      	subs	r4, r4, r0
    239c:	4013      	ands	r3, r2
    239e:	e768      	b.n	2272 <__aeabi_fadd+0x76>
    23a0:	2900      	cmp	r1, #0
    23a2:	d163      	bne.n	246c <__aeabi_fadd+0x270>
    23a4:	1c61      	adds	r1, r4, #1
    23a6:	b2c8      	uxtb	r0, r1
    23a8:	2801      	cmp	r0, #1
    23aa:	dd4e      	ble.n	244a <__aeabi_fadd+0x24e>
    23ac:	29ff      	cmp	r1, #255	; 0xff
    23ae:	d049      	beq.n	2444 <__aeabi_fadd+0x248>
    23b0:	4463      	add	r3, ip
    23b2:	085b      	lsrs	r3, r3, #1
    23b4:	000c      	movs	r4, r1
    23b6:	e75c      	b.n	2272 <__aeabi_fadd+0x76>
    23b8:	2aff      	cmp	r2, #255	; 0xff
    23ba:	d041      	beq.n	2440 <__aeabi_fadd+0x244>
    23bc:	000a      	movs	r2, r1
    23be:	e779      	b.n	22b4 <__aeabi_fadd+0xb8>
    23c0:	2201      	movs	r2, #1
    23c2:	1a9b      	subs	r3, r3, r2
    23c4:	e784      	b.n	22d0 <__aeabi_fadd+0xd4>
    23c6:	2c00      	cmp	r4, #0
    23c8:	d01d      	beq.n	2406 <__aeabi_fadd+0x20a>
    23ca:	28ff      	cmp	r0, #255	; 0xff
    23cc:	d022      	beq.n	2414 <__aeabi_fadd+0x218>
    23ce:	2480      	movs	r4, #128	; 0x80
    23d0:	04e4      	lsls	r4, r4, #19
    23d2:	4252      	negs	r2, r2
    23d4:	4323      	orrs	r3, r4
    23d6:	2a1b      	cmp	r2, #27
    23d8:	dd00      	ble.n	23dc <__aeabi_fadd+0x1e0>
    23da:	e08a      	b.n	24f2 <__aeabi_fadd+0x2f6>
    23dc:	001c      	movs	r4, r3
    23de:	2520      	movs	r5, #32
    23e0:	40d4      	lsrs	r4, r2
    23e2:	1aaa      	subs	r2, r5, r2
    23e4:	4093      	lsls	r3, r2
    23e6:	1e5a      	subs	r2, r3, #1
    23e8:	4193      	sbcs	r3, r2
    23ea:	4323      	orrs	r3, r4
    23ec:	4662      	mov	r2, ip
    23ee:	0004      	movs	r4, r0
    23f0:	1ad3      	subs	r3, r2, r3
    23f2:	000d      	movs	r5, r1
    23f4:	e725      	b.n	2242 <__aeabi_fadd+0x46>
    23f6:	2e00      	cmp	r6, #0
    23f8:	d000      	beq.n	23fc <__aeabi_fadd+0x200>
    23fa:	e726      	b.n	224a <__aeabi_fadd+0x4e>
    23fc:	2200      	movs	r2, #0
    23fe:	2400      	movs	r4, #0
    2400:	e7a9      	b.n	2356 <__aeabi_fadd+0x15a>
    2402:	000c      	movs	r4, r1
    2404:	e735      	b.n	2272 <__aeabi_fadd+0x76>
    2406:	2b00      	cmp	r3, #0
    2408:	d04d      	beq.n	24a6 <__aeabi_fadd+0x2aa>
    240a:	43d2      	mvns	r2, r2
    240c:	2a00      	cmp	r2, #0
    240e:	d0ed      	beq.n	23ec <__aeabi_fadd+0x1f0>
    2410:	28ff      	cmp	r0, #255	; 0xff
    2412:	d1e0      	bne.n	23d6 <__aeabi_fadd+0x1da>
    2414:	4663      	mov	r3, ip
    2416:	24ff      	movs	r4, #255	; 0xff
    2418:	000d      	movs	r5, r1
    241a:	e72a      	b.n	2272 <__aeabi_fadd+0x76>
    241c:	29ff      	cmp	r1, #255	; 0xff
    241e:	d00f      	beq.n	2440 <__aeabi_fadd+0x244>
    2420:	0001      	movs	r1, r0
    2422:	e773      	b.n	230c <__aeabi_fadd+0x110>
    2424:	2b00      	cmp	r3, #0
    2426:	d061      	beq.n	24ec <__aeabi_fadd+0x2f0>
    2428:	24ff      	movs	r4, #255	; 0xff
    242a:	2f00      	cmp	r7, #0
    242c:	d100      	bne.n	2430 <__aeabi_fadd+0x234>
    242e:	e720      	b.n	2272 <__aeabi_fadd+0x76>
    2430:	2280      	movs	r2, #128	; 0x80
    2432:	4641      	mov	r1, r8
    2434:	03d2      	lsls	r2, r2, #15
    2436:	4211      	tst	r1, r2
    2438:	d002      	beq.n	2440 <__aeabi_fadd+0x244>
    243a:	4216      	tst	r6, r2
    243c:	d100      	bne.n	2440 <__aeabi_fadd+0x244>
    243e:	003b      	movs	r3, r7
    2440:	24ff      	movs	r4, #255	; 0xff
    2442:	e716      	b.n	2272 <__aeabi_fadd+0x76>
    2444:	24ff      	movs	r4, #255	; 0xff
    2446:	2300      	movs	r3, #0
    2448:	e724      	b.n	2294 <__aeabi_fadd+0x98>
    244a:	2c00      	cmp	r4, #0
    244c:	d1ea      	bne.n	2424 <__aeabi_fadd+0x228>
    244e:	2b00      	cmp	r3, #0
    2450:	d058      	beq.n	2504 <__aeabi_fadd+0x308>
    2452:	2f00      	cmp	r7, #0
    2454:	d100      	bne.n	2458 <__aeabi_fadd+0x25c>
    2456:	e70c      	b.n	2272 <__aeabi_fadd+0x76>
    2458:	4463      	add	r3, ip
    245a:	015a      	lsls	r2, r3, #5
    245c:	d400      	bmi.n	2460 <__aeabi_fadd+0x264>
    245e:	e739      	b.n	22d4 <__aeabi_fadd+0xd8>
    2460:	4a2e      	ldr	r2, [pc, #184]	; (251c <__aeabi_fadd+0x320>)
    2462:	000c      	movs	r4, r1
    2464:	4013      	ands	r3, r2
    2466:	e704      	b.n	2272 <__aeabi_fadd+0x76>
    2468:	2101      	movs	r1, #1
    246a:	e75c      	b.n	2326 <__aeabi_fadd+0x12a>
    246c:	2c00      	cmp	r4, #0
    246e:	d11e      	bne.n	24ae <__aeabi_fadd+0x2b2>
    2470:	2b00      	cmp	r3, #0
    2472:	d040      	beq.n	24f6 <__aeabi_fadd+0x2fa>
    2474:	43c9      	mvns	r1, r1
    2476:	2900      	cmp	r1, #0
    2478:	d00b      	beq.n	2492 <__aeabi_fadd+0x296>
    247a:	28ff      	cmp	r0, #255	; 0xff
    247c:	d036      	beq.n	24ec <__aeabi_fadd+0x2f0>
    247e:	291b      	cmp	r1, #27
    2480:	dc47      	bgt.n	2512 <__aeabi_fadd+0x316>
    2482:	001c      	movs	r4, r3
    2484:	2620      	movs	r6, #32
    2486:	40cc      	lsrs	r4, r1
    2488:	1a71      	subs	r1, r6, r1
    248a:	408b      	lsls	r3, r1
    248c:	1e59      	subs	r1, r3, #1
    248e:	418b      	sbcs	r3, r1
    2490:	4323      	orrs	r3, r4
    2492:	4463      	add	r3, ip
    2494:	0004      	movs	r4, r0
    2496:	e747      	b.n	2328 <__aeabi_fadd+0x12c>
    2498:	2b00      	cmp	r3, #0
    249a:	d118      	bne.n	24ce <__aeabi_fadd+0x2d2>
    249c:	1e3b      	subs	r3, r7, #0
    249e:	d02d      	beq.n	24fc <__aeabi_fadd+0x300>
    24a0:	000d      	movs	r5, r1
    24a2:	24ff      	movs	r4, #255	; 0xff
    24a4:	e6e5      	b.n	2272 <__aeabi_fadd+0x76>
    24a6:	003b      	movs	r3, r7
    24a8:	0004      	movs	r4, r0
    24aa:	000d      	movs	r5, r1
    24ac:	e6e1      	b.n	2272 <__aeabi_fadd+0x76>
    24ae:	28ff      	cmp	r0, #255	; 0xff
    24b0:	d01c      	beq.n	24ec <__aeabi_fadd+0x2f0>
    24b2:	2480      	movs	r4, #128	; 0x80
    24b4:	04e4      	lsls	r4, r4, #19
    24b6:	4249      	negs	r1, r1
    24b8:	4323      	orrs	r3, r4
    24ba:	e7e0      	b.n	247e <__aeabi_fadd+0x282>
    24bc:	2f00      	cmp	r7, #0
    24be:	d100      	bne.n	24c2 <__aeabi_fadd+0x2c6>
    24c0:	e6d7      	b.n	2272 <__aeabi_fadd+0x76>
    24c2:	1bde      	subs	r6, r3, r7
    24c4:	0172      	lsls	r2, r6, #5
    24c6:	d51f      	bpl.n	2508 <__aeabi_fadd+0x30c>
    24c8:	1afb      	subs	r3, r7, r3
    24ca:	000d      	movs	r5, r1
    24cc:	e6d1      	b.n	2272 <__aeabi_fadd+0x76>
    24ce:	24ff      	movs	r4, #255	; 0xff
    24d0:	2f00      	cmp	r7, #0
    24d2:	d100      	bne.n	24d6 <__aeabi_fadd+0x2da>
    24d4:	e6cd      	b.n	2272 <__aeabi_fadd+0x76>
    24d6:	2280      	movs	r2, #128	; 0x80
    24d8:	4640      	mov	r0, r8
    24da:	03d2      	lsls	r2, r2, #15
    24dc:	4210      	tst	r0, r2
    24de:	d0af      	beq.n	2440 <__aeabi_fadd+0x244>
    24e0:	4216      	tst	r6, r2
    24e2:	d1ad      	bne.n	2440 <__aeabi_fadd+0x244>
    24e4:	003b      	movs	r3, r7
    24e6:	000d      	movs	r5, r1
    24e8:	24ff      	movs	r4, #255	; 0xff
    24ea:	e6c2      	b.n	2272 <__aeabi_fadd+0x76>
    24ec:	4663      	mov	r3, ip
    24ee:	24ff      	movs	r4, #255	; 0xff
    24f0:	e6bf      	b.n	2272 <__aeabi_fadd+0x76>
    24f2:	2301      	movs	r3, #1
    24f4:	e77a      	b.n	23ec <__aeabi_fadd+0x1f0>
    24f6:	003b      	movs	r3, r7
    24f8:	0004      	movs	r4, r0
    24fa:	e6ba      	b.n	2272 <__aeabi_fadd+0x76>
    24fc:	2680      	movs	r6, #128	; 0x80
    24fe:	2200      	movs	r2, #0
    2500:	03f6      	lsls	r6, r6, #15
    2502:	e6f0      	b.n	22e6 <__aeabi_fadd+0xea>
    2504:	003b      	movs	r3, r7
    2506:	e6b4      	b.n	2272 <__aeabi_fadd+0x76>
    2508:	1e33      	subs	r3, r6, #0
    250a:	d000      	beq.n	250e <__aeabi_fadd+0x312>
    250c:	e6e2      	b.n	22d4 <__aeabi_fadd+0xd8>
    250e:	2200      	movs	r2, #0
    2510:	e721      	b.n	2356 <__aeabi_fadd+0x15a>
    2512:	2301      	movs	r3, #1
    2514:	e7bd      	b.n	2492 <__aeabi_fadd+0x296>
    2516:	46c0      	nop			; (mov r8, r8)
    2518:	7dffffff 	.word	0x7dffffff
    251c:	fbffffff 	.word	0xfbffffff

00002520 <__aeabi_fdiv>:
    2520:	b5f0      	push	{r4, r5, r6, r7, lr}
    2522:	4657      	mov	r7, sl
    2524:	464e      	mov	r6, r9
    2526:	46de      	mov	lr, fp
    2528:	4645      	mov	r5, r8
    252a:	b5e0      	push	{r5, r6, r7, lr}
    252c:	0244      	lsls	r4, r0, #9
    252e:	0043      	lsls	r3, r0, #1
    2530:	0fc6      	lsrs	r6, r0, #31
    2532:	b083      	sub	sp, #12
    2534:	1c0f      	adds	r7, r1, #0
    2536:	0a64      	lsrs	r4, r4, #9
    2538:	0e1b      	lsrs	r3, r3, #24
    253a:	46b2      	mov	sl, r6
    253c:	d053      	beq.n	25e6 <__aeabi_fdiv+0xc6>
    253e:	2bff      	cmp	r3, #255	; 0xff
    2540:	d027      	beq.n	2592 <__aeabi_fdiv+0x72>
    2542:	2280      	movs	r2, #128	; 0x80
    2544:	00e4      	lsls	r4, r4, #3
    2546:	04d2      	lsls	r2, r2, #19
    2548:	4314      	orrs	r4, r2
    254a:	227f      	movs	r2, #127	; 0x7f
    254c:	4252      	negs	r2, r2
    254e:	4690      	mov	r8, r2
    2550:	4498      	add	r8, r3
    2552:	2300      	movs	r3, #0
    2554:	4699      	mov	r9, r3
    2556:	469b      	mov	fp, r3
    2558:	027d      	lsls	r5, r7, #9
    255a:	0078      	lsls	r0, r7, #1
    255c:	0ffb      	lsrs	r3, r7, #31
    255e:	0a6d      	lsrs	r5, r5, #9
    2560:	0e00      	lsrs	r0, r0, #24
    2562:	9300      	str	r3, [sp, #0]
    2564:	d024      	beq.n	25b0 <__aeabi_fdiv+0x90>
    2566:	28ff      	cmp	r0, #255	; 0xff
    2568:	d046      	beq.n	25f8 <__aeabi_fdiv+0xd8>
    256a:	2380      	movs	r3, #128	; 0x80
    256c:	2100      	movs	r1, #0
    256e:	00ed      	lsls	r5, r5, #3
    2570:	04db      	lsls	r3, r3, #19
    2572:	431d      	orrs	r5, r3
    2574:	387f      	subs	r0, #127	; 0x7f
    2576:	4647      	mov	r7, r8
    2578:	1a38      	subs	r0, r7, r0
    257a:	464f      	mov	r7, r9
    257c:	430f      	orrs	r7, r1
    257e:	00bf      	lsls	r7, r7, #2
    2580:	46b9      	mov	r9, r7
    2582:	0033      	movs	r3, r6
    2584:	9a00      	ldr	r2, [sp, #0]
    2586:	4f87      	ldr	r7, [pc, #540]	; (27a4 <__aeabi_fdiv+0x284>)
    2588:	4053      	eors	r3, r2
    258a:	464a      	mov	r2, r9
    258c:	58ba      	ldr	r2, [r7, r2]
    258e:	9301      	str	r3, [sp, #4]
    2590:	4697      	mov	pc, r2
    2592:	2c00      	cmp	r4, #0
    2594:	d14e      	bne.n	2634 <__aeabi_fdiv+0x114>
    2596:	2308      	movs	r3, #8
    2598:	4699      	mov	r9, r3
    259a:	33f7      	adds	r3, #247	; 0xf7
    259c:	4698      	mov	r8, r3
    259e:	3bfd      	subs	r3, #253	; 0xfd
    25a0:	469b      	mov	fp, r3
    25a2:	027d      	lsls	r5, r7, #9
    25a4:	0078      	lsls	r0, r7, #1
    25a6:	0ffb      	lsrs	r3, r7, #31
    25a8:	0a6d      	lsrs	r5, r5, #9
    25aa:	0e00      	lsrs	r0, r0, #24
    25ac:	9300      	str	r3, [sp, #0]
    25ae:	d1da      	bne.n	2566 <__aeabi_fdiv+0x46>
    25b0:	2d00      	cmp	r5, #0
    25b2:	d126      	bne.n	2602 <__aeabi_fdiv+0xe2>
    25b4:	2000      	movs	r0, #0
    25b6:	2101      	movs	r1, #1
    25b8:	0033      	movs	r3, r6
    25ba:	9a00      	ldr	r2, [sp, #0]
    25bc:	4f7a      	ldr	r7, [pc, #488]	; (27a8 <__aeabi_fdiv+0x288>)
    25be:	4053      	eors	r3, r2
    25c0:	4642      	mov	r2, r8
    25c2:	1a10      	subs	r0, r2, r0
    25c4:	464a      	mov	r2, r9
    25c6:	430a      	orrs	r2, r1
    25c8:	0092      	lsls	r2, r2, #2
    25ca:	58ba      	ldr	r2, [r7, r2]
    25cc:	001d      	movs	r5, r3
    25ce:	4697      	mov	pc, r2
    25d0:	9b00      	ldr	r3, [sp, #0]
    25d2:	002c      	movs	r4, r5
    25d4:	469a      	mov	sl, r3
    25d6:	468b      	mov	fp, r1
    25d8:	465b      	mov	r3, fp
    25da:	2b02      	cmp	r3, #2
    25dc:	d131      	bne.n	2642 <__aeabi_fdiv+0x122>
    25de:	4653      	mov	r3, sl
    25e0:	21ff      	movs	r1, #255	; 0xff
    25e2:	2400      	movs	r4, #0
    25e4:	e038      	b.n	2658 <__aeabi_fdiv+0x138>
    25e6:	2c00      	cmp	r4, #0
    25e8:	d117      	bne.n	261a <__aeabi_fdiv+0xfa>
    25ea:	2304      	movs	r3, #4
    25ec:	4699      	mov	r9, r3
    25ee:	2300      	movs	r3, #0
    25f0:	4698      	mov	r8, r3
    25f2:	3301      	adds	r3, #1
    25f4:	469b      	mov	fp, r3
    25f6:	e7af      	b.n	2558 <__aeabi_fdiv+0x38>
    25f8:	20ff      	movs	r0, #255	; 0xff
    25fa:	2d00      	cmp	r5, #0
    25fc:	d10b      	bne.n	2616 <__aeabi_fdiv+0xf6>
    25fe:	2102      	movs	r1, #2
    2600:	e7da      	b.n	25b8 <__aeabi_fdiv+0x98>
    2602:	0028      	movs	r0, r5
    2604:	f002 f9a0 	bl	4948 <__clzsi2>
    2608:	1f43      	subs	r3, r0, #5
    260a:	409d      	lsls	r5, r3
    260c:	2376      	movs	r3, #118	; 0x76
    260e:	425b      	negs	r3, r3
    2610:	1a18      	subs	r0, r3, r0
    2612:	2100      	movs	r1, #0
    2614:	e7af      	b.n	2576 <__aeabi_fdiv+0x56>
    2616:	2103      	movs	r1, #3
    2618:	e7ad      	b.n	2576 <__aeabi_fdiv+0x56>
    261a:	0020      	movs	r0, r4
    261c:	f002 f994 	bl	4948 <__clzsi2>
    2620:	1f43      	subs	r3, r0, #5
    2622:	409c      	lsls	r4, r3
    2624:	2376      	movs	r3, #118	; 0x76
    2626:	425b      	negs	r3, r3
    2628:	1a1b      	subs	r3, r3, r0
    262a:	4698      	mov	r8, r3
    262c:	2300      	movs	r3, #0
    262e:	4699      	mov	r9, r3
    2630:	469b      	mov	fp, r3
    2632:	e791      	b.n	2558 <__aeabi_fdiv+0x38>
    2634:	230c      	movs	r3, #12
    2636:	4699      	mov	r9, r3
    2638:	33f3      	adds	r3, #243	; 0xf3
    263a:	4698      	mov	r8, r3
    263c:	3bfc      	subs	r3, #252	; 0xfc
    263e:	469b      	mov	fp, r3
    2640:	e78a      	b.n	2558 <__aeabi_fdiv+0x38>
    2642:	2b03      	cmp	r3, #3
    2644:	d100      	bne.n	2648 <__aeabi_fdiv+0x128>
    2646:	e0a5      	b.n	2794 <__aeabi_fdiv+0x274>
    2648:	4655      	mov	r5, sl
    264a:	2b01      	cmp	r3, #1
    264c:	d000      	beq.n	2650 <__aeabi_fdiv+0x130>
    264e:	e081      	b.n	2754 <__aeabi_fdiv+0x234>
    2650:	2301      	movs	r3, #1
    2652:	2100      	movs	r1, #0
    2654:	2400      	movs	r4, #0
    2656:	402b      	ands	r3, r5
    2658:	0264      	lsls	r4, r4, #9
    265a:	05c9      	lsls	r1, r1, #23
    265c:	0a60      	lsrs	r0, r4, #9
    265e:	07db      	lsls	r3, r3, #31
    2660:	4308      	orrs	r0, r1
    2662:	4318      	orrs	r0, r3
    2664:	b003      	add	sp, #12
    2666:	bc3c      	pop	{r2, r3, r4, r5}
    2668:	4690      	mov	r8, r2
    266a:	4699      	mov	r9, r3
    266c:	46a2      	mov	sl, r4
    266e:	46ab      	mov	fp, r5
    2670:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2672:	2480      	movs	r4, #128	; 0x80
    2674:	2300      	movs	r3, #0
    2676:	03e4      	lsls	r4, r4, #15
    2678:	21ff      	movs	r1, #255	; 0xff
    267a:	e7ed      	b.n	2658 <__aeabi_fdiv+0x138>
    267c:	21ff      	movs	r1, #255	; 0xff
    267e:	2400      	movs	r4, #0
    2680:	e7ea      	b.n	2658 <__aeabi_fdiv+0x138>
    2682:	2301      	movs	r3, #1
    2684:	1a59      	subs	r1, r3, r1
    2686:	291b      	cmp	r1, #27
    2688:	dd66      	ble.n	2758 <__aeabi_fdiv+0x238>
    268a:	9a01      	ldr	r2, [sp, #4]
    268c:	4013      	ands	r3, r2
    268e:	2100      	movs	r1, #0
    2690:	2400      	movs	r4, #0
    2692:	e7e1      	b.n	2658 <__aeabi_fdiv+0x138>
    2694:	2380      	movs	r3, #128	; 0x80
    2696:	03db      	lsls	r3, r3, #15
    2698:	421c      	tst	r4, r3
    269a:	d038      	beq.n	270e <__aeabi_fdiv+0x1ee>
    269c:	421d      	tst	r5, r3
    269e:	d051      	beq.n	2744 <__aeabi_fdiv+0x224>
    26a0:	431c      	orrs	r4, r3
    26a2:	0264      	lsls	r4, r4, #9
    26a4:	0a64      	lsrs	r4, r4, #9
    26a6:	0033      	movs	r3, r6
    26a8:	21ff      	movs	r1, #255	; 0xff
    26aa:	e7d5      	b.n	2658 <__aeabi_fdiv+0x138>
    26ac:	0163      	lsls	r3, r4, #5
    26ae:	016c      	lsls	r4, r5, #5
    26b0:	42a3      	cmp	r3, r4
    26b2:	d23b      	bcs.n	272c <__aeabi_fdiv+0x20c>
    26b4:	261b      	movs	r6, #27
    26b6:	2100      	movs	r1, #0
    26b8:	3801      	subs	r0, #1
    26ba:	2501      	movs	r5, #1
    26bc:	001f      	movs	r7, r3
    26be:	0049      	lsls	r1, r1, #1
    26c0:	005b      	lsls	r3, r3, #1
    26c2:	2f00      	cmp	r7, #0
    26c4:	db01      	blt.n	26ca <__aeabi_fdiv+0x1aa>
    26c6:	429c      	cmp	r4, r3
    26c8:	d801      	bhi.n	26ce <__aeabi_fdiv+0x1ae>
    26ca:	1b1b      	subs	r3, r3, r4
    26cc:	4329      	orrs	r1, r5
    26ce:	3e01      	subs	r6, #1
    26d0:	2e00      	cmp	r6, #0
    26d2:	d1f3      	bne.n	26bc <__aeabi_fdiv+0x19c>
    26d4:	001c      	movs	r4, r3
    26d6:	1e63      	subs	r3, r4, #1
    26d8:	419c      	sbcs	r4, r3
    26da:	430c      	orrs	r4, r1
    26dc:	0001      	movs	r1, r0
    26de:	317f      	adds	r1, #127	; 0x7f
    26e0:	2900      	cmp	r1, #0
    26e2:	ddce      	ble.n	2682 <__aeabi_fdiv+0x162>
    26e4:	0763      	lsls	r3, r4, #29
    26e6:	d004      	beq.n	26f2 <__aeabi_fdiv+0x1d2>
    26e8:	230f      	movs	r3, #15
    26ea:	4023      	ands	r3, r4
    26ec:	2b04      	cmp	r3, #4
    26ee:	d000      	beq.n	26f2 <__aeabi_fdiv+0x1d2>
    26f0:	3404      	adds	r4, #4
    26f2:	0123      	lsls	r3, r4, #4
    26f4:	d503      	bpl.n	26fe <__aeabi_fdiv+0x1de>
    26f6:	0001      	movs	r1, r0
    26f8:	4b2c      	ldr	r3, [pc, #176]	; (27ac <__aeabi_fdiv+0x28c>)
    26fa:	3180      	adds	r1, #128	; 0x80
    26fc:	401c      	ands	r4, r3
    26fe:	29fe      	cmp	r1, #254	; 0xfe
    2700:	dd0d      	ble.n	271e <__aeabi_fdiv+0x1fe>
    2702:	2301      	movs	r3, #1
    2704:	9a01      	ldr	r2, [sp, #4]
    2706:	21ff      	movs	r1, #255	; 0xff
    2708:	4013      	ands	r3, r2
    270a:	2400      	movs	r4, #0
    270c:	e7a4      	b.n	2658 <__aeabi_fdiv+0x138>
    270e:	2380      	movs	r3, #128	; 0x80
    2710:	03db      	lsls	r3, r3, #15
    2712:	431c      	orrs	r4, r3
    2714:	0264      	lsls	r4, r4, #9
    2716:	0a64      	lsrs	r4, r4, #9
    2718:	0033      	movs	r3, r6
    271a:	21ff      	movs	r1, #255	; 0xff
    271c:	e79c      	b.n	2658 <__aeabi_fdiv+0x138>
    271e:	2301      	movs	r3, #1
    2720:	9a01      	ldr	r2, [sp, #4]
    2722:	01a4      	lsls	r4, r4, #6
    2724:	0a64      	lsrs	r4, r4, #9
    2726:	b2c9      	uxtb	r1, r1
    2728:	4013      	ands	r3, r2
    272a:	e795      	b.n	2658 <__aeabi_fdiv+0x138>
    272c:	1b1b      	subs	r3, r3, r4
    272e:	261a      	movs	r6, #26
    2730:	2101      	movs	r1, #1
    2732:	e7c2      	b.n	26ba <__aeabi_fdiv+0x19a>
    2734:	9b00      	ldr	r3, [sp, #0]
    2736:	468b      	mov	fp, r1
    2738:	469a      	mov	sl, r3
    273a:	2400      	movs	r4, #0
    273c:	e74c      	b.n	25d8 <__aeabi_fdiv+0xb8>
    273e:	0263      	lsls	r3, r4, #9
    2740:	d5e5      	bpl.n	270e <__aeabi_fdiv+0x1ee>
    2742:	2500      	movs	r5, #0
    2744:	2480      	movs	r4, #128	; 0x80
    2746:	03e4      	lsls	r4, r4, #15
    2748:	432c      	orrs	r4, r5
    274a:	0264      	lsls	r4, r4, #9
    274c:	0a64      	lsrs	r4, r4, #9
    274e:	9b00      	ldr	r3, [sp, #0]
    2750:	21ff      	movs	r1, #255	; 0xff
    2752:	e781      	b.n	2658 <__aeabi_fdiv+0x138>
    2754:	9501      	str	r5, [sp, #4]
    2756:	e7c1      	b.n	26dc <__aeabi_fdiv+0x1bc>
    2758:	0023      	movs	r3, r4
    275a:	2020      	movs	r0, #32
    275c:	40cb      	lsrs	r3, r1
    275e:	1a41      	subs	r1, r0, r1
    2760:	408c      	lsls	r4, r1
    2762:	1e61      	subs	r1, r4, #1
    2764:	418c      	sbcs	r4, r1
    2766:	431c      	orrs	r4, r3
    2768:	0763      	lsls	r3, r4, #29
    276a:	d004      	beq.n	2776 <__aeabi_fdiv+0x256>
    276c:	230f      	movs	r3, #15
    276e:	4023      	ands	r3, r4
    2770:	2b04      	cmp	r3, #4
    2772:	d000      	beq.n	2776 <__aeabi_fdiv+0x256>
    2774:	3404      	adds	r4, #4
    2776:	0163      	lsls	r3, r4, #5
    2778:	d505      	bpl.n	2786 <__aeabi_fdiv+0x266>
    277a:	2301      	movs	r3, #1
    277c:	9a01      	ldr	r2, [sp, #4]
    277e:	2101      	movs	r1, #1
    2780:	4013      	ands	r3, r2
    2782:	2400      	movs	r4, #0
    2784:	e768      	b.n	2658 <__aeabi_fdiv+0x138>
    2786:	2301      	movs	r3, #1
    2788:	9a01      	ldr	r2, [sp, #4]
    278a:	01a4      	lsls	r4, r4, #6
    278c:	0a64      	lsrs	r4, r4, #9
    278e:	4013      	ands	r3, r2
    2790:	2100      	movs	r1, #0
    2792:	e761      	b.n	2658 <__aeabi_fdiv+0x138>
    2794:	2380      	movs	r3, #128	; 0x80
    2796:	03db      	lsls	r3, r3, #15
    2798:	431c      	orrs	r4, r3
    279a:	0264      	lsls	r4, r4, #9
    279c:	0a64      	lsrs	r4, r4, #9
    279e:	4653      	mov	r3, sl
    27a0:	21ff      	movs	r1, #255	; 0xff
    27a2:	e759      	b.n	2658 <__aeabi_fdiv+0x138>
    27a4:	00006aa8 	.word	0x00006aa8
    27a8:	00006ae8 	.word	0x00006ae8
    27ac:	f7ffffff 	.word	0xf7ffffff

000027b0 <__eqsf2>:
    27b0:	b570      	push	{r4, r5, r6, lr}
    27b2:	0042      	lsls	r2, r0, #1
    27b4:	0245      	lsls	r5, r0, #9
    27b6:	024e      	lsls	r6, r1, #9
    27b8:	004c      	lsls	r4, r1, #1
    27ba:	0fc3      	lsrs	r3, r0, #31
    27bc:	0a6d      	lsrs	r5, r5, #9
    27be:	0e12      	lsrs	r2, r2, #24
    27c0:	0a76      	lsrs	r6, r6, #9
    27c2:	0e24      	lsrs	r4, r4, #24
    27c4:	0fc9      	lsrs	r1, r1, #31
    27c6:	2001      	movs	r0, #1
    27c8:	2aff      	cmp	r2, #255	; 0xff
    27ca:	d006      	beq.n	27da <__eqsf2+0x2a>
    27cc:	2cff      	cmp	r4, #255	; 0xff
    27ce:	d003      	beq.n	27d8 <__eqsf2+0x28>
    27d0:	42a2      	cmp	r2, r4
    27d2:	d101      	bne.n	27d8 <__eqsf2+0x28>
    27d4:	42b5      	cmp	r5, r6
    27d6:	d006      	beq.n	27e6 <__eqsf2+0x36>
    27d8:	bd70      	pop	{r4, r5, r6, pc}
    27da:	2d00      	cmp	r5, #0
    27dc:	d1fc      	bne.n	27d8 <__eqsf2+0x28>
    27de:	2cff      	cmp	r4, #255	; 0xff
    27e0:	d1fa      	bne.n	27d8 <__eqsf2+0x28>
    27e2:	2e00      	cmp	r6, #0
    27e4:	d1f8      	bne.n	27d8 <__eqsf2+0x28>
    27e6:	428b      	cmp	r3, r1
    27e8:	d006      	beq.n	27f8 <__eqsf2+0x48>
    27ea:	2001      	movs	r0, #1
    27ec:	2a00      	cmp	r2, #0
    27ee:	d1f3      	bne.n	27d8 <__eqsf2+0x28>
    27f0:	0028      	movs	r0, r5
    27f2:	1e45      	subs	r5, r0, #1
    27f4:	41a8      	sbcs	r0, r5
    27f6:	e7ef      	b.n	27d8 <__eqsf2+0x28>
    27f8:	2000      	movs	r0, #0
    27fa:	e7ed      	b.n	27d8 <__eqsf2+0x28>

000027fc <__gesf2>:
    27fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    27fe:	0042      	lsls	r2, r0, #1
    2800:	0245      	lsls	r5, r0, #9
    2802:	024c      	lsls	r4, r1, #9
    2804:	0fc3      	lsrs	r3, r0, #31
    2806:	0048      	lsls	r0, r1, #1
    2808:	0a6d      	lsrs	r5, r5, #9
    280a:	0e12      	lsrs	r2, r2, #24
    280c:	0a64      	lsrs	r4, r4, #9
    280e:	0e00      	lsrs	r0, r0, #24
    2810:	0fc9      	lsrs	r1, r1, #31
    2812:	2aff      	cmp	r2, #255	; 0xff
    2814:	d01e      	beq.n	2854 <__gesf2+0x58>
    2816:	28ff      	cmp	r0, #255	; 0xff
    2818:	d021      	beq.n	285e <__gesf2+0x62>
    281a:	2a00      	cmp	r2, #0
    281c:	d10a      	bne.n	2834 <__gesf2+0x38>
    281e:	426e      	negs	r6, r5
    2820:	416e      	adcs	r6, r5
    2822:	b2f6      	uxtb	r6, r6
    2824:	2800      	cmp	r0, #0
    2826:	d10f      	bne.n	2848 <__gesf2+0x4c>
    2828:	2c00      	cmp	r4, #0
    282a:	d10d      	bne.n	2848 <__gesf2+0x4c>
    282c:	2000      	movs	r0, #0
    282e:	2d00      	cmp	r5, #0
    2830:	d009      	beq.n	2846 <__gesf2+0x4a>
    2832:	e005      	b.n	2840 <__gesf2+0x44>
    2834:	2800      	cmp	r0, #0
    2836:	d101      	bne.n	283c <__gesf2+0x40>
    2838:	2c00      	cmp	r4, #0
    283a:	d001      	beq.n	2840 <__gesf2+0x44>
    283c:	428b      	cmp	r3, r1
    283e:	d011      	beq.n	2864 <__gesf2+0x68>
    2840:	2101      	movs	r1, #1
    2842:	4258      	negs	r0, r3
    2844:	4308      	orrs	r0, r1
    2846:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2848:	2e00      	cmp	r6, #0
    284a:	d0f7      	beq.n	283c <__gesf2+0x40>
    284c:	2001      	movs	r0, #1
    284e:	3901      	subs	r1, #1
    2850:	4308      	orrs	r0, r1
    2852:	e7f8      	b.n	2846 <__gesf2+0x4a>
    2854:	2d00      	cmp	r5, #0
    2856:	d0de      	beq.n	2816 <__gesf2+0x1a>
    2858:	2002      	movs	r0, #2
    285a:	4240      	negs	r0, r0
    285c:	e7f3      	b.n	2846 <__gesf2+0x4a>
    285e:	2c00      	cmp	r4, #0
    2860:	d0db      	beq.n	281a <__gesf2+0x1e>
    2862:	e7f9      	b.n	2858 <__gesf2+0x5c>
    2864:	4282      	cmp	r2, r0
    2866:	dceb      	bgt.n	2840 <__gesf2+0x44>
    2868:	db04      	blt.n	2874 <__gesf2+0x78>
    286a:	42a5      	cmp	r5, r4
    286c:	d8e8      	bhi.n	2840 <__gesf2+0x44>
    286e:	2000      	movs	r0, #0
    2870:	42a5      	cmp	r5, r4
    2872:	d2e8      	bcs.n	2846 <__gesf2+0x4a>
    2874:	2101      	movs	r1, #1
    2876:	1e58      	subs	r0, r3, #1
    2878:	4308      	orrs	r0, r1
    287a:	e7e4      	b.n	2846 <__gesf2+0x4a>

0000287c <__lesf2>:
    287c:	b5f0      	push	{r4, r5, r6, r7, lr}
    287e:	0042      	lsls	r2, r0, #1
    2880:	024d      	lsls	r5, r1, #9
    2882:	004c      	lsls	r4, r1, #1
    2884:	0246      	lsls	r6, r0, #9
    2886:	0a76      	lsrs	r6, r6, #9
    2888:	0e12      	lsrs	r2, r2, #24
    288a:	0fc3      	lsrs	r3, r0, #31
    288c:	0a6d      	lsrs	r5, r5, #9
    288e:	0e24      	lsrs	r4, r4, #24
    2890:	0fc9      	lsrs	r1, r1, #31
    2892:	2aff      	cmp	r2, #255	; 0xff
    2894:	d016      	beq.n	28c4 <__lesf2+0x48>
    2896:	2cff      	cmp	r4, #255	; 0xff
    2898:	d018      	beq.n	28cc <__lesf2+0x50>
    289a:	2a00      	cmp	r2, #0
    289c:	d10a      	bne.n	28b4 <__lesf2+0x38>
    289e:	4270      	negs	r0, r6
    28a0:	4170      	adcs	r0, r6
    28a2:	b2c0      	uxtb	r0, r0
    28a4:	2c00      	cmp	r4, #0
    28a6:	d015      	beq.n	28d4 <__lesf2+0x58>
    28a8:	2800      	cmp	r0, #0
    28aa:	d005      	beq.n	28b8 <__lesf2+0x3c>
    28ac:	2001      	movs	r0, #1
    28ae:	3901      	subs	r1, #1
    28b0:	4308      	orrs	r0, r1
    28b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    28b4:	2c00      	cmp	r4, #0
    28b6:	d013      	beq.n	28e0 <__lesf2+0x64>
    28b8:	4299      	cmp	r1, r3
    28ba:	d014      	beq.n	28e6 <__lesf2+0x6a>
    28bc:	2001      	movs	r0, #1
    28be:	425b      	negs	r3, r3
    28c0:	4318      	orrs	r0, r3
    28c2:	e7f6      	b.n	28b2 <__lesf2+0x36>
    28c4:	2002      	movs	r0, #2
    28c6:	2e00      	cmp	r6, #0
    28c8:	d1f3      	bne.n	28b2 <__lesf2+0x36>
    28ca:	e7e4      	b.n	2896 <__lesf2+0x1a>
    28cc:	2002      	movs	r0, #2
    28ce:	2d00      	cmp	r5, #0
    28d0:	d1ef      	bne.n	28b2 <__lesf2+0x36>
    28d2:	e7e2      	b.n	289a <__lesf2+0x1e>
    28d4:	2d00      	cmp	r5, #0
    28d6:	d1e7      	bne.n	28a8 <__lesf2+0x2c>
    28d8:	2000      	movs	r0, #0
    28da:	2e00      	cmp	r6, #0
    28dc:	d0e9      	beq.n	28b2 <__lesf2+0x36>
    28de:	e7ed      	b.n	28bc <__lesf2+0x40>
    28e0:	2d00      	cmp	r5, #0
    28e2:	d1e9      	bne.n	28b8 <__lesf2+0x3c>
    28e4:	e7ea      	b.n	28bc <__lesf2+0x40>
    28e6:	42a2      	cmp	r2, r4
    28e8:	dc06      	bgt.n	28f8 <__lesf2+0x7c>
    28ea:	dbdf      	blt.n	28ac <__lesf2+0x30>
    28ec:	42ae      	cmp	r6, r5
    28ee:	d803      	bhi.n	28f8 <__lesf2+0x7c>
    28f0:	2000      	movs	r0, #0
    28f2:	42ae      	cmp	r6, r5
    28f4:	d3da      	bcc.n	28ac <__lesf2+0x30>
    28f6:	e7dc      	b.n	28b2 <__lesf2+0x36>
    28f8:	2001      	movs	r0, #1
    28fa:	4249      	negs	r1, r1
    28fc:	4308      	orrs	r0, r1
    28fe:	e7d8      	b.n	28b2 <__lesf2+0x36>

00002900 <__aeabi_fmul>:
    2900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2902:	4657      	mov	r7, sl
    2904:	464e      	mov	r6, r9
    2906:	4645      	mov	r5, r8
    2908:	46de      	mov	lr, fp
    290a:	b5e0      	push	{r5, r6, r7, lr}
    290c:	0247      	lsls	r7, r0, #9
    290e:	0046      	lsls	r6, r0, #1
    2910:	4688      	mov	r8, r1
    2912:	0a7f      	lsrs	r7, r7, #9
    2914:	0e36      	lsrs	r6, r6, #24
    2916:	0fc4      	lsrs	r4, r0, #31
    2918:	2e00      	cmp	r6, #0
    291a:	d047      	beq.n	29ac <__aeabi_fmul+0xac>
    291c:	2eff      	cmp	r6, #255	; 0xff
    291e:	d024      	beq.n	296a <__aeabi_fmul+0x6a>
    2920:	00fb      	lsls	r3, r7, #3
    2922:	2780      	movs	r7, #128	; 0x80
    2924:	04ff      	lsls	r7, r7, #19
    2926:	431f      	orrs	r7, r3
    2928:	2300      	movs	r3, #0
    292a:	4699      	mov	r9, r3
    292c:	469a      	mov	sl, r3
    292e:	3e7f      	subs	r6, #127	; 0x7f
    2930:	4643      	mov	r3, r8
    2932:	025d      	lsls	r5, r3, #9
    2934:	0058      	lsls	r0, r3, #1
    2936:	0fdb      	lsrs	r3, r3, #31
    2938:	0a6d      	lsrs	r5, r5, #9
    293a:	0e00      	lsrs	r0, r0, #24
    293c:	4698      	mov	r8, r3
    293e:	d043      	beq.n	29c8 <__aeabi_fmul+0xc8>
    2940:	28ff      	cmp	r0, #255	; 0xff
    2942:	d03b      	beq.n	29bc <__aeabi_fmul+0xbc>
    2944:	00eb      	lsls	r3, r5, #3
    2946:	2580      	movs	r5, #128	; 0x80
    2948:	2200      	movs	r2, #0
    294a:	04ed      	lsls	r5, r5, #19
    294c:	431d      	orrs	r5, r3
    294e:	387f      	subs	r0, #127	; 0x7f
    2950:	1836      	adds	r6, r6, r0
    2952:	1c73      	adds	r3, r6, #1
    2954:	4641      	mov	r1, r8
    2956:	469b      	mov	fp, r3
    2958:	464b      	mov	r3, r9
    295a:	4061      	eors	r1, r4
    295c:	4313      	orrs	r3, r2
    295e:	2b0f      	cmp	r3, #15
    2960:	d864      	bhi.n	2a2c <__aeabi_fmul+0x12c>
    2962:	4875      	ldr	r0, [pc, #468]	; (2b38 <__aeabi_fmul+0x238>)
    2964:	009b      	lsls	r3, r3, #2
    2966:	58c3      	ldr	r3, [r0, r3]
    2968:	469f      	mov	pc, r3
    296a:	2f00      	cmp	r7, #0
    296c:	d142      	bne.n	29f4 <__aeabi_fmul+0xf4>
    296e:	2308      	movs	r3, #8
    2970:	4699      	mov	r9, r3
    2972:	3b06      	subs	r3, #6
    2974:	26ff      	movs	r6, #255	; 0xff
    2976:	469a      	mov	sl, r3
    2978:	e7da      	b.n	2930 <__aeabi_fmul+0x30>
    297a:	4641      	mov	r1, r8
    297c:	2a02      	cmp	r2, #2
    297e:	d028      	beq.n	29d2 <__aeabi_fmul+0xd2>
    2980:	2a03      	cmp	r2, #3
    2982:	d100      	bne.n	2986 <__aeabi_fmul+0x86>
    2984:	e0ce      	b.n	2b24 <__aeabi_fmul+0x224>
    2986:	2a01      	cmp	r2, #1
    2988:	d000      	beq.n	298c <__aeabi_fmul+0x8c>
    298a:	e0ac      	b.n	2ae6 <__aeabi_fmul+0x1e6>
    298c:	4011      	ands	r1, r2
    298e:	2000      	movs	r0, #0
    2990:	2200      	movs	r2, #0
    2992:	b2cc      	uxtb	r4, r1
    2994:	0240      	lsls	r0, r0, #9
    2996:	05d2      	lsls	r2, r2, #23
    2998:	0a40      	lsrs	r0, r0, #9
    299a:	07e4      	lsls	r4, r4, #31
    299c:	4310      	orrs	r0, r2
    299e:	4320      	orrs	r0, r4
    29a0:	bc3c      	pop	{r2, r3, r4, r5}
    29a2:	4690      	mov	r8, r2
    29a4:	4699      	mov	r9, r3
    29a6:	46a2      	mov	sl, r4
    29a8:	46ab      	mov	fp, r5
    29aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    29ac:	2f00      	cmp	r7, #0
    29ae:	d115      	bne.n	29dc <__aeabi_fmul+0xdc>
    29b0:	2304      	movs	r3, #4
    29b2:	4699      	mov	r9, r3
    29b4:	3b03      	subs	r3, #3
    29b6:	2600      	movs	r6, #0
    29b8:	469a      	mov	sl, r3
    29ba:	e7b9      	b.n	2930 <__aeabi_fmul+0x30>
    29bc:	20ff      	movs	r0, #255	; 0xff
    29be:	2202      	movs	r2, #2
    29c0:	2d00      	cmp	r5, #0
    29c2:	d0c5      	beq.n	2950 <__aeabi_fmul+0x50>
    29c4:	2203      	movs	r2, #3
    29c6:	e7c3      	b.n	2950 <__aeabi_fmul+0x50>
    29c8:	2d00      	cmp	r5, #0
    29ca:	d119      	bne.n	2a00 <__aeabi_fmul+0x100>
    29cc:	2000      	movs	r0, #0
    29ce:	2201      	movs	r2, #1
    29d0:	e7be      	b.n	2950 <__aeabi_fmul+0x50>
    29d2:	2401      	movs	r4, #1
    29d4:	22ff      	movs	r2, #255	; 0xff
    29d6:	400c      	ands	r4, r1
    29d8:	2000      	movs	r0, #0
    29da:	e7db      	b.n	2994 <__aeabi_fmul+0x94>
    29dc:	0038      	movs	r0, r7
    29de:	f001 ffb3 	bl	4948 <__clzsi2>
    29e2:	2676      	movs	r6, #118	; 0x76
    29e4:	1f43      	subs	r3, r0, #5
    29e6:	409f      	lsls	r7, r3
    29e8:	2300      	movs	r3, #0
    29ea:	4276      	negs	r6, r6
    29ec:	1a36      	subs	r6, r6, r0
    29ee:	4699      	mov	r9, r3
    29f0:	469a      	mov	sl, r3
    29f2:	e79d      	b.n	2930 <__aeabi_fmul+0x30>
    29f4:	230c      	movs	r3, #12
    29f6:	4699      	mov	r9, r3
    29f8:	3b09      	subs	r3, #9
    29fa:	26ff      	movs	r6, #255	; 0xff
    29fc:	469a      	mov	sl, r3
    29fe:	e797      	b.n	2930 <__aeabi_fmul+0x30>
    2a00:	0028      	movs	r0, r5
    2a02:	f001 ffa1 	bl	4948 <__clzsi2>
    2a06:	1f43      	subs	r3, r0, #5
    2a08:	409d      	lsls	r5, r3
    2a0a:	2376      	movs	r3, #118	; 0x76
    2a0c:	425b      	negs	r3, r3
    2a0e:	1a18      	subs	r0, r3, r0
    2a10:	2200      	movs	r2, #0
    2a12:	e79d      	b.n	2950 <__aeabi_fmul+0x50>
    2a14:	2080      	movs	r0, #128	; 0x80
    2a16:	2400      	movs	r4, #0
    2a18:	03c0      	lsls	r0, r0, #15
    2a1a:	22ff      	movs	r2, #255	; 0xff
    2a1c:	e7ba      	b.n	2994 <__aeabi_fmul+0x94>
    2a1e:	003d      	movs	r5, r7
    2a20:	4652      	mov	r2, sl
    2a22:	e7ab      	b.n	297c <__aeabi_fmul+0x7c>
    2a24:	003d      	movs	r5, r7
    2a26:	0021      	movs	r1, r4
    2a28:	4652      	mov	r2, sl
    2a2a:	e7a7      	b.n	297c <__aeabi_fmul+0x7c>
    2a2c:	0c3b      	lsrs	r3, r7, #16
    2a2e:	469c      	mov	ip, r3
    2a30:	042a      	lsls	r2, r5, #16
    2a32:	0c12      	lsrs	r2, r2, #16
    2a34:	0c2b      	lsrs	r3, r5, #16
    2a36:	0014      	movs	r4, r2
    2a38:	4660      	mov	r0, ip
    2a3a:	4665      	mov	r5, ip
    2a3c:	043f      	lsls	r7, r7, #16
    2a3e:	0c3f      	lsrs	r7, r7, #16
    2a40:	437c      	muls	r4, r7
    2a42:	4342      	muls	r2, r0
    2a44:	435d      	muls	r5, r3
    2a46:	437b      	muls	r3, r7
    2a48:	0c27      	lsrs	r7, r4, #16
    2a4a:	189b      	adds	r3, r3, r2
    2a4c:	18ff      	adds	r7, r7, r3
    2a4e:	42ba      	cmp	r2, r7
    2a50:	d903      	bls.n	2a5a <__aeabi_fmul+0x15a>
    2a52:	2380      	movs	r3, #128	; 0x80
    2a54:	025b      	lsls	r3, r3, #9
    2a56:	469c      	mov	ip, r3
    2a58:	4465      	add	r5, ip
    2a5a:	0424      	lsls	r4, r4, #16
    2a5c:	043a      	lsls	r2, r7, #16
    2a5e:	0c24      	lsrs	r4, r4, #16
    2a60:	1912      	adds	r2, r2, r4
    2a62:	0193      	lsls	r3, r2, #6
    2a64:	1e5c      	subs	r4, r3, #1
    2a66:	41a3      	sbcs	r3, r4
    2a68:	0c3f      	lsrs	r7, r7, #16
    2a6a:	0e92      	lsrs	r2, r2, #26
    2a6c:	197d      	adds	r5, r7, r5
    2a6e:	431a      	orrs	r2, r3
    2a70:	01ad      	lsls	r5, r5, #6
    2a72:	4315      	orrs	r5, r2
    2a74:	012b      	lsls	r3, r5, #4
    2a76:	d504      	bpl.n	2a82 <__aeabi_fmul+0x182>
    2a78:	2301      	movs	r3, #1
    2a7a:	465e      	mov	r6, fp
    2a7c:	086a      	lsrs	r2, r5, #1
    2a7e:	401d      	ands	r5, r3
    2a80:	4315      	orrs	r5, r2
    2a82:	0032      	movs	r2, r6
    2a84:	327f      	adds	r2, #127	; 0x7f
    2a86:	2a00      	cmp	r2, #0
    2a88:	dd25      	ble.n	2ad6 <__aeabi_fmul+0x1d6>
    2a8a:	076b      	lsls	r3, r5, #29
    2a8c:	d004      	beq.n	2a98 <__aeabi_fmul+0x198>
    2a8e:	230f      	movs	r3, #15
    2a90:	402b      	ands	r3, r5
    2a92:	2b04      	cmp	r3, #4
    2a94:	d000      	beq.n	2a98 <__aeabi_fmul+0x198>
    2a96:	3504      	adds	r5, #4
    2a98:	012b      	lsls	r3, r5, #4
    2a9a:	d503      	bpl.n	2aa4 <__aeabi_fmul+0x1a4>
    2a9c:	0032      	movs	r2, r6
    2a9e:	4b27      	ldr	r3, [pc, #156]	; (2b3c <__aeabi_fmul+0x23c>)
    2aa0:	3280      	adds	r2, #128	; 0x80
    2aa2:	401d      	ands	r5, r3
    2aa4:	2afe      	cmp	r2, #254	; 0xfe
    2aa6:	dc94      	bgt.n	29d2 <__aeabi_fmul+0xd2>
    2aa8:	2401      	movs	r4, #1
    2aaa:	01a8      	lsls	r0, r5, #6
    2aac:	0a40      	lsrs	r0, r0, #9
    2aae:	b2d2      	uxtb	r2, r2
    2ab0:	400c      	ands	r4, r1
    2ab2:	e76f      	b.n	2994 <__aeabi_fmul+0x94>
    2ab4:	2080      	movs	r0, #128	; 0x80
    2ab6:	03c0      	lsls	r0, r0, #15
    2ab8:	4207      	tst	r7, r0
    2aba:	d007      	beq.n	2acc <__aeabi_fmul+0x1cc>
    2abc:	4205      	tst	r5, r0
    2abe:	d105      	bne.n	2acc <__aeabi_fmul+0x1cc>
    2ac0:	4328      	orrs	r0, r5
    2ac2:	0240      	lsls	r0, r0, #9
    2ac4:	0a40      	lsrs	r0, r0, #9
    2ac6:	4644      	mov	r4, r8
    2ac8:	22ff      	movs	r2, #255	; 0xff
    2aca:	e763      	b.n	2994 <__aeabi_fmul+0x94>
    2acc:	4338      	orrs	r0, r7
    2ace:	0240      	lsls	r0, r0, #9
    2ad0:	0a40      	lsrs	r0, r0, #9
    2ad2:	22ff      	movs	r2, #255	; 0xff
    2ad4:	e75e      	b.n	2994 <__aeabi_fmul+0x94>
    2ad6:	2401      	movs	r4, #1
    2ad8:	1aa3      	subs	r3, r4, r2
    2ada:	2b1b      	cmp	r3, #27
    2adc:	dd05      	ble.n	2aea <__aeabi_fmul+0x1ea>
    2ade:	400c      	ands	r4, r1
    2ae0:	2200      	movs	r2, #0
    2ae2:	2000      	movs	r0, #0
    2ae4:	e756      	b.n	2994 <__aeabi_fmul+0x94>
    2ae6:	465e      	mov	r6, fp
    2ae8:	e7cb      	b.n	2a82 <__aeabi_fmul+0x182>
    2aea:	002a      	movs	r2, r5
    2aec:	2020      	movs	r0, #32
    2aee:	40da      	lsrs	r2, r3
    2af0:	1ac3      	subs	r3, r0, r3
    2af2:	409d      	lsls	r5, r3
    2af4:	002b      	movs	r3, r5
    2af6:	1e5d      	subs	r5, r3, #1
    2af8:	41ab      	sbcs	r3, r5
    2afa:	4313      	orrs	r3, r2
    2afc:	075a      	lsls	r2, r3, #29
    2afe:	d004      	beq.n	2b0a <__aeabi_fmul+0x20a>
    2b00:	220f      	movs	r2, #15
    2b02:	401a      	ands	r2, r3
    2b04:	2a04      	cmp	r2, #4
    2b06:	d000      	beq.n	2b0a <__aeabi_fmul+0x20a>
    2b08:	3304      	adds	r3, #4
    2b0a:	015a      	lsls	r2, r3, #5
    2b0c:	d504      	bpl.n	2b18 <__aeabi_fmul+0x218>
    2b0e:	2401      	movs	r4, #1
    2b10:	2201      	movs	r2, #1
    2b12:	400c      	ands	r4, r1
    2b14:	2000      	movs	r0, #0
    2b16:	e73d      	b.n	2994 <__aeabi_fmul+0x94>
    2b18:	2401      	movs	r4, #1
    2b1a:	019b      	lsls	r3, r3, #6
    2b1c:	0a58      	lsrs	r0, r3, #9
    2b1e:	400c      	ands	r4, r1
    2b20:	2200      	movs	r2, #0
    2b22:	e737      	b.n	2994 <__aeabi_fmul+0x94>
    2b24:	2080      	movs	r0, #128	; 0x80
    2b26:	2401      	movs	r4, #1
    2b28:	03c0      	lsls	r0, r0, #15
    2b2a:	4328      	orrs	r0, r5
    2b2c:	0240      	lsls	r0, r0, #9
    2b2e:	0a40      	lsrs	r0, r0, #9
    2b30:	400c      	ands	r4, r1
    2b32:	22ff      	movs	r2, #255	; 0xff
    2b34:	e72e      	b.n	2994 <__aeabi_fmul+0x94>
    2b36:	46c0      	nop			; (mov r8, r8)
    2b38:	00006b28 	.word	0x00006b28
    2b3c:	f7ffffff 	.word	0xf7ffffff

00002b40 <__aeabi_fsub>:
    2b40:	b5f0      	push	{r4, r5, r6, r7, lr}
    2b42:	464f      	mov	r7, r9
    2b44:	46d6      	mov	lr, sl
    2b46:	4646      	mov	r6, r8
    2b48:	0044      	lsls	r4, r0, #1
    2b4a:	b5c0      	push	{r6, r7, lr}
    2b4c:	0fc2      	lsrs	r2, r0, #31
    2b4e:	0247      	lsls	r7, r0, #9
    2b50:	0248      	lsls	r0, r1, #9
    2b52:	0a40      	lsrs	r0, r0, #9
    2b54:	4684      	mov	ip, r0
    2b56:	4666      	mov	r6, ip
    2b58:	0a7b      	lsrs	r3, r7, #9
    2b5a:	0048      	lsls	r0, r1, #1
    2b5c:	0fc9      	lsrs	r1, r1, #31
    2b5e:	469a      	mov	sl, r3
    2b60:	0e24      	lsrs	r4, r4, #24
    2b62:	0015      	movs	r5, r2
    2b64:	00db      	lsls	r3, r3, #3
    2b66:	0e00      	lsrs	r0, r0, #24
    2b68:	4689      	mov	r9, r1
    2b6a:	00f6      	lsls	r6, r6, #3
    2b6c:	28ff      	cmp	r0, #255	; 0xff
    2b6e:	d100      	bne.n	2b72 <__aeabi_fsub+0x32>
    2b70:	e08f      	b.n	2c92 <__aeabi_fsub+0x152>
    2b72:	2101      	movs	r1, #1
    2b74:	464f      	mov	r7, r9
    2b76:	404f      	eors	r7, r1
    2b78:	0039      	movs	r1, r7
    2b7a:	4291      	cmp	r1, r2
    2b7c:	d066      	beq.n	2c4c <__aeabi_fsub+0x10c>
    2b7e:	1a22      	subs	r2, r4, r0
    2b80:	2a00      	cmp	r2, #0
    2b82:	dc00      	bgt.n	2b86 <__aeabi_fsub+0x46>
    2b84:	e09d      	b.n	2cc2 <__aeabi_fsub+0x182>
    2b86:	2800      	cmp	r0, #0
    2b88:	d13d      	bne.n	2c06 <__aeabi_fsub+0xc6>
    2b8a:	2e00      	cmp	r6, #0
    2b8c:	d100      	bne.n	2b90 <__aeabi_fsub+0x50>
    2b8e:	e08b      	b.n	2ca8 <__aeabi_fsub+0x168>
    2b90:	1e51      	subs	r1, r2, #1
    2b92:	2900      	cmp	r1, #0
    2b94:	d000      	beq.n	2b98 <__aeabi_fsub+0x58>
    2b96:	e0b5      	b.n	2d04 <__aeabi_fsub+0x1c4>
    2b98:	2401      	movs	r4, #1
    2b9a:	1b9b      	subs	r3, r3, r6
    2b9c:	015a      	lsls	r2, r3, #5
    2b9e:	d544      	bpl.n	2c2a <__aeabi_fsub+0xea>
    2ba0:	019b      	lsls	r3, r3, #6
    2ba2:	099f      	lsrs	r7, r3, #6
    2ba4:	0038      	movs	r0, r7
    2ba6:	f001 fecf 	bl	4948 <__clzsi2>
    2baa:	3805      	subs	r0, #5
    2bac:	4087      	lsls	r7, r0
    2bae:	4284      	cmp	r4, r0
    2bb0:	dd00      	ble.n	2bb4 <__aeabi_fsub+0x74>
    2bb2:	e096      	b.n	2ce2 <__aeabi_fsub+0x1a2>
    2bb4:	1b04      	subs	r4, r0, r4
    2bb6:	003a      	movs	r2, r7
    2bb8:	2020      	movs	r0, #32
    2bba:	3401      	adds	r4, #1
    2bbc:	40e2      	lsrs	r2, r4
    2bbe:	1b04      	subs	r4, r0, r4
    2bc0:	40a7      	lsls	r7, r4
    2bc2:	003b      	movs	r3, r7
    2bc4:	1e5f      	subs	r7, r3, #1
    2bc6:	41bb      	sbcs	r3, r7
    2bc8:	2400      	movs	r4, #0
    2bca:	4313      	orrs	r3, r2
    2bcc:	075a      	lsls	r2, r3, #29
    2bce:	d004      	beq.n	2bda <__aeabi_fsub+0x9a>
    2bd0:	220f      	movs	r2, #15
    2bd2:	401a      	ands	r2, r3
    2bd4:	2a04      	cmp	r2, #4
    2bd6:	d000      	beq.n	2bda <__aeabi_fsub+0x9a>
    2bd8:	3304      	adds	r3, #4
    2bda:	015a      	lsls	r2, r3, #5
    2bdc:	d527      	bpl.n	2c2e <__aeabi_fsub+0xee>
    2bde:	3401      	adds	r4, #1
    2be0:	2cff      	cmp	r4, #255	; 0xff
    2be2:	d100      	bne.n	2be6 <__aeabi_fsub+0xa6>
    2be4:	e079      	b.n	2cda <__aeabi_fsub+0x19a>
    2be6:	2201      	movs	r2, #1
    2be8:	019b      	lsls	r3, r3, #6
    2bea:	0a5b      	lsrs	r3, r3, #9
    2bec:	b2e4      	uxtb	r4, r4
    2bee:	402a      	ands	r2, r5
    2bf0:	025b      	lsls	r3, r3, #9
    2bf2:	05e4      	lsls	r4, r4, #23
    2bf4:	0a58      	lsrs	r0, r3, #9
    2bf6:	07d2      	lsls	r2, r2, #31
    2bf8:	4320      	orrs	r0, r4
    2bfa:	4310      	orrs	r0, r2
    2bfc:	bc1c      	pop	{r2, r3, r4}
    2bfe:	4690      	mov	r8, r2
    2c00:	4699      	mov	r9, r3
    2c02:	46a2      	mov	sl, r4
    2c04:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c06:	2cff      	cmp	r4, #255	; 0xff
    2c08:	d0e0      	beq.n	2bcc <__aeabi_fsub+0x8c>
    2c0a:	2180      	movs	r1, #128	; 0x80
    2c0c:	04c9      	lsls	r1, r1, #19
    2c0e:	430e      	orrs	r6, r1
    2c10:	2a1b      	cmp	r2, #27
    2c12:	dc7b      	bgt.n	2d0c <__aeabi_fsub+0x1cc>
    2c14:	0031      	movs	r1, r6
    2c16:	2020      	movs	r0, #32
    2c18:	40d1      	lsrs	r1, r2
    2c1a:	1a82      	subs	r2, r0, r2
    2c1c:	4096      	lsls	r6, r2
    2c1e:	1e72      	subs	r2, r6, #1
    2c20:	4196      	sbcs	r6, r2
    2c22:	430e      	orrs	r6, r1
    2c24:	1b9b      	subs	r3, r3, r6
    2c26:	015a      	lsls	r2, r3, #5
    2c28:	d4ba      	bmi.n	2ba0 <__aeabi_fsub+0x60>
    2c2a:	075a      	lsls	r2, r3, #29
    2c2c:	d1d0      	bne.n	2bd0 <__aeabi_fsub+0x90>
    2c2e:	2201      	movs	r2, #1
    2c30:	08df      	lsrs	r7, r3, #3
    2c32:	402a      	ands	r2, r5
    2c34:	2cff      	cmp	r4, #255	; 0xff
    2c36:	d133      	bne.n	2ca0 <__aeabi_fsub+0x160>
    2c38:	2f00      	cmp	r7, #0
    2c3a:	d100      	bne.n	2c3e <__aeabi_fsub+0xfe>
    2c3c:	e0a8      	b.n	2d90 <__aeabi_fsub+0x250>
    2c3e:	2380      	movs	r3, #128	; 0x80
    2c40:	03db      	lsls	r3, r3, #15
    2c42:	433b      	orrs	r3, r7
    2c44:	025b      	lsls	r3, r3, #9
    2c46:	0a5b      	lsrs	r3, r3, #9
    2c48:	24ff      	movs	r4, #255	; 0xff
    2c4a:	e7d1      	b.n	2bf0 <__aeabi_fsub+0xb0>
    2c4c:	1a21      	subs	r1, r4, r0
    2c4e:	2900      	cmp	r1, #0
    2c50:	dd4c      	ble.n	2cec <__aeabi_fsub+0x1ac>
    2c52:	2800      	cmp	r0, #0
    2c54:	d02a      	beq.n	2cac <__aeabi_fsub+0x16c>
    2c56:	2cff      	cmp	r4, #255	; 0xff
    2c58:	d0b8      	beq.n	2bcc <__aeabi_fsub+0x8c>
    2c5a:	2080      	movs	r0, #128	; 0x80
    2c5c:	04c0      	lsls	r0, r0, #19
    2c5e:	4306      	orrs	r6, r0
    2c60:	291b      	cmp	r1, #27
    2c62:	dd00      	ble.n	2c66 <__aeabi_fsub+0x126>
    2c64:	e0af      	b.n	2dc6 <__aeabi_fsub+0x286>
    2c66:	0030      	movs	r0, r6
    2c68:	2720      	movs	r7, #32
    2c6a:	40c8      	lsrs	r0, r1
    2c6c:	1a79      	subs	r1, r7, r1
    2c6e:	408e      	lsls	r6, r1
    2c70:	1e71      	subs	r1, r6, #1
    2c72:	418e      	sbcs	r6, r1
    2c74:	4306      	orrs	r6, r0
    2c76:	199b      	adds	r3, r3, r6
    2c78:	0159      	lsls	r1, r3, #5
    2c7a:	d5d6      	bpl.n	2c2a <__aeabi_fsub+0xea>
    2c7c:	3401      	adds	r4, #1
    2c7e:	2cff      	cmp	r4, #255	; 0xff
    2c80:	d100      	bne.n	2c84 <__aeabi_fsub+0x144>
    2c82:	e085      	b.n	2d90 <__aeabi_fsub+0x250>
    2c84:	2201      	movs	r2, #1
    2c86:	497a      	ldr	r1, [pc, #488]	; (2e70 <__aeabi_fsub+0x330>)
    2c88:	401a      	ands	r2, r3
    2c8a:	085b      	lsrs	r3, r3, #1
    2c8c:	400b      	ands	r3, r1
    2c8e:	4313      	orrs	r3, r2
    2c90:	e79c      	b.n	2bcc <__aeabi_fsub+0x8c>
    2c92:	2e00      	cmp	r6, #0
    2c94:	d000      	beq.n	2c98 <__aeabi_fsub+0x158>
    2c96:	e770      	b.n	2b7a <__aeabi_fsub+0x3a>
    2c98:	e76b      	b.n	2b72 <__aeabi_fsub+0x32>
    2c9a:	1e3b      	subs	r3, r7, #0
    2c9c:	d1c5      	bne.n	2c2a <__aeabi_fsub+0xea>
    2c9e:	2200      	movs	r2, #0
    2ca0:	027b      	lsls	r3, r7, #9
    2ca2:	0a5b      	lsrs	r3, r3, #9
    2ca4:	b2e4      	uxtb	r4, r4
    2ca6:	e7a3      	b.n	2bf0 <__aeabi_fsub+0xb0>
    2ca8:	0014      	movs	r4, r2
    2caa:	e78f      	b.n	2bcc <__aeabi_fsub+0x8c>
    2cac:	2e00      	cmp	r6, #0
    2cae:	d04d      	beq.n	2d4c <__aeabi_fsub+0x20c>
    2cb0:	1e48      	subs	r0, r1, #1
    2cb2:	2800      	cmp	r0, #0
    2cb4:	d157      	bne.n	2d66 <__aeabi_fsub+0x226>
    2cb6:	199b      	adds	r3, r3, r6
    2cb8:	2401      	movs	r4, #1
    2cba:	015a      	lsls	r2, r3, #5
    2cbc:	d5b5      	bpl.n	2c2a <__aeabi_fsub+0xea>
    2cbe:	2402      	movs	r4, #2
    2cc0:	e7e0      	b.n	2c84 <__aeabi_fsub+0x144>
    2cc2:	2a00      	cmp	r2, #0
    2cc4:	d125      	bne.n	2d12 <__aeabi_fsub+0x1d2>
    2cc6:	1c62      	adds	r2, r4, #1
    2cc8:	b2d2      	uxtb	r2, r2
    2cca:	2a01      	cmp	r2, #1
    2ccc:	dd72      	ble.n	2db4 <__aeabi_fsub+0x274>
    2cce:	1b9f      	subs	r7, r3, r6
    2cd0:	017a      	lsls	r2, r7, #5
    2cd2:	d535      	bpl.n	2d40 <__aeabi_fsub+0x200>
    2cd4:	1af7      	subs	r7, r6, r3
    2cd6:	000d      	movs	r5, r1
    2cd8:	e764      	b.n	2ba4 <__aeabi_fsub+0x64>
    2cda:	2201      	movs	r2, #1
    2cdc:	2300      	movs	r3, #0
    2cde:	402a      	ands	r2, r5
    2ce0:	e786      	b.n	2bf0 <__aeabi_fsub+0xb0>
    2ce2:	003b      	movs	r3, r7
    2ce4:	4a63      	ldr	r2, [pc, #396]	; (2e74 <__aeabi_fsub+0x334>)
    2ce6:	1a24      	subs	r4, r4, r0
    2ce8:	4013      	ands	r3, r2
    2cea:	e76f      	b.n	2bcc <__aeabi_fsub+0x8c>
    2cec:	2900      	cmp	r1, #0
    2cee:	d16c      	bne.n	2dca <__aeabi_fsub+0x28a>
    2cf0:	1c61      	adds	r1, r4, #1
    2cf2:	b2c8      	uxtb	r0, r1
    2cf4:	2801      	cmp	r0, #1
    2cf6:	dd4e      	ble.n	2d96 <__aeabi_fsub+0x256>
    2cf8:	29ff      	cmp	r1, #255	; 0xff
    2cfa:	d049      	beq.n	2d90 <__aeabi_fsub+0x250>
    2cfc:	199b      	adds	r3, r3, r6
    2cfe:	085b      	lsrs	r3, r3, #1
    2d00:	000c      	movs	r4, r1
    2d02:	e763      	b.n	2bcc <__aeabi_fsub+0x8c>
    2d04:	2aff      	cmp	r2, #255	; 0xff
    2d06:	d041      	beq.n	2d8c <__aeabi_fsub+0x24c>
    2d08:	000a      	movs	r2, r1
    2d0a:	e781      	b.n	2c10 <__aeabi_fsub+0xd0>
    2d0c:	2601      	movs	r6, #1
    2d0e:	1b9b      	subs	r3, r3, r6
    2d10:	e789      	b.n	2c26 <__aeabi_fsub+0xe6>
    2d12:	2c00      	cmp	r4, #0
    2d14:	d01c      	beq.n	2d50 <__aeabi_fsub+0x210>
    2d16:	28ff      	cmp	r0, #255	; 0xff
    2d18:	d021      	beq.n	2d5e <__aeabi_fsub+0x21e>
    2d1a:	2480      	movs	r4, #128	; 0x80
    2d1c:	04e4      	lsls	r4, r4, #19
    2d1e:	4252      	negs	r2, r2
    2d20:	4323      	orrs	r3, r4
    2d22:	2a1b      	cmp	r2, #27
    2d24:	dd00      	ble.n	2d28 <__aeabi_fsub+0x1e8>
    2d26:	e096      	b.n	2e56 <__aeabi_fsub+0x316>
    2d28:	001c      	movs	r4, r3
    2d2a:	2520      	movs	r5, #32
    2d2c:	40d4      	lsrs	r4, r2
    2d2e:	1aaa      	subs	r2, r5, r2
    2d30:	4093      	lsls	r3, r2
    2d32:	1e5a      	subs	r2, r3, #1
    2d34:	4193      	sbcs	r3, r2
    2d36:	4323      	orrs	r3, r4
    2d38:	1af3      	subs	r3, r6, r3
    2d3a:	0004      	movs	r4, r0
    2d3c:	000d      	movs	r5, r1
    2d3e:	e72d      	b.n	2b9c <__aeabi_fsub+0x5c>
    2d40:	2f00      	cmp	r7, #0
    2d42:	d000      	beq.n	2d46 <__aeabi_fsub+0x206>
    2d44:	e72e      	b.n	2ba4 <__aeabi_fsub+0x64>
    2d46:	2200      	movs	r2, #0
    2d48:	2400      	movs	r4, #0
    2d4a:	e7a9      	b.n	2ca0 <__aeabi_fsub+0x160>
    2d4c:	000c      	movs	r4, r1
    2d4e:	e73d      	b.n	2bcc <__aeabi_fsub+0x8c>
    2d50:	2b00      	cmp	r3, #0
    2d52:	d058      	beq.n	2e06 <__aeabi_fsub+0x2c6>
    2d54:	43d2      	mvns	r2, r2
    2d56:	2a00      	cmp	r2, #0
    2d58:	d0ee      	beq.n	2d38 <__aeabi_fsub+0x1f8>
    2d5a:	28ff      	cmp	r0, #255	; 0xff
    2d5c:	d1e1      	bne.n	2d22 <__aeabi_fsub+0x1e2>
    2d5e:	0033      	movs	r3, r6
    2d60:	24ff      	movs	r4, #255	; 0xff
    2d62:	000d      	movs	r5, r1
    2d64:	e732      	b.n	2bcc <__aeabi_fsub+0x8c>
    2d66:	29ff      	cmp	r1, #255	; 0xff
    2d68:	d010      	beq.n	2d8c <__aeabi_fsub+0x24c>
    2d6a:	0001      	movs	r1, r0
    2d6c:	e778      	b.n	2c60 <__aeabi_fsub+0x120>
    2d6e:	2b00      	cmp	r3, #0
    2d70:	d06e      	beq.n	2e50 <__aeabi_fsub+0x310>
    2d72:	24ff      	movs	r4, #255	; 0xff
    2d74:	2e00      	cmp	r6, #0
    2d76:	d100      	bne.n	2d7a <__aeabi_fsub+0x23a>
    2d78:	e728      	b.n	2bcc <__aeabi_fsub+0x8c>
    2d7a:	2280      	movs	r2, #128	; 0x80
    2d7c:	4651      	mov	r1, sl
    2d7e:	03d2      	lsls	r2, r2, #15
    2d80:	4211      	tst	r1, r2
    2d82:	d003      	beq.n	2d8c <__aeabi_fsub+0x24c>
    2d84:	4661      	mov	r1, ip
    2d86:	4211      	tst	r1, r2
    2d88:	d100      	bne.n	2d8c <__aeabi_fsub+0x24c>
    2d8a:	0033      	movs	r3, r6
    2d8c:	24ff      	movs	r4, #255	; 0xff
    2d8e:	e71d      	b.n	2bcc <__aeabi_fsub+0x8c>
    2d90:	24ff      	movs	r4, #255	; 0xff
    2d92:	2300      	movs	r3, #0
    2d94:	e72c      	b.n	2bf0 <__aeabi_fsub+0xb0>
    2d96:	2c00      	cmp	r4, #0
    2d98:	d1e9      	bne.n	2d6e <__aeabi_fsub+0x22e>
    2d9a:	2b00      	cmp	r3, #0
    2d9c:	d063      	beq.n	2e66 <__aeabi_fsub+0x326>
    2d9e:	2e00      	cmp	r6, #0
    2da0:	d100      	bne.n	2da4 <__aeabi_fsub+0x264>
    2da2:	e713      	b.n	2bcc <__aeabi_fsub+0x8c>
    2da4:	199b      	adds	r3, r3, r6
    2da6:	015a      	lsls	r2, r3, #5
    2da8:	d400      	bmi.n	2dac <__aeabi_fsub+0x26c>
    2daa:	e73e      	b.n	2c2a <__aeabi_fsub+0xea>
    2dac:	4a31      	ldr	r2, [pc, #196]	; (2e74 <__aeabi_fsub+0x334>)
    2dae:	000c      	movs	r4, r1
    2db0:	4013      	ands	r3, r2
    2db2:	e70b      	b.n	2bcc <__aeabi_fsub+0x8c>
    2db4:	2c00      	cmp	r4, #0
    2db6:	d11e      	bne.n	2df6 <__aeabi_fsub+0x2b6>
    2db8:	2b00      	cmp	r3, #0
    2dba:	d12f      	bne.n	2e1c <__aeabi_fsub+0x2dc>
    2dbc:	2e00      	cmp	r6, #0
    2dbe:	d04f      	beq.n	2e60 <__aeabi_fsub+0x320>
    2dc0:	0033      	movs	r3, r6
    2dc2:	000d      	movs	r5, r1
    2dc4:	e702      	b.n	2bcc <__aeabi_fsub+0x8c>
    2dc6:	2601      	movs	r6, #1
    2dc8:	e755      	b.n	2c76 <__aeabi_fsub+0x136>
    2dca:	2c00      	cmp	r4, #0
    2dcc:	d11f      	bne.n	2e0e <__aeabi_fsub+0x2ce>
    2dce:	2b00      	cmp	r3, #0
    2dd0:	d043      	beq.n	2e5a <__aeabi_fsub+0x31a>
    2dd2:	43c9      	mvns	r1, r1
    2dd4:	2900      	cmp	r1, #0
    2dd6:	d00b      	beq.n	2df0 <__aeabi_fsub+0x2b0>
    2dd8:	28ff      	cmp	r0, #255	; 0xff
    2dda:	d039      	beq.n	2e50 <__aeabi_fsub+0x310>
    2ddc:	291b      	cmp	r1, #27
    2dde:	dc44      	bgt.n	2e6a <__aeabi_fsub+0x32a>
    2de0:	001c      	movs	r4, r3
    2de2:	2720      	movs	r7, #32
    2de4:	40cc      	lsrs	r4, r1
    2de6:	1a79      	subs	r1, r7, r1
    2de8:	408b      	lsls	r3, r1
    2dea:	1e59      	subs	r1, r3, #1
    2dec:	418b      	sbcs	r3, r1
    2dee:	4323      	orrs	r3, r4
    2df0:	199b      	adds	r3, r3, r6
    2df2:	0004      	movs	r4, r0
    2df4:	e740      	b.n	2c78 <__aeabi_fsub+0x138>
    2df6:	2b00      	cmp	r3, #0
    2df8:	d11a      	bne.n	2e30 <__aeabi_fsub+0x2f0>
    2dfa:	2e00      	cmp	r6, #0
    2dfc:	d124      	bne.n	2e48 <__aeabi_fsub+0x308>
    2dfe:	2780      	movs	r7, #128	; 0x80
    2e00:	2200      	movs	r2, #0
    2e02:	03ff      	lsls	r7, r7, #15
    2e04:	e71b      	b.n	2c3e <__aeabi_fsub+0xfe>
    2e06:	0033      	movs	r3, r6
    2e08:	0004      	movs	r4, r0
    2e0a:	000d      	movs	r5, r1
    2e0c:	e6de      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e0e:	28ff      	cmp	r0, #255	; 0xff
    2e10:	d01e      	beq.n	2e50 <__aeabi_fsub+0x310>
    2e12:	2480      	movs	r4, #128	; 0x80
    2e14:	04e4      	lsls	r4, r4, #19
    2e16:	4249      	negs	r1, r1
    2e18:	4323      	orrs	r3, r4
    2e1a:	e7df      	b.n	2ddc <__aeabi_fsub+0x29c>
    2e1c:	2e00      	cmp	r6, #0
    2e1e:	d100      	bne.n	2e22 <__aeabi_fsub+0x2e2>
    2e20:	e6d4      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e22:	1b9f      	subs	r7, r3, r6
    2e24:	017a      	lsls	r2, r7, #5
    2e26:	d400      	bmi.n	2e2a <__aeabi_fsub+0x2ea>
    2e28:	e737      	b.n	2c9a <__aeabi_fsub+0x15a>
    2e2a:	1af3      	subs	r3, r6, r3
    2e2c:	000d      	movs	r5, r1
    2e2e:	e6cd      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e30:	24ff      	movs	r4, #255	; 0xff
    2e32:	2e00      	cmp	r6, #0
    2e34:	d100      	bne.n	2e38 <__aeabi_fsub+0x2f8>
    2e36:	e6c9      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e38:	2280      	movs	r2, #128	; 0x80
    2e3a:	4650      	mov	r0, sl
    2e3c:	03d2      	lsls	r2, r2, #15
    2e3e:	4210      	tst	r0, r2
    2e40:	d0a4      	beq.n	2d8c <__aeabi_fsub+0x24c>
    2e42:	4660      	mov	r0, ip
    2e44:	4210      	tst	r0, r2
    2e46:	d1a1      	bne.n	2d8c <__aeabi_fsub+0x24c>
    2e48:	0033      	movs	r3, r6
    2e4a:	000d      	movs	r5, r1
    2e4c:	24ff      	movs	r4, #255	; 0xff
    2e4e:	e6bd      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e50:	0033      	movs	r3, r6
    2e52:	24ff      	movs	r4, #255	; 0xff
    2e54:	e6ba      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e56:	2301      	movs	r3, #1
    2e58:	e76e      	b.n	2d38 <__aeabi_fsub+0x1f8>
    2e5a:	0033      	movs	r3, r6
    2e5c:	0004      	movs	r4, r0
    2e5e:	e6b5      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e60:	2700      	movs	r7, #0
    2e62:	2200      	movs	r2, #0
    2e64:	e71c      	b.n	2ca0 <__aeabi_fsub+0x160>
    2e66:	0033      	movs	r3, r6
    2e68:	e6b0      	b.n	2bcc <__aeabi_fsub+0x8c>
    2e6a:	2301      	movs	r3, #1
    2e6c:	e7c0      	b.n	2df0 <__aeabi_fsub+0x2b0>
    2e6e:	46c0      	nop			; (mov r8, r8)
    2e70:	7dffffff 	.word	0x7dffffff
    2e74:	fbffffff 	.word	0xfbffffff

00002e78 <__aeabi_f2iz>:
    2e78:	0241      	lsls	r1, r0, #9
    2e7a:	0043      	lsls	r3, r0, #1
    2e7c:	0fc2      	lsrs	r2, r0, #31
    2e7e:	0a49      	lsrs	r1, r1, #9
    2e80:	0e1b      	lsrs	r3, r3, #24
    2e82:	2000      	movs	r0, #0
    2e84:	2b7e      	cmp	r3, #126	; 0x7e
    2e86:	dd0d      	ble.n	2ea4 <__aeabi_f2iz+0x2c>
    2e88:	2b9d      	cmp	r3, #157	; 0x9d
    2e8a:	dc0c      	bgt.n	2ea6 <__aeabi_f2iz+0x2e>
    2e8c:	2080      	movs	r0, #128	; 0x80
    2e8e:	0400      	lsls	r0, r0, #16
    2e90:	4301      	orrs	r1, r0
    2e92:	2b95      	cmp	r3, #149	; 0x95
    2e94:	dc0a      	bgt.n	2eac <__aeabi_f2iz+0x34>
    2e96:	2096      	movs	r0, #150	; 0x96
    2e98:	1ac3      	subs	r3, r0, r3
    2e9a:	40d9      	lsrs	r1, r3
    2e9c:	4248      	negs	r0, r1
    2e9e:	2a00      	cmp	r2, #0
    2ea0:	d100      	bne.n	2ea4 <__aeabi_f2iz+0x2c>
    2ea2:	0008      	movs	r0, r1
    2ea4:	4770      	bx	lr
    2ea6:	4b03      	ldr	r3, [pc, #12]	; (2eb4 <__aeabi_f2iz+0x3c>)
    2ea8:	18d0      	adds	r0, r2, r3
    2eaa:	e7fb      	b.n	2ea4 <__aeabi_f2iz+0x2c>
    2eac:	3b96      	subs	r3, #150	; 0x96
    2eae:	4099      	lsls	r1, r3
    2eb0:	e7f4      	b.n	2e9c <__aeabi_f2iz+0x24>
    2eb2:	46c0      	nop			; (mov r8, r8)
    2eb4:	7fffffff 	.word	0x7fffffff

00002eb8 <__aeabi_i2f>:
    2eb8:	b570      	push	{r4, r5, r6, lr}
    2eba:	2800      	cmp	r0, #0
    2ebc:	d030      	beq.n	2f20 <__aeabi_i2f+0x68>
    2ebe:	17c3      	asrs	r3, r0, #31
    2ec0:	18c4      	adds	r4, r0, r3
    2ec2:	405c      	eors	r4, r3
    2ec4:	0fc5      	lsrs	r5, r0, #31
    2ec6:	0020      	movs	r0, r4
    2ec8:	f001 fd3e 	bl	4948 <__clzsi2>
    2ecc:	239e      	movs	r3, #158	; 0x9e
    2ece:	1a1b      	subs	r3, r3, r0
    2ed0:	2b96      	cmp	r3, #150	; 0x96
    2ed2:	dc0d      	bgt.n	2ef0 <__aeabi_i2f+0x38>
    2ed4:	2296      	movs	r2, #150	; 0x96
    2ed6:	1ad2      	subs	r2, r2, r3
    2ed8:	4094      	lsls	r4, r2
    2eda:	002a      	movs	r2, r5
    2edc:	0264      	lsls	r4, r4, #9
    2ede:	0a64      	lsrs	r4, r4, #9
    2ee0:	b2db      	uxtb	r3, r3
    2ee2:	0264      	lsls	r4, r4, #9
    2ee4:	05db      	lsls	r3, r3, #23
    2ee6:	0a60      	lsrs	r0, r4, #9
    2ee8:	07d2      	lsls	r2, r2, #31
    2eea:	4318      	orrs	r0, r3
    2eec:	4310      	orrs	r0, r2
    2eee:	bd70      	pop	{r4, r5, r6, pc}
    2ef0:	2b99      	cmp	r3, #153	; 0x99
    2ef2:	dc19      	bgt.n	2f28 <__aeabi_i2f+0x70>
    2ef4:	2299      	movs	r2, #153	; 0x99
    2ef6:	1ad2      	subs	r2, r2, r3
    2ef8:	2a00      	cmp	r2, #0
    2efa:	dd29      	ble.n	2f50 <__aeabi_i2f+0x98>
    2efc:	4094      	lsls	r4, r2
    2efe:	0022      	movs	r2, r4
    2f00:	4c14      	ldr	r4, [pc, #80]	; (2f54 <__aeabi_i2f+0x9c>)
    2f02:	4014      	ands	r4, r2
    2f04:	0751      	lsls	r1, r2, #29
    2f06:	d004      	beq.n	2f12 <__aeabi_i2f+0x5a>
    2f08:	210f      	movs	r1, #15
    2f0a:	400a      	ands	r2, r1
    2f0c:	2a04      	cmp	r2, #4
    2f0e:	d000      	beq.n	2f12 <__aeabi_i2f+0x5a>
    2f10:	3404      	adds	r4, #4
    2f12:	0162      	lsls	r2, r4, #5
    2f14:	d413      	bmi.n	2f3e <__aeabi_i2f+0x86>
    2f16:	01a4      	lsls	r4, r4, #6
    2f18:	0a64      	lsrs	r4, r4, #9
    2f1a:	b2db      	uxtb	r3, r3
    2f1c:	002a      	movs	r2, r5
    2f1e:	e7e0      	b.n	2ee2 <__aeabi_i2f+0x2a>
    2f20:	2200      	movs	r2, #0
    2f22:	2300      	movs	r3, #0
    2f24:	2400      	movs	r4, #0
    2f26:	e7dc      	b.n	2ee2 <__aeabi_i2f+0x2a>
    2f28:	2205      	movs	r2, #5
    2f2a:	0021      	movs	r1, r4
    2f2c:	1a12      	subs	r2, r2, r0
    2f2e:	40d1      	lsrs	r1, r2
    2f30:	22b9      	movs	r2, #185	; 0xb9
    2f32:	1ad2      	subs	r2, r2, r3
    2f34:	4094      	lsls	r4, r2
    2f36:	1e62      	subs	r2, r4, #1
    2f38:	4194      	sbcs	r4, r2
    2f3a:	430c      	orrs	r4, r1
    2f3c:	e7da      	b.n	2ef4 <__aeabi_i2f+0x3c>
    2f3e:	4b05      	ldr	r3, [pc, #20]	; (2f54 <__aeabi_i2f+0x9c>)
    2f40:	002a      	movs	r2, r5
    2f42:	401c      	ands	r4, r3
    2f44:	239f      	movs	r3, #159	; 0x9f
    2f46:	01a4      	lsls	r4, r4, #6
    2f48:	1a1b      	subs	r3, r3, r0
    2f4a:	0a64      	lsrs	r4, r4, #9
    2f4c:	b2db      	uxtb	r3, r3
    2f4e:	e7c8      	b.n	2ee2 <__aeabi_i2f+0x2a>
    2f50:	0022      	movs	r2, r4
    2f52:	e7d5      	b.n	2f00 <__aeabi_i2f+0x48>
    2f54:	fbffffff 	.word	0xfbffffff

00002f58 <__aeabi_dadd>:
    2f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2f5a:	4645      	mov	r5, r8
    2f5c:	46de      	mov	lr, fp
    2f5e:	4657      	mov	r7, sl
    2f60:	464e      	mov	r6, r9
    2f62:	030c      	lsls	r4, r1, #12
    2f64:	b5e0      	push	{r5, r6, r7, lr}
    2f66:	004e      	lsls	r6, r1, #1
    2f68:	0fc9      	lsrs	r1, r1, #31
    2f6a:	4688      	mov	r8, r1
    2f6c:	000d      	movs	r5, r1
    2f6e:	0a61      	lsrs	r1, r4, #9
    2f70:	0f44      	lsrs	r4, r0, #29
    2f72:	430c      	orrs	r4, r1
    2f74:	00c7      	lsls	r7, r0, #3
    2f76:	0319      	lsls	r1, r3, #12
    2f78:	0058      	lsls	r0, r3, #1
    2f7a:	0fdb      	lsrs	r3, r3, #31
    2f7c:	469b      	mov	fp, r3
    2f7e:	0a4b      	lsrs	r3, r1, #9
    2f80:	0f51      	lsrs	r1, r2, #29
    2f82:	430b      	orrs	r3, r1
    2f84:	0d76      	lsrs	r6, r6, #21
    2f86:	0d40      	lsrs	r0, r0, #21
    2f88:	0019      	movs	r1, r3
    2f8a:	00d2      	lsls	r2, r2, #3
    2f8c:	45d8      	cmp	r8, fp
    2f8e:	d100      	bne.n	2f92 <__aeabi_dadd+0x3a>
    2f90:	e0ae      	b.n	30f0 <__aeabi_dadd+0x198>
    2f92:	1a35      	subs	r5, r6, r0
    2f94:	2d00      	cmp	r5, #0
    2f96:	dc00      	bgt.n	2f9a <__aeabi_dadd+0x42>
    2f98:	e0f6      	b.n	3188 <__aeabi_dadd+0x230>
    2f9a:	2800      	cmp	r0, #0
    2f9c:	d10f      	bne.n	2fbe <__aeabi_dadd+0x66>
    2f9e:	4313      	orrs	r3, r2
    2fa0:	d100      	bne.n	2fa4 <__aeabi_dadd+0x4c>
    2fa2:	e0db      	b.n	315c <__aeabi_dadd+0x204>
    2fa4:	1e6b      	subs	r3, r5, #1
    2fa6:	2b00      	cmp	r3, #0
    2fa8:	d000      	beq.n	2fac <__aeabi_dadd+0x54>
    2faa:	e137      	b.n	321c <__aeabi_dadd+0x2c4>
    2fac:	1aba      	subs	r2, r7, r2
    2fae:	4297      	cmp	r7, r2
    2fb0:	41bf      	sbcs	r7, r7
    2fb2:	1a64      	subs	r4, r4, r1
    2fb4:	427f      	negs	r7, r7
    2fb6:	1be4      	subs	r4, r4, r7
    2fb8:	2601      	movs	r6, #1
    2fba:	0017      	movs	r7, r2
    2fbc:	e024      	b.n	3008 <__aeabi_dadd+0xb0>
    2fbe:	4bc6      	ldr	r3, [pc, #792]	; (32d8 <__aeabi_dadd+0x380>)
    2fc0:	429e      	cmp	r6, r3
    2fc2:	d04d      	beq.n	3060 <__aeabi_dadd+0x108>
    2fc4:	2380      	movs	r3, #128	; 0x80
    2fc6:	041b      	lsls	r3, r3, #16
    2fc8:	4319      	orrs	r1, r3
    2fca:	2d38      	cmp	r5, #56	; 0x38
    2fcc:	dd00      	ble.n	2fd0 <__aeabi_dadd+0x78>
    2fce:	e107      	b.n	31e0 <__aeabi_dadd+0x288>
    2fd0:	2d1f      	cmp	r5, #31
    2fd2:	dd00      	ble.n	2fd6 <__aeabi_dadd+0x7e>
    2fd4:	e138      	b.n	3248 <__aeabi_dadd+0x2f0>
    2fd6:	2020      	movs	r0, #32
    2fd8:	1b43      	subs	r3, r0, r5
    2fda:	469a      	mov	sl, r3
    2fdc:	000b      	movs	r3, r1
    2fde:	4650      	mov	r0, sl
    2fe0:	4083      	lsls	r3, r0
    2fe2:	4699      	mov	r9, r3
    2fe4:	0013      	movs	r3, r2
    2fe6:	4648      	mov	r0, r9
    2fe8:	40eb      	lsrs	r3, r5
    2fea:	4318      	orrs	r0, r3
    2fec:	0003      	movs	r3, r0
    2fee:	4650      	mov	r0, sl
    2ff0:	4082      	lsls	r2, r0
    2ff2:	1e50      	subs	r0, r2, #1
    2ff4:	4182      	sbcs	r2, r0
    2ff6:	40e9      	lsrs	r1, r5
    2ff8:	431a      	orrs	r2, r3
    2ffa:	1aba      	subs	r2, r7, r2
    2ffc:	1a61      	subs	r1, r4, r1
    2ffe:	4297      	cmp	r7, r2
    3000:	41a4      	sbcs	r4, r4
    3002:	0017      	movs	r7, r2
    3004:	4264      	negs	r4, r4
    3006:	1b0c      	subs	r4, r1, r4
    3008:	0223      	lsls	r3, r4, #8
    300a:	d562      	bpl.n	30d2 <__aeabi_dadd+0x17a>
    300c:	0264      	lsls	r4, r4, #9
    300e:	0a65      	lsrs	r5, r4, #9
    3010:	2d00      	cmp	r5, #0
    3012:	d100      	bne.n	3016 <__aeabi_dadd+0xbe>
    3014:	e0df      	b.n	31d6 <__aeabi_dadd+0x27e>
    3016:	0028      	movs	r0, r5
    3018:	f001 fc96 	bl	4948 <__clzsi2>
    301c:	0003      	movs	r3, r0
    301e:	3b08      	subs	r3, #8
    3020:	2b1f      	cmp	r3, #31
    3022:	dd00      	ble.n	3026 <__aeabi_dadd+0xce>
    3024:	e0d2      	b.n	31cc <__aeabi_dadd+0x274>
    3026:	2220      	movs	r2, #32
    3028:	003c      	movs	r4, r7
    302a:	1ad2      	subs	r2, r2, r3
    302c:	409d      	lsls	r5, r3
    302e:	40d4      	lsrs	r4, r2
    3030:	409f      	lsls	r7, r3
    3032:	4325      	orrs	r5, r4
    3034:	429e      	cmp	r6, r3
    3036:	dd00      	ble.n	303a <__aeabi_dadd+0xe2>
    3038:	e0c4      	b.n	31c4 <__aeabi_dadd+0x26c>
    303a:	1b9e      	subs	r6, r3, r6
    303c:	1c73      	adds	r3, r6, #1
    303e:	2b1f      	cmp	r3, #31
    3040:	dd00      	ble.n	3044 <__aeabi_dadd+0xec>
    3042:	e0f1      	b.n	3228 <__aeabi_dadd+0x2d0>
    3044:	2220      	movs	r2, #32
    3046:	0038      	movs	r0, r7
    3048:	0029      	movs	r1, r5
    304a:	1ad2      	subs	r2, r2, r3
    304c:	40d8      	lsrs	r0, r3
    304e:	4091      	lsls	r1, r2
    3050:	4097      	lsls	r7, r2
    3052:	002c      	movs	r4, r5
    3054:	4301      	orrs	r1, r0
    3056:	1e78      	subs	r0, r7, #1
    3058:	4187      	sbcs	r7, r0
    305a:	40dc      	lsrs	r4, r3
    305c:	2600      	movs	r6, #0
    305e:	430f      	orrs	r7, r1
    3060:	077b      	lsls	r3, r7, #29
    3062:	d009      	beq.n	3078 <__aeabi_dadd+0x120>
    3064:	230f      	movs	r3, #15
    3066:	403b      	ands	r3, r7
    3068:	2b04      	cmp	r3, #4
    306a:	d005      	beq.n	3078 <__aeabi_dadd+0x120>
    306c:	1d3b      	adds	r3, r7, #4
    306e:	42bb      	cmp	r3, r7
    3070:	41bf      	sbcs	r7, r7
    3072:	427f      	negs	r7, r7
    3074:	19e4      	adds	r4, r4, r7
    3076:	001f      	movs	r7, r3
    3078:	0223      	lsls	r3, r4, #8
    307a:	d52c      	bpl.n	30d6 <__aeabi_dadd+0x17e>
    307c:	4b96      	ldr	r3, [pc, #600]	; (32d8 <__aeabi_dadd+0x380>)
    307e:	3601      	adds	r6, #1
    3080:	429e      	cmp	r6, r3
    3082:	d100      	bne.n	3086 <__aeabi_dadd+0x12e>
    3084:	e09a      	b.n	31bc <__aeabi_dadd+0x264>
    3086:	4645      	mov	r5, r8
    3088:	4b94      	ldr	r3, [pc, #592]	; (32dc <__aeabi_dadd+0x384>)
    308a:	08ff      	lsrs	r7, r7, #3
    308c:	401c      	ands	r4, r3
    308e:	0760      	lsls	r0, r4, #29
    3090:	0576      	lsls	r6, r6, #21
    3092:	0264      	lsls	r4, r4, #9
    3094:	4307      	orrs	r7, r0
    3096:	0b24      	lsrs	r4, r4, #12
    3098:	0d76      	lsrs	r6, r6, #21
    309a:	2100      	movs	r1, #0
    309c:	0324      	lsls	r4, r4, #12
    309e:	0b23      	lsrs	r3, r4, #12
    30a0:	0d0c      	lsrs	r4, r1, #20
    30a2:	4a8f      	ldr	r2, [pc, #572]	; (32e0 <__aeabi_dadd+0x388>)
    30a4:	0524      	lsls	r4, r4, #20
    30a6:	431c      	orrs	r4, r3
    30a8:	4014      	ands	r4, r2
    30aa:	0533      	lsls	r3, r6, #20
    30ac:	4323      	orrs	r3, r4
    30ae:	005b      	lsls	r3, r3, #1
    30b0:	07ed      	lsls	r5, r5, #31
    30b2:	085b      	lsrs	r3, r3, #1
    30b4:	432b      	orrs	r3, r5
    30b6:	0038      	movs	r0, r7
    30b8:	0019      	movs	r1, r3
    30ba:	bc3c      	pop	{r2, r3, r4, r5}
    30bc:	4690      	mov	r8, r2
    30be:	4699      	mov	r9, r3
    30c0:	46a2      	mov	sl, r4
    30c2:	46ab      	mov	fp, r5
    30c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    30c6:	4664      	mov	r4, ip
    30c8:	4304      	orrs	r4, r0
    30ca:	d100      	bne.n	30ce <__aeabi_dadd+0x176>
    30cc:	e211      	b.n	34f2 <__aeabi_dadd+0x59a>
    30ce:	0004      	movs	r4, r0
    30d0:	4667      	mov	r7, ip
    30d2:	077b      	lsls	r3, r7, #29
    30d4:	d1c6      	bne.n	3064 <__aeabi_dadd+0x10c>
    30d6:	4645      	mov	r5, r8
    30d8:	0760      	lsls	r0, r4, #29
    30da:	08ff      	lsrs	r7, r7, #3
    30dc:	4307      	orrs	r7, r0
    30de:	08e4      	lsrs	r4, r4, #3
    30e0:	4b7d      	ldr	r3, [pc, #500]	; (32d8 <__aeabi_dadd+0x380>)
    30e2:	429e      	cmp	r6, r3
    30e4:	d030      	beq.n	3148 <__aeabi_dadd+0x1f0>
    30e6:	0324      	lsls	r4, r4, #12
    30e8:	0576      	lsls	r6, r6, #21
    30ea:	0b24      	lsrs	r4, r4, #12
    30ec:	0d76      	lsrs	r6, r6, #21
    30ee:	e7d4      	b.n	309a <__aeabi_dadd+0x142>
    30f0:	1a33      	subs	r3, r6, r0
    30f2:	469a      	mov	sl, r3
    30f4:	2b00      	cmp	r3, #0
    30f6:	dd78      	ble.n	31ea <__aeabi_dadd+0x292>
    30f8:	2800      	cmp	r0, #0
    30fa:	d031      	beq.n	3160 <__aeabi_dadd+0x208>
    30fc:	4876      	ldr	r0, [pc, #472]	; (32d8 <__aeabi_dadd+0x380>)
    30fe:	4286      	cmp	r6, r0
    3100:	d0ae      	beq.n	3060 <__aeabi_dadd+0x108>
    3102:	2080      	movs	r0, #128	; 0x80
    3104:	0400      	lsls	r0, r0, #16
    3106:	4301      	orrs	r1, r0
    3108:	4653      	mov	r3, sl
    310a:	2b38      	cmp	r3, #56	; 0x38
    310c:	dc00      	bgt.n	3110 <__aeabi_dadd+0x1b8>
    310e:	e0e9      	b.n	32e4 <__aeabi_dadd+0x38c>
    3110:	430a      	orrs	r2, r1
    3112:	1e51      	subs	r1, r2, #1
    3114:	418a      	sbcs	r2, r1
    3116:	2100      	movs	r1, #0
    3118:	19d2      	adds	r2, r2, r7
    311a:	42ba      	cmp	r2, r7
    311c:	41bf      	sbcs	r7, r7
    311e:	1909      	adds	r1, r1, r4
    3120:	427c      	negs	r4, r7
    3122:	0017      	movs	r7, r2
    3124:	190c      	adds	r4, r1, r4
    3126:	0223      	lsls	r3, r4, #8
    3128:	d5d3      	bpl.n	30d2 <__aeabi_dadd+0x17a>
    312a:	4b6b      	ldr	r3, [pc, #428]	; (32d8 <__aeabi_dadd+0x380>)
    312c:	3601      	adds	r6, #1
    312e:	429e      	cmp	r6, r3
    3130:	d100      	bne.n	3134 <__aeabi_dadd+0x1dc>
    3132:	e13a      	b.n	33aa <__aeabi_dadd+0x452>
    3134:	2001      	movs	r0, #1
    3136:	4b69      	ldr	r3, [pc, #420]	; (32dc <__aeabi_dadd+0x384>)
    3138:	401c      	ands	r4, r3
    313a:	087b      	lsrs	r3, r7, #1
    313c:	4007      	ands	r7, r0
    313e:	431f      	orrs	r7, r3
    3140:	07e0      	lsls	r0, r4, #31
    3142:	4307      	orrs	r7, r0
    3144:	0864      	lsrs	r4, r4, #1
    3146:	e78b      	b.n	3060 <__aeabi_dadd+0x108>
    3148:	0023      	movs	r3, r4
    314a:	433b      	orrs	r3, r7
    314c:	d100      	bne.n	3150 <__aeabi_dadd+0x1f8>
    314e:	e1cb      	b.n	34e8 <__aeabi_dadd+0x590>
    3150:	2280      	movs	r2, #128	; 0x80
    3152:	0312      	lsls	r2, r2, #12
    3154:	4314      	orrs	r4, r2
    3156:	0324      	lsls	r4, r4, #12
    3158:	0b24      	lsrs	r4, r4, #12
    315a:	e79e      	b.n	309a <__aeabi_dadd+0x142>
    315c:	002e      	movs	r6, r5
    315e:	e77f      	b.n	3060 <__aeabi_dadd+0x108>
    3160:	0008      	movs	r0, r1
    3162:	4310      	orrs	r0, r2
    3164:	d100      	bne.n	3168 <__aeabi_dadd+0x210>
    3166:	e0b4      	b.n	32d2 <__aeabi_dadd+0x37a>
    3168:	1e58      	subs	r0, r3, #1
    316a:	2800      	cmp	r0, #0
    316c:	d000      	beq.n	3170 <__aeabi_dadd+0x218>
    316e:	e0de      	b.n	332e <__aeabi_dadd+0x3d6>
    3170:	18ba      	adds	r2, r7, r2
    3172:	42ba      	cmp	r2, r7
    3174:	419b      	sbcs	r3, r3
    3176:	1864      	adds	r4, r4, r1
    3178:	425b      	negs	r3, r3
    317a:	18e4      	adds	r4, r4, r3
    317c:	0017      	movs	r7, r2
    317e:	2601      	movs	r6, #1
    3180:	0223      	lsls	r3, r4, #8
    3182:	d5a6      	bpl.n	30d2 <__aeabi_dadd+0x17a>
    3184:	2602      	movs	r6, #2
    3186:	e7d5      	b.n	3134 <__aeabi_dadd+0x1dc>
    3188:	2d00      	cmp	r5, #0
    318a:	d16e      	bne.n	326a <__aeabi_dadd+0x312>
    318c:	1c70      	adds	r0, r6, #1
    318e:	0540      	lsls	r0, r0, #21
    3190:	0d40      	lsrs	r0, r0, #21
    3192:	2801      	cmp	r0, #1
    3194:	dc00      	bgt.n	3198 <__aeabi_dadd+0x240>
    3196:	e0f9      	b.n	338c <__aeabi_dadd+0x434>
    3198:	1ab8      	subs	r0, r7, r2
    319a:	4684      	mov	ip, r0
    319c:	4287      	cmp	r7, r0
    319e:	4180      	sbcs	r0, r0
    31a0:	1ae5      	subs	r5, r4, r3
    31a2:	4240      	negs	r0, r0
    31a4:	1a2d      	subs	r5, r5, r0
    31a6:	0228      	lsls	r0, r5, #8
    31a8:	d400      	bmi.n	31ac <__aeabi_dadd+0x254>
    31aa:	e089      	b.n	32c0 <__aeabi_dadd+0x368>
    31ac:	1bd7      	subs	r7, r2, r7
    31ae:	42ba      	cmp	r2, r7
    31b0:	4192      	sbcs	r2, r2
    31b2:	1b1c      	subs	r4, r3, r4
    31b4:	4252      	negs	r2, r2
    31b6:	1aa5      	subs	r5, r4, r2
    31b8:	46d8      	mov	r8, fp
    31ba:	e729      	b.n	3010 <__aeabi_dadd+0xb8>
    31bc:	4645      	mov	r5, r8
    31be:	2400      	movs	r4, #0
    31c0:	2700      	movs	r7, #0
    31c2:	e76a      	b.n	309a <__aeabi_dadd+0x142>
    31c4:	4c45      	ldr	r4, [pc, #276]	; (32dc <__aeabi_dadd+0x384>)
    31c6:	1af6      	subs	r6, r6, r3
    31c8:	402c      	ands	r4, r5
    31ca:	e749      	b.n	3060 <__aeabi_dadd+0x108>
    31cc:	003d      	movs	r5, r7
    31ce:	3828      	subs	r0, #40	; 0x28
    31d0:	4085      	lsls	r5, r0
    31d2:	2700      	movs	r7, #0
    31d4:	e72e      	b.n	3034 <__aeabi_dadd+0xdc>
    31d6:	0038      	movs	r0, r7
    31d8:	f001 fbb6 	bl	4948 <__clzsi2>
    31dc:	3020      	adds	r0, #32
    31de:	e71d      	b.n	301c <__aeabi_dadd+0xc4>
    31e0:	430a      	orrs	r2, r1
    31e2:	1e51      	subs	r1, r2, #1
    31e4:	418a      	sbcs	r2, r1
    31e6:	2100      	movs	r1, #0
    31e8:	e707      	b.n	2ffa <__aeabi_dadd+0xa2>
    31ea:	2b00      	cmp	r3, #0
    31ec:	d000      	beq.n	31f0 <__aeabi_dadd+0x298>
    31ee:	e0f3      	b.n	33d8 <__aeabi_dadd+0x480>
    31f0:	1c70      	adds	r0, r6, #1
    31f2:	0543      	lsls	r3, r0, #21
    31f4:	0d5b      	lsrs	r3, r3, #21
    31f6:	2b01      	cmp	r3, #1
    31f8:	dc00      	bgt.n	31fc <__aeabi_dadd+0x2a4>
    31fa:	e0ad      	b.n	3358 <__aeabi_dadd+0x400>
    31fc:	4b36      	ldr	r3, [pc, #216]	; (32d8 <__aeabi_dadd+0x380>)
    31fe:	4298      	cmp	r0, r3
    3200:	d100      	bne.n	3204 <__aeabi_dadd+0x2ac>
    3202:	e0d1      	b.n	33a8 <__aeabi_dadd+0x450>
    3204:	18ba      	adds	r2, r7, r2
    3206:	42ba      	cmp	r2, r7
    3208:	41bf      	sbcs	r7, r7
    320a:	1864      	adds	r4, r4, r1
    320c:	427f      	negs	r7, r7
    320e:	19e4      	adds	r4, r4, r7
    3210:	07e7      	lsls	r7, r4, #31
    3212:	0852      	lsrs	r2, r2, #1
    3214:	4317      	orrs	r7, r2
    3216:	0864      	lsrs	r4, r4, #1
    3218:	0006      	movs	r6, r0
    321a:	e721      	b.n	3060 <__aeabi_dadd+0x108>
    321c:	482e      	ldr	r0, [pc, #184]	; (32d8 <__aeabi_dadd+0x380>)
    321e:	4285      	cmp	r5, r0
    3220:	d100      	bne.n	3224 <__aeabi_dadd+0x2cc>
    3222:	e093      	b.n	334c <__aeabi_dadd+0x3f4>
    3224:	001d      	movs	r5, r3
    3226:	e6d0      	b.n	2fca <__aeabi_dadd+0x72>
    3228:	0029      	movs	r1, r5
    322a:	3e1f      	subs	r6, #31
    322c:	40f1      	lsrs	r1, r6
    322e:	2b20      	cmp	r3, #32
    3230:	d100      	bne.n	3234 <__aeabi_dadd+0x2dc>
    3232:	e08d      	b.n	3350 <__aeabi_dadd+0x3f8>
    3234:	2240      	movs	r2, #64	; 0x40
    3236:	1ad3      	subs	r3, r2, r3
    3238:	409d      	lsls	r5, r3
    323a:	432f      	orrs	r7, r5
    323c:	1e7d      	subs	r5, r7, #1
    323e:	41af      	sbcs	r7, r5
    3240:	2400      	movs	r4, #0
    3242:	430f      	orrs	r7, r1
    3244:	2600      	movs	r6, #0
    3246:	e744      	b.n	30d2 <__aeabi_dadd+0x17a>
    3248:	002b      	movs	r3, r5
    324a:	0008      	movs	r0, r1
    324c:	3b20      	subs	r3, #32
    324e:	40d8      	lsrs	r0, r3
    3250:	0003      	movs	r3, r0
    3252:	2d20      	cmp	r5, #32
    3254:	d100      	bne.n	3258 <__aeabi_dadd+0x300>
    3256:	e07d      	b.n	3354 <__aeabi_dadd+0x3fc>
    3258:	2040      	movs	r0, #64	; 0x40
    325a:	1b45      	subs	r5, r0, r5
    325c:	40a9      	lsls	r1, r5
    325e:	430a      	orrs	r2, r1
    3260:	1e51      	subs	r1, r2, #1
    3262:	418a      	sbcs	r2, r1
    3264:	2100      	movs	r1, #0
    3266:	431a      	orrs	r2, r3
    3268:	e6c7      	b.n	2ffa <__aeabi_dadd+0xa2>
    326a:	2e00      	cmp	r6, #0
    326c:	d050      	beq.n	3310 <__aeabi_dadd+0x3b8>
    326e:	4e1a      	ldr	r6, [pc, #104]	; (32d8 <__aeabi_dadd+0x380>)
    3270:	42b0      	cmp	r0, r6
    3272:	d057      	beq.n	3324 <__aeabi_dadd+0x3cc>
    3274:	2680      	movs	r6, #128	; 0x80
    3276:	426b      	negs	r3, r5
    3278:	4699      	mov	r9, r3
    327a:	0436      	lsls	r6, r6, #16
    327c:	4334      	orrs	r4, r6
    327e:	464b      	mov	r3, r9
    3280:	2b38      	cmp	r3, #56	; 0x38
    3282:	dd00      	ble.n	3286 <__aeabi_dadd+0x32e>
    3284:	e0d6      	b.n	3434 <__aeabi_dadd+0x4dc>
    3286:	2b1f      	cmp	r3, #31
    3288:	dd00      	ble.n	328c <__aeabi_dadd+0x334>
    328a:	e135      	b.n	34f8 <__aeabi_dadd+0x5a0>
    328c:	2620      	movs	r6, #32
    328e:	1af5      	subs	r5, r6, r3
    3290:	0026      	movs	r6, r4
    3292:	40ae      	lsls	r6, r5
    3294:	46b2      	mov	sl, r6
    3296:	003e      	movs	r6, r7
    3298:	40de      	lsrs	r6, r3
    329a:	46ac      	mov	ip, r5
    329c:	0035      	movs	r5, r6
    329e:	4656      	mov	r6, sl
    32a0:	432e      	orrs	r6, r5
    32a2:	4665      	mov	r5, ip
    32a4:	40af      	lsls	r7, r5
    32a6:	1e7d      	subs	r5, r7, #1
    32a8:	41af      	sbcs	r7, r5
    32aa:	40dc      	lsrs	r4, r3
    32ac:	4337      	orrs	r7, r6
    32ae:	1bd7      	subs	r7, r2, r7
    32b0:	42ba      	cmp	r2, r7
    32b2:	4192      	sbcs	r2, r2
    32b4:	1b0c      	subs	r4, r1, r4
    32b6:	4252      	negs	r2, r2
    32b8:	1aa4      	subs	r4, r4, r2
    32ba:	0006      	movs	r6, r0
    32bc:	46d8      	mov	r8, fp
    32be:	e6a3      	b.n	3008 <__aeabi_dadd+0xb0>
    32c0:	4664      	mov	r4, ip
    32c2:	4667      	mov	r7, ip
    32c4:	432c      	orrs	r4, r5
    32c6:	d000      	beq.n	32ca <__aeabi_dadd+0x372>
    32c8:	e6a2      	b.n	3010 <__aeabi_dadd+0xb8>
    32ca:	2500      	movs	r5, #0
    32cc:	2600      	movs	r6, #0
    32ce:	2700      	movs	r7, #0
    32d0:	e706      	b.n	30e0 <__aeabi_dadd+0x188>
    32d2:	001e      	movs	r6, r3
    32d4:	e6c4      	b.n	3060 <__aeabi_dadd+0x108>
    32d6:	46c0      	nop			; (mov r8, r8)
    32d8:	000007ff 	.word	0x000007ff
    32dc:	ff7fffff 	.word	0xff7fffff
    32e0:	800fffff 	.word	0x800fffff
    32e4:	2b1f      	cmp	r3, #31
    32e6:	dc63      	bgt.n	33b0 <__aeabi_dadd+0x458>
    32e8:	2020      	movs	r0, #32
    32ea:	1ac3      	subs	r3, r0, r3
    32ec:	0008      	movs	r0, r1
    32ee:	4098      	lsls	r0, r3
    32f0:	469c      	mov	ip, r3
    32f2:	4683      	mov	fp, r0
    32f4:	4653      	mov	r3, sl
    32f6:	0010      	movs	r0, r2
    32f8:	40d8      	lsrs	r0, r3
    32fa:	0003      	movs	r3, r0
    32fc:	4658      	mov	r0, fp
    32fe:	4318      	orrs	r0, r3
    3300:	4663      	mov	r3, ip
    3302:	409a      	lsls	r2, r3
    3304:	1e53      	subs	r3, r2, #1
    3306:	419a      	sbcs	r2, r3
    3308:	4653      	mov	r3, sl
    330a:	4302      	orrs	r2, r0
    330c:	40d9      	lsrs	r1, r3
    330e:	e703      	b.n	3118 <__aeabi_dadd+0x1c0>
    3310:	0026      	movs	r6, r4
    3312:	433e      	orrs	r6, r7
    3314:	d006      	beq.n	3324 <__aeabi_dadd+0x3cc>
    3316:	43eb      	mvns	r3, r5
    3318:	4699      	mov	r9, r3
    331a:	2b00      	cmp	r3, #0
    331c:	d0c7      	beq.n	32ae <__aeabi_dadd+0x356>
    331e:	4e94      	ldr	r6, [pc, #592]	; (3570 <__aeabi_dadd+0x618>)
    3320:	42b0      	cmp	r0, r6
    3322:	d1ac      	bne.n	327e <__aeabi_dadd+0x326>
    3324:	000c      	movs	r4, r1
    3326:	0017      	movs	r7, r2
    3328:	0006      	movs	r6, r0
    332a:	46d8      	mov	r8, fp
    332c:	e698      	b.n	3060 <__aeabi_dadd+0x108>
    332e:	4b90      	ldr	r3, [pc, #576]	; (3570 <__aeabi_dadd+0x618>)
    3330:	459a      	cmp	sl, r3
    3332:	d00b      	beq.n	334c <__aeabi_dadd+0x3f4>
    3334:	4682      	mov	sl, r0
    3336:	e6e7      	b.n	3108 <__aeabi_dadd+0x1b0>
    3338:	2800      	cmp	r0, #0
    333a:	d000      	beq.n	333e <__aeabi_dadd+0x3e6>
    333c:	e09e      	b.n	347c <__aeabi_dadd+0x524>
    333e:	0018      	movs	r0, r3
    3340:	4310      	orrs	r0, r2
    3342:	d100      	bne.n	3346 <__aeabi_dadd+0x3ee>
    3344:	e0e9      	b.n	351a <__aeabi_dadd+0x5c2>
    3346:	001c      	movs	r4, r3
    3348:	0017      	movs	r7, r2
    334a:	46d8      	mov	r8, fp
    334c:	4e88      	ldr	r6, [pc, #544]	; (3570 <__aeabi_dadd+0x618>)
    334e:	e687      	b.n	3060 <__aeabi_dadd+0x108>
    3350:	2500      	movs	r5, #0
    3352:	e772      	b.n	323a <__aeabi_dadd+0x2e2>
    3354:	2100      	movs	r1, #0
    3356:	e782      	b.n	325e <__aeabi_dadd+0x306>
    3358:	0023      	movs	r3, r4
    335a:	433b      	orrs	r3, r7
    335c:	2e00      	cmp	r6, #0
    335e:	d000      	beq.n	3362 <__aeabi_dadd+0x40a>
    3360:	e0ab      	b.n	34ba <__aeabi_dadd+0x562>
    3362:	2b00      	cmp	r3, #0
    3364:	d100      	bne.n	3368 <__aeabi_dadd+0x410>
    3366:	e0e7      	b.n	3538 <__aeabi_dadd+0x5e0>
    3368:	000b      	movs	r3, r1
    336a:	4313      	orrs	r3, r2
    336c:	d100      	bne.n	3370 <__aeabi_dadd+0x418>
    336e:	e677      	b.n	3060 <__aeabi_dadd+0x108>
    3370:	18ba      	adds	r2, r7, r2
    3372:	42ba      	cmp	r2, r7
    3374:	41bf      	sbcs	r7, r7
    3376:	1864      	adds	r4, r4, r1
    3378:	427f      	negs	r7, r7
    337a:	19e4      	adds	r4, r4, r7
    337c:	0223      	lsls	r3, r4, #8
    337e:	d400      	bmi.n	3382 <__aeabi_dadd+0x42a>
    3380:	e0f2      	b.n	3568 <__aeabi_dadd+0x610>
    3382:	4b7c      	ldr	r3, [pc, #496]	; (3574 <__aeabi_dadd+0x61c>)
    3384:	0017      	movs	r7, r2
    3386:	401c      	ands	r4, r3
    3388:	0006      	movs	r6, r0
    338a:	e669      	b.n	3060 <__aeabi_dadd+0x108>
    338c:	0020      	movs	r0, r4
    338e:	4338      	orrs	r0, r7
    3390:	2e00      	cmp	r6, #0
    3392:	d1d1      	bne.n	3338 <__aeabi_dadd+0x3e0>
    3394:	2800      	cmp	r0, #0
    3396:	d15b      	bne.n	3450 <__aeabi_dadd+0x4f8>
    3398:	001c      	movs	r4, r3
    339a:	4314      	orrs	r4, r2
    339c:	d100      	bne.n	33a0 <__aeabi_dadd+0x448>
    339e:	e0a8      	b.n	34f2 <__aeabi_dadd+0x59a>
    33a0:	001c      	movs	r4, r3
    33a2:	0017      	movs	r7, r2
    33a4:	46d8      	mov	r8, fp
    33a6:	e65b      	b.n	3060 <__aeabi_dadd+0x108>
    33a8:	0006      	movs	r6, r0
    33aa:	2400      	movs	r4, #0
    33ac:	2700      	movs	r7, #0
    33ae:	e697      	b.n	30e0 <__aeabi_dadd+0x188>
    33b0:	4650      	mov	r0, sl
    33b2:	000b      	movs	r3, r1
    33b4:	3820      	subs	r0, #32
    33b6:	40c3      	lsrs	r3, r0
    33b8:	4699      	mov	r9, r3
    33ba:	4653      	mov	r3, sl
    33bc:	2b20      	cmp	r3, #32
    33be:	d100      	bne.n	33c2 <__aeabi_dadd+0x46a>
    33c0:	e095      	b.n	34ee <__aeabi_dadd+0x596>
    33c2:	2340      	movs	r3, #64	; 0x40
    33c4:	4650      	mov	r0, sl
    33c6:	1a1b      	subs	r3, r3, r0
    33c8:	4099      	lsls	r1, r3
    33ca:	430a      	orrs	r2, r1
    33cc:	1e51      	subs	r1, r2, #1
    33ce:	418a      	sbcs	r2, r1
    33d0:	464b      	mov	r3, r9
    33d2:	2100      	movs	r1, #0
    33d4:	431a      	orrs	r2, r3
    33d6:	e69f      	b.n	3118 <__aeabi_dadd+0x1c0>
    33d8:	2e00      	cmp	r6, #0
    33da:	d130      	bne.n	343e <__aeabi_dadd+0x4e6>
    33dc:	0026      	movs	r6, r4
    33de:	433e      	orrs	r6, r7
    33e0:	d067      	beq.n	34b2 <__aeabi_dadd+0x55a>
    33e2:	43db      	mvns	r3, r3
    33e4:	469a      	mov	sl, r3
    33e6:	2b00      	cmp	r3, #0
    33e8:	d01c      	beq.n	3424 <__aeabi_dadd+0x4cc>
    33ea:	4e61      	ldr	r6, [pc, #388]	; (3570 <__aeabi_dadd+0x618>)
    33ec:	42b0      	cmp	r0, r6
    33ee:	d060      	beq.n	34b2 <__aeabi_dadd+0x55a>
    33f0:	4653      	mov	r3, sl
    33f2:	2b38      	cmp	r3, #56	; 0x38
    33f4:	dd00      	ble.n	33f8 <__aeabi_dadd+0x4a0>
    33f6:	e096      	b.n	3526 <__aeabi_dadd+0x5ce>
    33f8:	2b1f      	cmp	r3, #31
    33fa:	dd00      	ble.n	33fe <__aeabi_dadd+0x4a6>
    33fc:	e09f      	b.n	353e <__aeabi_dadd+0x5e6>
    33fe:	2620      	movs	r6, #32
    3400:	1af3      	subs	r3, r6, r3
    3402:	0026      	movs	r6, r4
    3404:	409e      	lsls	r6, r3
    3406:	469c      	mov	ip, r3
    3408:	46b3      	mov	fp, r6
    340a:	4653      	mov	r3, sl
    340c:	003e      	movs	r6, r7
    340e:	40de      	lsrs	r6, r3
    3410:	0033      	movs	r3, r6
    3412:	465e      	mov	r6, fp
    3414:	431e      	orrs	r6, r3
    3416:	4663      	mov	r3, ip
    3418:	409f      	lsls	r7, r3
    341a:	1e7b      	subs	r3, r7, #1
    341c:	419f      	sbcs	r7, r3
    341e:	4653      	mov	r3, sl
    3420:	40dc      	lsrs	r4, r3
    3422:	4337      	orrs	r7, r6
    3424:	18bf      	adds	r7, r7, r2
    3426:	4297      	cmp	r7, r2
    3428:	4192      	sbcs	r2, r2
    342a:	1864      	adds	r4, r4, r1
    342c:	4252      	negs	r2, r2
    342e:	18a4      	adds	r4, r4, r2
    3430:	0006      	movs	r6, r0
    3432:	e678      	b.n	3126 <__aeabi_dadd+0x1ce>
    3434:	4327      	orrs	r7, r4
    3436:	1e7c      	subs	r4, r7, #1
    3438:	41a7      	sbcs	r7, r4
    343a:	2400      	movs	r4, #0
    343c:	e737      	b.n	32ae <__aeabi_dadd+0x356>
    343e:	4e4c      	ldr	r6, [pc, #304]	; (3570 <__aeabi_dadd+0x618>)
    3440:	42b0      	cmp	r0, r6
    3442:	d036      	beq.n	34b2 <__aeabi_dadd+0x55a>
    3444:	2680      	movs	r6, #128	; 0x80
    3446:	425b      	negs	r3, r3
    3448:	0436      	lsls	r6, r6, #16
    344a:	469a      	mov	sl, r3
    344c:	4334      	orrs	r4, r6
    344e:	e7cf      	b.n	33f0 <__aeabi_dadd+0x498>
    3450:	0018      	movs	r0, r3
    3452:	4310      	orrs	r0, r2
    3454:	d100      	bne.n	3458 <__aeabi_dadd+0x500>
    3456:	e603      	b.n	3060 <__aeabi_dadd+0x108>
    3458:	1ab8      	subs	r0, r7, r2
    345a:	4684      	mov	ip, r0
    345c:	4567      	cmp	r7, ip
    345e:	41ad      	sbcs	r5, r5
    3460:	1ae0      	subs	r0, r4, r3
    3462:	426d      	negs	r5, r5
    3464:	1b40      	subs	r0, r0, r5
    3466:	0205      	lsls	r5, r0, #8
    3468:	d400      	bmi.n	346c <__aeabi_dadd+0x514>
    346a:	e62c      	b.n	30c6 <__aeabi_dadd+0x16e>
    346c:	1bd7      	subs	r7, r2, r7
    346e:	42ba      	cmp	r2, r7
    3470:	4192      	sbcs	r2, r2
    3472:	1b1c      	subs	r4, r3, r4
    3474:	4252      	negs	r2, r2
    3476:	1aa4      	subs	r4, r4, r2
    3478:	46d8      	mov	r8, fp
    347a:	e5f1      	b.n	3060 <__aeabi_dadd+0x108>
    347c:	0018      	movs	r0, r3
    347e:	4310      	orrs	r0, r2
    3480:	d100      	bne.n	3484 <__aeabi_dadd+0x52c>
    3482:	e763      	b.n	334c <__aeabi_dadd+0x3f4>
    3484:	08f8      	lsrs	r0, r7, #3
    3486:	0767      	lsls	r7, r4, #29
    3488:	4307      	orrs	r7, r0
    348a:	2080      	movs	r0, #128	; 0x80
    348c:	08e4      	lsrs	r4, r4, #3
    348e:	0300      	lsls	r0, r0, #12
    3490:	4204      	tst	r4, r0
    3492:	d008      	beq.n	34a6 <__aeabi_dadd+0x54e>
    3494:	08dd      	lsrs	r5, r3, #3
    3496:	4205      	tst	r5, r0
    3498:	d105      	bne.n	34a6 <__aeabi_dadd+0x54e>
    349a:	08d2      	lsrs	r2, r2, #3
    349c:	0759      	lsls	r1, r3, #29
    349e:	4311      	orrs	r1, r2
    34a0:	000f      	movs	r7, r1
    34a2:	002c      	movs	r4, r5
    34a4:	46d8      	mov	r8, fp
    34a6:	0f7b      	lsrs	r3, r7, #29
    34a8:	00e4      	lsls	r4, r4, #3
    34aa:	431c      	orrs	r4, r3
    34ac:	00ff      	lsls	r7, r7, #3
    34ae:	4e30      	ldr	r6, [pc, #192]	; (3570 <__aeabi_dadd+0x618>)
    34b0:	e5d6      	b.n	3060 <__aeabi_dadd+0x108>
    34b2:	000c      	movs	r4, r1
    34b4:	0017      	movs	r7, r2
    34b6:	0006      	movs	r6, r0
    34b8:	e5d2      	b.n	3060 <__aeabi_dadd+0x108>
    34ba:	2b00      	cmp	r3, #0
    34bc:	d038      	beq.n	3530 <__aeabi_dadd+0x5d8>
    34be:	000b      	movs	r3, r1
    34c0:	4313      	orrs	r3, r2
    34c2:	d100      	bne.n	34c6 <__aeabi_dadd+0x56e>
    34c4:	e742      	b.n	334c <__aeabi_dadd+0x3f4>
    34c6:	08f8      	lsrs	r0, r7, #3
    34c8:	0767      	lsls	r7, r4, #29
    34ca:	4307      	orrs	r7, r0
    34cc:	2080      	movs	r0, #128	; 0x80
    34ce:	08e4      	lsrs	r4, r4, #3
    34d0:	0300      	lsls	r0, r0, #12
    34d2:	4204      	tst	r4, r0
    34d4:	d0e7      	beq.n	34a6 <__aeabi_dadd+0x54e>
    34d6:	08cb      	lsrs	r3, r1, #3
    34d8:	4203      	tst	r3, r0
    34da:	d1e4      	bne.n	34a6 <__aeabi_dadd+0x54e>
    34dc:	08d2      	lsrs	r2, r2, #3
    34de:	0749      	lsls	r1, r1, #29
    34e0:	4311      	orrs	r1, r2
    34e2:	000f      	movs	r7, r1
    34e4:	001c      	movs	r4, r3
    34e6:	e7de      	b.n	34a6 <__aeabi_dadd+0x54e>
    34e8:	2700      	movs	r7, #0
    34ea:	2400      	movs	r4, #0
    34ec:	e5d5      	b.n	309a <__aeabi_dadd+0x142>
    34ee:	2100      	movs	r1, #0
    34f0:	e76b      	b.n	33ca <__aeabi_dadd+0x472>
    34f2:	2500      	movs	r5, #0
    34f4:	2700      	movs	r7, #0
    34f6:	e5f3      	b.n	30e0 <__aeabi_dadd+0x188>
    34f8:	464e      	mov	r6, r9
    34fa:	0025      	movs	r5, r4
    34fc:	3e20      	subs	r6, #32
    34fe:	40f5      	lsrs	r5, r6
    3500:	464b      	mov	r3, r9
    3502:	002e      	movs	r6, r5
    3504:	2b20      	cmp	r3, #32
    3506:	d02d      	beq.n	3564 <__aeabi_dadd+0x60c>
    3508:	2540      	movs	r5, #64	; 0x40
    350a:	1aed      	subs	r5, r5, r3
    350c:	40ac      	lsls	r4, r5
    350e:	4327      	orrs	r7, r4
    3510:	1e7c      	subs	r4, r7, #1
    3512:	41a7      	sbcs	r7, r4
    3514:	2400      	movs	r4, #0
    3516:	4337      	orrs	r7, r6
    3518:	e6c9      	b.n	32ae <__aeabi_dadd+0x356>
    351a:	2480      	movs	r4, #128	; 0x80
    351c:	2500      	movs	r5, #0
    351e:	0324      	lsls	r4, r4, #12
    3520:	4e13      	ldr	r6, [pc, #76]	; (3570 <__aeabi_dadd+0x618>)
    3522:	2700      	movs	r7, #0
    3524:	e5dc      	b.n	30e0 <__aeabi_dadd+0x188>
    3526:	4327      	orrs	r7, r4
    3528:	1e7c      	subs	r4, r7, #1
    352a:	41a7      	sbcs	r7, r4
    352c:	2400      	movs	r4, #0
    352e:	e779      	b.n	3424 <__aeabi_dadd+0x4cc>
    3530:	000c      	movs	r4, r1
    3532:	0017      	movs	r7, r2
    3534:	4e0e      	ldr	r6, [pc, #56]	; (3570 <__aeabi_dadd+0x618>)
    3536:	e593      	b.n	3060 <__aeabi_dadd+0x108>
    3538:	000c      	movs	r4, r1
    353a:	0017      	movs	r7, r2
    353c:	e590      	b.n	3060 <__aeabi_dadd+0x108>
    353e:	4656      	mov	r6, sl
    3540:	0023      	movs	r3, r4
    3542:	3e20      	subs	r6, #32
    3544:	40f3      	lsrs	r3, r6
    3546:	4699      	mov	r9, r3
    3548:	4653      	mov	r3, sl
    354a:	2b20      	cmp	r3, #32
    354c:	d00e      	beq.n	356c <__aeabi_dadd+0x614>
    354e:	2340      	movs	r3, #64	; 0x40
    3550:	4656      	mov	r6, sl
    3552:	1b9b      	subs	r3, r3, r6
    3554:	409c      	lsls	r4, r3
    3556:	4327      	orrs	r7, r4
    3558:	1e7c      	subs	r4, r7, #1
    355a:	41a7      	sbcs	r7, r4
    355c:	464b      	mov	r3, r9
    355e:	2400      	movs	r4, #0
    3560:	431f      	orrs	r7, r3
    3562:	e75f      	b.n	3424 <__aeabi_dadd+0x4cc>
    3564:	2400      	movs	r4, #0
    3566:	e7d2      	b.n	350e <__aeabi_dadd+0x5b6>
    3568:	0017      	movs	r7, r2
    356a:	e5b2      	b.n	30d2 <__aeabi_dadd+0x17a>
    356c:	2400      	movs	r4, #0
    356e:	e7f2      	b.n	3556 <__aeabi_dadd+0x5fe>
    3570:	000007ff 	.word	0x000007ff
    3574:	ff7fffff 	.word	0xff7fffff

00003578 <__aeabi_ddiv>:
    3578:	b5f0      	push	{r4, r5, r6, r7, lr}
    357a:	4657      	mov	r7, sl
    357c:	4645      	mov	r5, r8
    357e:	46de      	mov	lr, fp
    3580:	464e      	mov	r6, r9
    3582:	b5e0      	push	{r5, r6, r7, lr}
    3584:	004c      	lsls	r4, r1, #1
    3586:	030e      	lsls	r6, r1, #12
    3588:	b087      	sub	sp, #28
    358a:	4683      	mov	fp, r0
    358c:	4692      	mov	sl, r2
    358e:	001d      	movs	r5, r3
    3590:	4680      	mov	r8, r0
    3592:	0b36      	lsrs	r6, r6, #12
    3594:	0d64      	lsrs	r4, r4, #21
    3596:	0fcf      	lsrs	r7, r1, #31
    3598:	2c00      	cmp	r4, #0
    359a:	d04f      	beq.n	363c <__aeabi_ddiv+0xc4>
    359c:	4b6f      	ldr	r3, [pc, #444]	; (375c <__aeabi_ddiv+0x1e4>)
    359e:	429c      	cmp	r4, r3
    35a0:	d035      	beq.n	360e <__aeabi_ddiv+0x96>
    35a2:	2380      	movs	r3, #128	; 0x80
    35a4:	0f42      	lsrs	r2, r0, #29
    35a6:	041b      	lsls	r3, r3, #16
    35a8:	00f6      	lsls	r6, r6, #3
    35aa:	4313      	orrs	r3, r2
    35ac:	4333      	orrs	r3, r6
    35ae:	4699      	mov	r9, r3
    35b0:	00c3      	lsls	r3, r0, #3
    35b2:	4698      	mov	r8, r3
    35b4:	4b6a      	ldr	r3, [pc, #424]	; (3760 <__aeabi_ddiv+0x1e8>)
    35b6:	2600      	movs	r6, #0
    35b8:	469c      	mov	ip, r3
    35ba:	2300      	movs	r3, #0
    35bc:	4464      	add	r4, ip
    35be:	9303      	str	r3, [sp, #12]
    35c0:	032b      	lsls	r3, r5, #12
    35c2:	0b1b      	lsrs	r3, r3, #12
    35c4:	469b      	mov	fp, r3
    35c6:	006b      	lsls	r3, r5, #1
    35c8:	0fed      	lsrs	r5, r5, #31
    35ca:	4650      	mov	r0, sl
    35cc:	0d5b      	lsrs	r3, r3, #21
    35ce:	9501      	str	r5, [sp, #4]
    35d0:	d05e      	beq.n	3690 <__aeabi_ddiv+0x118>
    35d2:	4a62      	ldr	r2, [pc, #392]	; (375c <__aeabi_ddiv+0x1e4>)
    35d4:	4293      	cmp	r3, r2
    35d6:	d053      	beq.n	3680 <__aeabi_ddiv+0x108>
    35d8:	465a      	mov	r2, fp
    35da:	00d1      	lsls	r1, r2, #3
    35dc:	2280      	movs	r2, #128	; 0x80
    35de:	0f40      	lsrs	r0, r0, #29
    35e0:	0412      	lsls	r2, r2, #16
    35e2:	4302      	orrs	r2, r0
    35e4:	430a      	orrs	r2, r1
    35e6:	4693      	mov	fp, r2
    35e8:	4652      	mov	r2, sl
    35ea:	00d1      	lsls	r1, r2, #3
    35ec:	4a5c      	ldr	r2, [pc, #368]	; (3760 <__aeabi_ddiv+0x1e8>)
    35ee:	4694      	mov	ip, r2
    35f0:	2200      	movs	r2, #0
    35f2:	4463      	add	r3, ip
    35f4:	0038      	movs	r0, r7
    35f6:	4068      	eors	r0, r5
    35f8:	4684      	mov	ip, r0
    35fa:	9002      	str	r0, [sp, #8]
    35fc:	1ae4      	subs	r4, r4, r3
    35fe:	4316      	orrs	r6, r2
    3600:	2e0f      	cmp	r6, #15
    3602:	d900      	bls.n	3606 <__aeabi_ddiv+0x8e>
    3604:	e0b4      	b.n	3770 <__aeabi_ddiv+0x1f8>
    3606:	4b57      	ldr	r3, [pc, #348]	; (3764 <__aeabi_ddiv+0x1ec>)
    3608:	00b6      	lsls	r6, r6, #2
    360a:	599b      	ldr	r3, [r3, r6]
    360c:	469f      	mov	pc, r3
    360e:	0003      	movs	r3, r0
    3610:	4333      	orrs	r3, r6
    3612:	4699      	mov	r9, r3
    3614:	d16c      	bne.n	36f0 <__aeabi_ddiv+0x178>
    3616:	2300      	movs	r3, #0
    3618:	4698      	mov	r8, r3
    361a:	3302      	adds	r3, #2
    361c:	2608      	movs	r6, #8
    361e:	9303      	str	r3, [sp, #12]
    3620:	e7ce      	b.n	35c0 <__aeabi_ddiv+0x48>
    3622:	46cb      	mov	fp, r9
    3624:	4641      	mov	r1, r8
    3626:	9a03      	ldr	r2, [sp, #12]
    3628:	9701      	str	r7, [sp, #4]
    362a:	2a02      	cmp	r2, #2
    362c:	d165      	bne.n	36fa <__aeabi_ddiv+0x182>
    362e:	9b01      	ldr	r3, [sp, #4]
    3630:	4c4a      	ldr	r4, [pc, #296]	; (375c <__aeabi_ddiv+0x1e4>)
    3632:	469c      	mov	ip, r3
    3634:	2300      	movs	r3, #0
    3636:	2200      	movs	r2, #0
    3638:	4698      	mov	r8, r3
    363a:	e06b      	b.n	3714 <__aeabi_ddiv+0x19c>
    363c:	0003      	movs	r3, r0
    363e:	4333      	orrs	r3, r6
    3640:	4699      	mov	r9, r3
    3642:	d04e      	beq.n	36e2 <__aeabi_ddiv+0x16a>
    3644:	2e00      	cmp	r6, #0
    3646:	d100      	bne.n	364a <__aeabi_ddiv+0xd2>
    3648:	e1bc      	b.n	39c4 <__aeabi_ddiv+0x44c>
    364a:	0030      	movs	r0, r6
    364c:	f001 f97c 	bl	4948 <__clzsi2>
    3650:	0003      	movs	r3, r0
    3652:	3b0b      	subs	r3, #11
    3654:	2b1c      	cmp	r3, #28
    3656:	dd00      	ble.n	365a <__aeabi_ddiv+0xe2>
    3658:	e1ac      	b.n	39b4 <__aeabi_ddiv+0x43c>
    365a:	221d      	movs	r2, #29
    365c:	1ad3      	subs	r3, r2, r3
    365e:	465a      	mov	r2, fp
    3660:	0001      	movs	r1, r0
    3662:	40da      	lsrs	r2, r3
    3664:	3908      	subs	r1, #8
    3666:	408e      	lsls	r6, r1
    3668:	0013      	movs	r3, r2
    366a:	4333      	orrs	r3, r6
    366c:	4699      	mov	r9, r3
    366e:	465b      	mov	r3, fp
    3670:	408b      	lsls	r3, r1
    3672:	4698      	mov	r8, r3
    3674:	2300      	movs	r3, #0
    3676:	4c3c      	ldr	r4, [pc, #240]	; (3768 <__aeabi_ddiv+0x1f0>)
    3678:	2600      	movs	r6, #0
    367a:	1a24      	subs	r4, r4, r0
    367c:	9303      	str	r3, [sp, #12]
    367e:	e79f      	b.n	35c0 <__aeabi_ddiv+0x48>
    3680:	4651      	mov	r1, sl
    3682:	465a      	mov	r2, fp
    3684:	4311      	orrs	r1, r2
    3686:	d129      	bne.n	36dc <__aeabi_ddiv+0x164>
    3688:	2200      	movs	r2, #0
    368a:	4693      	mov	fp, r2
    368c:	3202      	adds	r2, #2
    368e:	e7b1      	b.n	35f4 <__aeabi_ddiv+0x7c>
    3690:	4659      	mov	r1, fp
    3692:	4301      	orrs	r1, r0
    3694:	d01e      	beq.n	36d4 <__aeabi_ddiv+0x15c>
    3696:	465b      	mov	r3, fp
    3698:	2b00      	cmp	r3, #0
    369a:	d100      	bne.n	369e <__aeabi_ddiv+0x126>
    369c:	e19e      	b.n	39dc <__aeabi_ddiv+0x464>
    369e:	4658      	mov	r0, fp
    36a0:	f001 f952 	bl	4948 <__clzsi2>
    36a4:	0003      	movs	r3, r0
    36a6:	3b0b      	subs	r3, #11
    36a8:	2b1c      	cmp	r3, #28
    36aa:	dd00      	ble.n	36ae <__aeabi_ddiv+0x136>
    36ac:	e18f      	b.n	39ce <__aeabi_ddiv+0x456>
    36ae:	0002      	movs	r2, r0
    36b0:	4659      	mov	r1, fp
    36b2:	3a08      	subs	r2, #8
    36b4:	4091      	lsls	r1, r2
    36b6:	468b      	mov	fp, r1
    36b8:	211d      	movs	r1, #29
    36ba:	1acb      	subs	r3, r1, r3
    36bc:	4651      	mov	r1, sl
    36be:	40d9      	lsrs	r1, r3
    36c0:	000b      	movs	r3, r1
    36c2:	4659      	mov	r1, fp
    36c4:	430b      	orrs	r3, r1
    36c6:	4651      	mov	r1, sl
    36c8:	469b      	mov	fp, r3
    36ca:	4091      	lsls	r1, r2
    36cc:	4b26      	ldr	r3, [pc, #152]	; (3768 <__aeabi_ddiv+0x1f0>)
    36ce:	2200      	movs	r2, #0
    36d0:	1a1b      	subs	r3, r3, r0
    36d2:	e78f      	b.n	35f4 <__aeabi_ddiv+0x7c>
    36d4:	2300      	movs	r3, #0
    36d6:	2201      	movs	r2, #1
    36d8:	469b      	mov	fp, r3
    36da:	e78b      	b.n	35f4 <__aeabi_ddiv+0x7c>
    36dc:	4651      	mov	r1, sl
    36de:	2203      	movs	r2, #3
    36e0:	e788      	b.n	35f4 <__aeabi_ddiv+0x7c>
    36e2:	2300      	movs	r3, #0
    36e4:	4698      	mov	r8, r3
    36e6:	3301      	adds	r3, #1
    36e8:	2604      	movs	r6, #4
    36ea:	2400      	movs	r4, #0
    36ec:	9303      	str	r3, [sp, #12]
    36ee:	e767      	b.n	35c0 <__aeabi_ddiv+0x48>
    36f0:	2303      	movs	r3, #3
    36f2:	46b1      	mov	r9, r6
    36f4:	9303      	str	r3, [sp, #12]
    36f6:	260c      	movs	r6, #12
    36f8:	e762      	b.n	35c0 <__aeabi_ddiv+0x48>
    36fa:	2a03      	cmp	r2, #3
    36fc:	d100      	bne.n	3700 <__aeabi_ddiv+0x188>
    36fe:	e25c      	b.n	3bba <__aeabi_ddiv+0x642>
    3700:	9b01      	ldr	r3, [sp, #4]
    3702:	2a01      	cmp	r2, #1
    3704:	d000      	beq.n	3708 <__aeabi_ddiv+0x190>
    3706:	e1e4      	b.n	3ad2 <__aeabi_ddiv+0x55a>
    3708:	4013      	ands	r3, r2
    370a:	469c      	mov	ip, r3
    370c:	2300      	movs	r3, #0
    370e:	2400      	movs	r4, #0
    3710:	2200      	movs	r2, #0
    3712:	4698      	mov	r8, r3
    3714:	2100      	movs	r1, #0
    3716:	0312      	lsls	r2, r2, #12
    3718:	0b13      	lsrs	r3, r2, #12
    371a:	0d0a      	lsrs	r2, r1, #20
    371c:	0512      	lsls	r2, r2, #20
    371e:	431a      	orrs	r2, r3
    3720:	0523      	lsls	r3, r4, #20
    3722:	4c12      	ldr	r4, [pc, #72]	; (376c <__aeabi_ddiv+0x1f4>)
    3724:	4640      	mov	r0, r8
    3726:	4022      	ands	r2, r4
    3728:	4313      	orrs	r3, r2
    372a:	4662      	mov	r2, ip
    372c:	005b      	lsls	r3, r3, #1
    372e:	07d2      	lsls	r2, r2, #31
    3730:	085b      	lsrs	r3, r3, #1
    3732:	4313      	orrs	r3, r2
    3734:	0019      	movs	r1, r3
    3736:	b007      	add	sp, #28
    3738:	bc3c      	pop	{r2, r3, r4, r5}
    373a:	4690      	mov	r8, r2
    373c:	4699      	mov	r9, r3
    373e:	46a2      	mov	sl, r4
    3740:	46ab      	mov	fp, r5
    3742:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3744:	2300      	movs	r3, #0
    3746:	2280      	movs	r2, #128	; 0x80
    3748:	469c      	mov	ip, r3
    374a:	0312      	lsls	r2, r2, #12
    374c:	4698      	mov	r8, r3
    374e:	4c03      	ldr	r4, [pc, #12]	; (375c <__aeabi_ddiv+0x1e4>)
    3750:	e7e0      	b.n	3714 <__aeabi_ddiv+0x19c>
    3752:	2300      	movs	r3, #0
    3754:	4c01      	ldr	r4, [pc, #4]	; (375c <__aeabi_ddiv+0x1e4>)
    3756:	2200      	movs	r2, #0
    3758:	4698      	mov	r8, r3
    375a:	e7db      	b.n	3714 <__aeabi_ddiv+0x19c>
    375c:	000007ff 	.word	0x000007ff
    3760:	fffffc01 	.word	0xfffffc01
    3764:	00006b68 	.word	0x00006b68
    3768:	fffffc0d 	.word	0xfffffc0d
    376c:	800fffff 	.word	0x800fffff
    3770:	45d9      	cmp	r9, fp
    3772:	d900      	bls.n	3776 <__aeabi_ddiv+0x1fe>
    3774:	e139      	b.n	39ea <__aeabi_ddiv+0x472>
    3776:	d100      	bne.n	377a <__aeabi_ddiv+0x202>
    3778:	e134      	b.n	39e4 <__aeabi_ddiv+0x46c>
    377a:	2300      	movs	r3, #0
    377c:	4646      	mov	r6, r8
    377e:	464d      	mov	r5, r9
    3780:	469a      	mov	sl, r3
    3782:	3c01      	subs	r4, #1
    3784:	465b      	mov	r3, fp
    3786:	0e0a      	lsrs	r2, r1, #24
    3788:	021b      	lsls	r3, r3, #8
    378a:	431a      	orrs	r2, r3
    378c:	020b      	lsls	r3, r1, #8
    378e:	0c17      	lsrs	r7, r2, #16
    3790:	9303      	str	r3, [sp, #12]
    3792:	0413      	lsls	r3, r2, #16
    3794:	0c1b      	lsrs	r3, r3, #16
    3796:	0039      	movs	r1, r7
    3798:	0028      	movs	r0, r5
    379a:	4690      	mov	r8, r2
    379c:	9301      	str	r3, [sp, #4]
    379e:	f7fe fb6f 	bl	1e80 <__udivsi3>
    37a2:	0002      	movs	r2, r0
    37a4:	9b01      	ldr	r3, [sp, #4]
    37a6:	4683      	mov	fp, r0
    37a8:	435a      	muls	r2, r3
    37aa:	0028      	movs	r0, r5
    37ac:	0039      	movs	r1, r7
    37ae:	4691      	mov	r9, r2
    37b0:	f7fe fbec 	bl	1f8c <__aeabi_uidivmod>
    37b4:	0c35      	lsrs	r5, r6, #16
    37b6:	0409      	lsls	r1, r1, #16
    37b8:	430d      	orrs	r5, r1
    37ba:	45a9      	cmp	r9, r5
    37bc:	d90d      	bls.n	37da <__aeabi_ddiv+0x262>
    37be:	465b      	mov	r3, fp
    37c0:	4445      	add	r5, r8
    37c2:	3b01      	subs	r3, #1
    37c4:	45a8      	cmp	r8, r5
    37c6:	d900      	bls.n	37ca <__aeabi_ddiv+0x252>
    37c8:	e13a      	b.n	3a40 <__aeabi_ddiv+0x4c8>
    37ca:	45a9      	cmp	r9, r5
    37cc:	d800      	bhi.n	37d0 <__aeabi_ddiv+0x258>
    37ce:	e137      	b.n	3a40 <__aeabi_ddiv+0x4c8>
    37d0:	2302      	movs	r3, #2
    37d2:	425b      	negs	r3, r3
    37d4:	469c      	mov	ip, r3
    37d6:	4445      	add	r5, r8
    37d8:	44e3      	add	fp, ip
    37da:	464b      	mov	r3, r9
    37dc:	1aeb      	subs	r3, r5, r3
    37de:	0039      	movs	r1, r7
    37e0:	0018      	movs	r0, r3
    37e2:	9304      	str	r3, [sp, #16]
    37e4:	f7fe fb4c 	bl	1e80 <__udivsi3>
    37e8:	9b01      	ldr	r3, [sp, #4]
    37ea:	0005      	movs	r5, r0
    37ec:	4343      	muls	r3, r0
    37ee:	0039      	movs	r1, r7
    37f0:	9804      	ldr	r0, [sp, #16]
    37f2:	4699      	mov	r9, r3
    37f4:	f7fe fbca 	bl	1f8c <__aeabi_uidivmod>
    37f8:	0433      	lsls	r3, r6, #16
    37fa:	0409      	lsls	r1, r1, #16
    37fc:	0c1b      	lsrs	r3, r3, #16
    37fe:	430b      	orrs	r3, r1
    3800:	4599      	cmp	r9, r3
    3802:	d909      	bls.n	3818 <__aeabi_ddiv+0x2a0>
    3804:	4443      	add	r3, r8
    3806:	1e6a      	subs	r2, r5, #1
    3808:	4598      	cmp	r8, r3
    380a:	d900      	bls.n	380e <__aeabi_ddiv+0x296>
    380c:	e11a      	b.n	3a44 <__aeabi_ddiv+0x4cc>
    380e:	4599      	cmp	r9, r3
    3810:	d800      	bhi.n	3814 <__aeabi_ddiv+0x29c>
    3812:	e117      	b.n	3a44 <__aeabi_ddiv+0x4cc>
    3814:	3d02      	subs	r5, #2
    3816:	4443      	add	r3, r8
    3818:	464a      	mov	r2, r9
    381a:	1a9b      	subs	r3, r3, r2
    381c:	465a      	mov	r2, fp
    381e:	0412      	lsls	r2, r2, #16
    3820:	432a      	orrs	r2, r5
    3822:	9903      	ldr	r1, [sp, #12]
    3824:	4693      	mov	fp, r2
    3826:	0c10      	lsrs	r0, r2, #16
    3828:	0c0a      	lsrs	r2, r1, #16
    382a:	4691      	mov	r9, r2
    382c:	0409      	lsls	r1, r1, #16
    382e:	465a      	mov	r2, fp
    3830:	0c09      	lsrs	r1, r1, #16
    3832:	464e      	mov	r6, r9
    3834:	000d      	movs	r5, r1
    3836:	0412      	lsls	r2, r2, #16
    3838:	0c12      	lsrs	r2, r2, #16
    383a:	4345      	muls	r5, r0
    383c:	9105      	str	r1, [sp, #20]
    383e:	4351      	muls	r1, r2
    3840:	4372      	muls	r2, r6
    3842:	4370      	muls	r0, r6
    3844:	1952      	adds	r2, r2, r5
    3846:	0c0e      	lsrs	r6, r1, #16
    3848:	18b2      	adds	r2, r6, r2
    384a:	4295      	cmp	r5, r2
    384c:	d903      	bls.n	3856 <__aeabi_ddiv+0x2de>
    384e:	2580      	movs	r5, #128	; 0x80
    3850:	026d      	lsls	r5, r5, #9
    3852:	46ac      	mov	ip, r5
    3854:	4460      	add	r0, ip
    3856:	0c15      	lsrs	r5, r2, #16
    3858:	0409      	lsls	r1, r1, #16
    385a:	0412      	lsls	r2, r2, #16
    385c:	0c09      	lsrs	r1, r1, #16
    385e:	1828      	adds	r0, r5, r0
    3860:	1852      	adds	r2, r2, r1
    3862:	4283      	cmp	r3, r0
    3864:	d200      	bcs.n	3868 <__aeabi_ddiv+0x2f0>
    3866:	e0ce      	b.n	3a06 <__aeabi_ddiv+0x48e>
    3868:	d100      	bne.n	386c <__aeabi_ddiv+0x2f4>
    386a:	e0c8      	b.n	39fe <__aeabi_ddiv+0x486>
    386c:	1a1d      	subs	r5, r3, r0
    386e:	4653      	mov	r3, sl
    3870:	1a9e      	subs	r6, r3, r2
    3872:	45b2      	cmp	sl, r6
    3874:	4192      	sbcs	r2, r2
    3876:	4252      	negs	r2, r2
    3878:	1aab      	subs	r3, r5, r2
    387a:	469a      	mov	sl, r3
    387c:	4598      	cmp	r8, r3
    387e:	d100      	bne.n	3882 <__aeabi_ddiv+0x30a>
    3880:	e117      	b.n	3ab2 <__aeabi_ddiv+0x53a>
    3882:	0039      	movs	r1, r7
    3884:	0018      	movs	r0, r3
    3886:	f7fe fafb 	bl	1e80 <__udivsi3>
    388a:	9b01      	ldr	r3, [sp, #4]
    388c:	0005      	movs	r5, r0
    388e:	4343      	muls	r3, r0
    3890:	0039      	movs	r1, r7
    3892:	4650      	mov	r0, sl
    3894:	9304      	str	r3, [sp, #16]
    3896:	f7fe fb79 	bl	1f8c <__aeabi_uidivmod>
    389a:	9804      	ldr	r0, [sp, #16]
    389c:	040b      	lsls	r3, r1, #16
    389e:	0c31      	lsrs	r1, r6, #16
    38a0:	4319      	orrs	r1, r3
    38a2:	4288      	cmp	r0, r1
    38a4:	d909      	bls.n	38ba <__aeabi_ddiv+0x342>
    38a6:	4441      	add	r1, r8
    38a8:	1e6b      	subs	r3, r5, #1
    38aa:	4588      	cmp	r8, r1
    38ac:	d900      	bls.n	38b0 <__aeabi_ddiv+0x338>
    38ae:	e107      	b.n	3ac0 <__aeabi_ddiv+0x548>
    38b0:	4288      	cmp	r0, r1
    38b2:	d800      	bhi.n	38b6 <__aeabi_ddiv+0x33e>
    38b4:	e104      	b.n	3ac0 <__aeabi_ddiv+0x548>
    38b6:	3d02      	subs	r5, #2
    38b8:	4441      	add	r1, r8
    38ba:	9b04      	ldr	r3, [sp, #16]
    38bc:	1acb      	subs	r3, r1, r3
    38be:	0018      	movs	r0, r3
    38c0:	0039      	movs	r1, r7
    38c2:	9304      	str	r3, [sp, #16]
    38c4:	f7fe fadc 	bl	1e80 <__udivsi3>
    38c8:	9b01      	ldr	r3, [sp, #4]
    38ca:	4682      	mov	sl, r0
    38cc:	4343      	muls	r3, r0
    38ce:	0039      	movs	r1, r7
    38d0:	9804      	ldr	r0, [sp, #16]
    38d2:	9301      	str	r3, [sp, #4]
    38d4:	f7fe fb5a 	bl	1f8c <__aeabi_uidivmod>
    38d8:	9801      	ldr	r0, [sp, #4]
    38da:	040b      	lsls	r3, r1, #16
    38dc:	0431      	lsls	r1, r6, #16
    38de:	0c09      	lsrs	r1, r1, #16
    38e0:	4319      	orrs	r1, r3
    38e2:	4288      	cmp	r0, r1
    38e4:	d90d      	bls.n	3902 <__aeabi_ddiv+0x38a>
    38e6:	4653      	mov	r3, sl
    38e8:	4441      	add	r1, r8
    38ea:	3b01      	subs	r3, #1
    38ec:	4588      	cmp	r8, r1
    38ee:	d900      	bls.n	38f2 <__aeabi_ddiv+0x37a>
    38f0:	e0e8      	b.n	3ac4 <__aeabi_ddiv+0x54c>
    38f2:	4288      	cmp	r0, r1
    38f4:	d800      	bhi.n	38f8 <__aeabi_ddiv+0x380>
    38f6:	e0e5      	b.n	3ac4 <__aeabi_ddiv+0x54c>
    38f8:	2302      	movs	r3, #2
    38fa:	425b      	negs	r3, r3
    38fc:	469c      	mov	ip, r3
    38fe:	4441      	add	r1, r8
    3900:	44e2      	add	sl, ip
    3902:	9b01      	ldr	r3, [sp, #4]
    3904:	042d      	lsls	r5, r5, #16
    3906:	1ace      	subs	r6, r1, r3
    3908:	4651      	mov	r1, sl
    390a:	4329      	orrs	r1, r5
    390c:	9d05      	ldr	r5, [sp, #20]
    390e:	464f      	mov	r7, r9
    3910:	002a      	movs	r2, r5
    3912:	040b      	lsls	r3, r1, #16
    3914:	0c08      	lsrs	r0, r1, #16
    3916:	0c1b      	lsrs	r3, r3, #16
    3918:	435a      	muls	r2, r3
    391a:	4345      	muls	r5, r0
    391c:	437b      	muls	r3, r7
    391e:	4378      	muls	r0, r7
    3920:	195b      	adds	r3, r3, r5
    3922:	0c17      	lsrs	r7, r2, #16
    3924:	18fb      	adds	r3, r7, r3
    3926:	429d      	cmp	r5, r3
    3928:	d903      	bls.n	3932 <__aeabi_ddiv+0x3ba>
    392a:	2580      	movs	r5, #128	; 0x80
    392c:	026d      	lsls	r5, r5, #9
    392e:	46ac      	mov	ip, r5
    3930:	4460      	add	r0, ip
    3932:	0c1d      	lsrs	r5, r3, #16
    3934:	0412      	lsls	r2, r2, #16
    3936:	041b      	lsls	r3, r3, #16
    3938:	0c12      	lsrs	r2, r2, #16
    393a:	1828      	adds	r0, r5, r0
    393c:	189b      	adds	r3, r3, r2
    393e:	4286      	cmp	r6, r0
    3940:	d200      	bcs.n	3944 <__aeabi_ddiv+0x3cc>
    3942:	e093      	b.n	3a6c <__aeabi_ddiv+0x4f4>
    3944:	d100      	bne.n	3948 <__aeabi_ddiv+0x3d0>
    3946:	e08e      	b.n	3a66 <__aeabi_ddiv+0x4ee>
    3948:	2301      	movs	r3, #1
    394a:	4319      	orrs	r1, r3
    394c:	4ba0      	ldr	r3, [pc, #640]	; (3bd0 <__aeabi_ddiv+0x658>)
    394e:	18e3      	adds	r3, r4, r3
    3950:	2b00      	cmp	r3, #0
    3952:	dc00      	bgt.n	3956 <__aeabi_ddiv+0x3de>
    3954:	e099      	b.n	3a8a <__aeabi_ddiv+0x512>
    3956:	074a      	lsls	r2, r1, #29
    3958:	d000      	beq.n	395c <__aeabi_ddiv+0x3e4>
    395a:	e09e      	b.n	3a9a <__aeabi_ddiv+0x522>
    395c:	465a      	mov	r2, fp
    395e:	01d2      	lsls	r2, r2, #7
    3960:	d506      	bpl.n	3970 <__aeabi_ddiv+0x3f8>
    3962:	465a      	mov	r2, fp
    3964:	4b9b      	ldr	r3, [pc, #620]	; (3bd4 <__aeabi_ddiv+0x65c>)
    3966:	401a      	ands	r2, r3
    3968:	2380      	movs	r3, #128	; 0x80
    396a:	4693      	mov	fp, r2
    396c:	00db      	lsls	r3, r3, #3
    396e:	18e3      	adds	r3, r4, r3
    3970:	4a99      	ldr	r2, [pc, #612]	; (3bd8 <__aeabi_ddiv+0x660>)
    3972:	4293      	cmp	r3, r2
    3974:	dd68      	ble.n	3a48 <__aeabi_ddiv+0x4d0>
    3976:	2301      	movs	r3, #1
    3978:	9a02      	ldr	r2, [sp, #8]
    397a:	4c98      	ldr	r4, [pc, #608]	; (3bdc <__aeabi_ddiv+0x664>)
    397c:	401a      	ands	r2, r3
    397e:	2300      	movs	r3, #0
    3980:	4694      	mov	ip, r2
    3982:	4698      	mov	r8, r3
    3984:	2200      	movs	r2, #0
    3986:	e6c5      	b.n	3714 <__aeabi_ddiv+0x19c>
    3988:	2280      	movs	r2, #128	; 0x80
    398a:	464b      	mov	r3, r9
    398c:	0312      	lsls	r2, r2, #12
    398e:	4213      	tst	r3, r2
    3990:	d00a      	beq.n	39a8 <__aeabi_ddiv+0x430>
    3992:	465b      	mov	r3, fp
    3994:	4213      	tst	r3, r2
    3996:	d106      	bne.n	39a6 <__aeabi_ddiv+0x42e>
    3998:	431a      	orrs	r2, r3
    399a:	0312      	lsls	r2, r2, #12
    399c:	0b12      	lsrs	r2, r2, #12
    399e:	46ac      	mov	ip, r5
    39a0:	4688      	mov	r8, r1
    39a2:	4c8e      	ldr	r4, [pc, #568]	; (3bdc <__aeabi_ddiv+0x664>)
    39a4:	e6b6      	b.n	3714 <__aeabi_ddiv+0x19c>
    39a6:	464b      	mov	r3, r9
    39a8:	431a      	orrs	r2, r3
    39aa:	0312      	lsls	r2, r2, #12
    39ac:	0b12      	lsrs	r2, r2, #12
    39ae:	46bc      	mov	ip, r7
    39b0:	4c8a      	ldr	r4, [pc, #552]	; (3bdc <__aeabi_ddiv+0x664>)
    39b2:	e6af      	b.n	3714 <__aeabi_ddiv+0x19c>
    39b4:	0003      	movs	r3, r0
    39b6:	465a      	mov	r2, fp
    39b8:	3b28      	subs	r3, #40	; 0x28
    39ba:	409a      	lsls	r2, r3
    39bc:	2300      	movs	r3, #0
    39be:	4691      	mov	r9, r2
    39c0:	4698      	mov	r8, r3
    39c2:	e657      	b.n	3674 <__aeabi_ddiv+0xfc>
    39c4:	4658      	mov	r0, fp
    39c6:	f000 ffbf 	bl	4948 <__clzsi2>
    39ca:	3020      	adds	r0, #32
    39cc:	e640      	b.n	3650 <__aeabi_ddiv+0xd8>
    39ce:	0003      	movs	r3, r0
    39d0:	4652      	mov	r2, sl
    39d2:	3b28      	subs	r3, #40	; 0x28
    39d4:	409a      	lsls	r2, r3
    39d6:	2100      	movs	r1, #0
    39d8:	4693      	mov	fp, r2
    39da:	e677      	b.n	36cc <__aeabi_ddiv+0x154>
    39dc:	f000 ffb4 	bl	4948 <__clzsi2>
    39e0:	3020      	adds	r0, #32
    39e2:	e65f      	b.n	36a4 <__aeabi_ddiv+0x12c>
    39e4:	4588      	cmp	r8, r1
    39e6:	d200      	bcs.n	39ea <__aeabi_ddiv+0x472>
    39e8:	e6c7      	b.n	377a <__aeabi_ddiv+0x202>
    39ea:	464b      	mov	r3, r9
    39ec:	07de      	lsls	r6, r3, #31
    39ee:	085d      	lsrs	r5, r3, #1
    39f0:	4643      	mov	r3, r8
    39f2:	085b      	lsrs	r3, r3, #1
    39f4:	431e      	orrs	r6, r3
    39f6:	4643      	mov	r3, r8
    39f8:	07db      	lsls	r3, r3, #31
    39fa:	469a      	mov	sl, r3
    39fc:	e6c2      	b.n	3784 <__aeabi_ddiv+0x20c>
    39fe:	2500      	movs	r5, #0
    3a00:	4592      	cmp	sl, r2
    3a02:	d300      	bcc.n	3a06 <__aeabi_ddiv+0x48e>
    3a04:	e733      	b.n	386e <__aeabi_ddiv+0x2f6>
    3a06:	9e03      	ldr	r6, [sp, #12]
    3a08:	4659      	mov	r1, fp
    3a0a:	46b4      	mov	ip, r6
    3a0c:	44e2      	add	sl, ip
    3a0e:	45b2      	cmp	sl, r6
    3a10:	41ad      	sbcs	r5, r5
    3a12:	426d      	negs	r5, r5
    3a14:	4445      	add	r5, r8
    3a16:	18eb      	adds	r3, r5, r3
    3a18:	3901      	subs	r1, #1
    3a1a:	4598      	cmp	r8, r3
    3a1c:	d207      	bcs.n	3a2e <__aeabi_ddiv+0x4b6>
    3a1e:	4298      	cmp	r0, r3
    3a20:	d900      	bls.n	3a24 <__aeabi_ddiv+0x4ac>
    3a22:	e07f      	b.n	3b24 <__aeabi_ddiv+0x5ac>
    3a24:	d100      	bne.n	3a28 <__aeabi_ddiv+0x4b0>
    3a26:	e0bc      	b.n	3ba2 <__aeabi_ddiv+0x62a>
    3a28:	1a1d      	subs	r5, r3, r0
    3a2a:	468b      	mov	fp, r1
    3a2c:	e71f      	b.n	386e <__aeabi_ddiv+0x2f6>
    3a2e:	4598      	cmp	r8, r3
    3a30:	d1fa      	bne.n	3a28 <__aeabi_ddiv+0x4b0>
    3a32:	9d03      	ldr	r5, [sp, #12]
    3a34:	4555      	cmp	r5, sl
    3a36:	d9f2      	bls.n	3a1e <__aeabi_ddiv+0x4a6>
    3a38:	4643      	mov	r3, r8
    3a3a:	468b      	mov	fp, r1
    3a3c:	1a1d      	subs	r5, r3, r0
    3a3e:	e716      	b.n	386e <__aeabi_ddiv+0x2f6>
    3a40:	469b      	mov	fp, r3
    3a42:	e6ca      	b.n	37da <__aeabi_ddiv+0x262>
    3a44:	0015      	movs	r5, r2
    3a46:	e6e7      	b.n	3818 <__aeabi_ddiv+0x2a0>
    3a48:	465a      	mov	r2, fp
    3a4a:	08c9      	lsrs	r1, r1, #3
    3a4c:	0752      	lsls	r2, r2, #29
    3a4e:	430a      	orrs	r2, r1
    3a50:	055b      	lsls	r3, r3, #21
    3a52:	4690      	mov	r8, r2
    3a54:	0d5c      	lsrs	r4, r3, #21
    3a56:	465a      	mov	r2, fp
    3a58:	2301      	movs	r3, #1
    3a5a:	9902      	ldr	r1, [sp, #8]
    3a5c:	0252      	lsls	r2, r2, #9
    3a5e:	4019      	ands	r1, r3
    3a60:	0b12      	lsrs	r2, r2, #12
    3a62:	468c      	mov	ip, r1
    3a64:	e656      	b.n	3714 <__aeabi_ddiv+0x19c>
    3a66:	2b00      	cmp	r3, #0
    3a68:	d100      	bne.n	3a6c <__aeabi_ddiv+0x4f4>
    3a6a:	e76f      	b.n	394c <__aeabi_ddiv+0x3d4>
    3a6c:	4446      	add	r6, r8
    3a6e:	1e4a      	subs	r2, r1, #1
    3a70:	45b0      	cmp	r8, r6
    3a72:	d929      	bls.n	3ac8 <__aeabi_ddiv+0x550>
    3a74:	0011      	movs	r1, r2
    3a76:	4286      	cmp	r6, r0
    3a78:	d000      	beq.n	3a7c <__aeabi_ddiv+0x504>
    3a7a:	e765      	b.n	3948 <__aeabi_ddiv+0x3d0>
    3a7c:	9a03      	ldr	r2, [sp, #12]
    3a7e:	4293      	cmp	r3, r2
    3a80:	d000      	beq.n	3a84 <__aeabi_ddiv+0x50c>
    3a82:	e761      	b.n	3948 <__aeabi_ddiv+0x3d0>
    3a84:	e762      	b.n	394c <__aeabi_ddiv+0x3d4>
    3a86:	2101      	movs	r1, #1
    3a88:	4249      	negs	r1, r1
    3a8a:	2001      	movs	r0, #1
    3a8c:	1ac2      	subs	r2, r0, r3
    3a8e:	2a38      	cmp	r2, #56	; 0x38
    3a90:	dd21      	ble.n	3ad6 <__aeabi_ddiv+0x55e>
    3a92:	9b02      	ldr	r3, [sp, #8]
    3a94:	4003      	ands	r3, r0
    3a96:	469c      	mov	ip, r3
    3a98:	e638      	b.n	370c <__aeabi_ddiv+0x194>
    3a9a:	220f      	movs	r2, #15
    3a9c:	400a      	ands	r2, r1
    3a9e:	2a04      	cmp	r2, #4
    3aa0:	d100      	bne.n	3aa4 <__aeabi_ddiv+0x52c>
    3aa2:	e75b      	b.n	395c <__aeabi_ddiv+0x3e4>
    3aa4:	000a      	movs	r2, r1
    3aa6:	1d11      	adds	r1, r2, #4
    3aa8:	4291      	cmp	r1, r2
    3aaa:	4192      	sbcs	r2, r2
    3aac:	4252      	negs	r2, r2
    3aae:	4493      	add	fp, r2
    3ab0:	e754      	b.n	395c <__aeabi_ddiv+0x3e4>
    3ab2:	4b47      	ldr	r3, [pc, #284]	; (3bd0 <__aeabi_ddiv+0x658>)
    3ab4:	18e3      	adds	r3, r4, r3
    3ab6:	2b00      	cmp	r3, #0
    3ab8:	dde5      	ble.n	3a86 <__aeabi_ddiv+0x50e>
    3aba:	2201      	movs	r2, #1
    3abc:	4252      	negs	r2, r2
    3abe:	e7f2      	b.n	3aa6 <__aeabi_ddiv+0x52e>
    3ac0:	001d      	movs	r5, r3
    3ac2:	e6fa      	b.n	38ba <__aeabi_ddiv+0x342>
    3ac4:	469a      	mov	sl, r3
    3ac6:	e71c      	b.n	3902 <__aeabi_ddiv+0x38a>
    3ac8:	42b0      	cmp	r0, r6
    3aca:	d839      	bhi.n	3b40 <__aeabi_ddiv+0x5c8>
    3acc:	d06e      	beq.n	3bac <__aeabi_ddiv+0x634>
    3ace:	0011      	movs	r1, r2
    3ad0:	e73a      	b.n	3948 <__aeabi_ddiv+0x3d0>
    3ad2:	9302      	str	r3, [sp, #8]
    3ad4:	e73a      	b.n	394c <__aeabi_ddiv+0x3d4>
    3ad6:	2a1f      	cmp	r2, #31
    3ad8:	dc3c      	bgt.n	3b54 <__aeabi_ddiv+0x5dc>
    3ada:	2320      	movs	r3, #32
    3adc:	1a9b      	subs	r3, r3, r2
    3ade:	000c      	movs	r4, r1
    3ae0:	4658      	mov	r0, fp
    3ae2:	4099      	lsls	r1, r3
    3ae4:	4098      	lsls	r0, r3
    3ae6:	1e4b      	subs	r3, r1, #1
    3ae8:	4199      	sbcs	r1, r3
    3aea:	465b      	mov	r3, fp
    3aec:	40d4      	lsrs	r4, r2
    3aee:	40d3      	lsrs	r3, r2
    3af0:	4320      	orrs	r0, r4
    3af2:	4308      	orrs	r0, r1
    3af4:	001a      	movs	r2, r3
    3af6:	0743      	lsls	r3, r0, #29
    3af8:	d009      	beq.n	3b0e <__aeabi_ddiv+0x596>
    3afa:	230f      	movs	r3, #15
    3afc:	4003      	ands	r3, r0
    3afe:	2b04      	cmp	r3, #4
    3b00:	d005      	beq.n	3b0e <__aeabi_ddiv+0x596>
    3b02:	0001      	movs	r1, r0
    3b04:	1d08      	adds	r0, r1, #4
    3b06:	4288      	cmp	r0, r1
    3b08:	419b      	sbcs	r3, r3
    3b0a:	425b      	negs	r3, r3
    3b0c:	18d2      	adds	r2, r2, r3
    3b0e:	0213      	lsls	r3, r2, #8
    3b10:	d53a      	bpl.n	3b88 <__aeabi_ddiv+0x610>
    3b12:	2301      	movs	r3, #1
    3b14:	9a02      	ldr	r2, [sp, #8]
    3b16:	2401      	movs	r4, #1
    3b18:	401a      	ands	r2, r3
    3b1a:	2300      	movs	r3, #0
    3b1c:	4694      	mov	ip, r2
    3b1e:	4698      	mov	r8, r3
    3b20:	2200      	movs	r2, #0
    3b22:	e5f7      	b.n	3714 <__aeabi_ddiv+0x19c>
    3b24:	2102      	movs	r1, #2
    3b26:	4249      	negs	r1, r1
    3b28:	468c      	mov	ip, r1
    3b2a:	9d03      	ldr	r5, [sp, #12]
    3b2c:	44e3      	add	fp, ip
    3b2e:	46ac      	mov	ip, r5
    3b30:	44e2      	add	sl, ip
    3b32:	45aa      	cmp	sl, r5
    3b34:	41ad      	sbcs	r5, r5
    3b36:	426d      	negs	r5, r5
    3b38:	4445      	add	r5, r8
    3b3a:	18ed      	adds	r5, r5, r3
    3b3c:	1a2d      	subs	r5, r5, r0
    3b3e:	e696      	b.n	386e <__aeabi_ddiv+0x2f6>
    3b40:	1e8a      	subs	r2, r1, #2
    3b42:	9903      	ldr	r1, [sp, #12]
    3b44:	004d      	lsls	r5, r1, #1
    3b46:	428d      	cmp	r5, r1
    3b48:	4189      	sbcs	r1, r1
    3b4a:	4249      	negs	r1, r1
    3b4c:	4441      	add	r1, r8
    3b4e:	1876      	adds	r6, r6, r1
    3b50:	9503      	str	r5, [sp, #12]
    3b52:	e78f      	b.n	3a74 <__aeabi_ddiv+0x4fc>
    3b54:	201f      	movs	r0, #31
    3b56:	4240      	negs	r0, r0
    3b58:	1ac3      	subs	r3, r0, r3
    3b5a:	4658      	mov	r0, fp
    3b5c:	40d8      	lsrs	r0, r3
    3b5e:	0003      	movs	r3, r0
    3b60:	2a20      	cmp	r2, #32
    3b62:	d028      	beq.n	3bb6 <__aeabi_ddiv+0x63e>
    3b64:	2040      	movs	r0, #64	; 0x40
    3b66:	465d      	mov	r5, fp
    3b68:	1a82      	subs	r2, r0, r2
    3b6a:	4095      	lsls	r5, r2
    3b6c:	4329      	orrs	r1, r5
    3b6e:	1e4a      	subs	r2, r1, #1
    3b70:	4191      	sbcs	r1, r2
    3b72:	4319      	orrs	r1, r3
    3b74:	2307      	movs	r3, #7
    3b76:	2200      	movs	r2, #0
    3b78:	400b      	ands	r3, r1
    3b7a:	d009      	beq.n	3b90 <__aeabi_ddiv+0x618>
    3b7c:	230f      	movs	r3, #15
    3b7e:	2200      	movs	r2, #0
    3b80:	400b      	ands	r3, r1
    3b82:	0008      	movs	r0, r1
    3b84:	2b04      	cmp	r3, #4
    3b86:	d1bd      	bne.n	3b04 <__aeabi_ddiv+0x58c>
    3b88:	0001      	movs	r1, r0
    3b8a:	0753      	lsls	r3, r2, #29
    3b8c:	0252      	lsls	r2, r2, #9
    3b8e:	0b12      	lsrs	r2, r2, #12
    3b90:	08c9      	lsrs	r1, r1, #3
    3b92:	4319      	orrs	r1, r3
    3b94:	2301      	movs	r3, #1
    3b96:	4688      	mov	r8, r1
    3b98:	9902      	ldr	r1, [sp, #8]
    3b9a:	2400      	movs	r4, #0
    3b9c:	4019      	ands	r1, r3
    3b9e:	468c      	mov	ip, r1
    3ba0:	e5b8      	b.n	3714 <__aeabi_ddiv+0x19c>
    3ba2:	4552      	cmp	r2, sl
    3ba4:	d8be      	bhi.n	3b24 <__aeabi_ddiv+0x5ac>
    3ba6:	468b      	mov	fp, r1
    3ba8:	2500      	movs	r5, #0
    3baa:	e660      	b.n	386e <__aeabi_ddiv+0x2f6>
    3bac:	9d03      	ldr	r5, [sp, #12]
    3bae:	429d      	cmp	r5, r3
    3bb0:	d3c6      	bcc.n	3b40 <__aeabi_ddiv+0x5c8>
    3bb2:	0011      	movs	r1, r2
    3bb4:	e762      	b.n	3a7c <__aeabi_ddiv+0x504>
    3bb6:	2500      	movs	r5, #0
    3bb8:	e7d8      	b.n	3b6c <__aeabi_ddiv+0x5f4>
    3bba:	2280      	movs	r2, #128	; 0x80
    3bbc:	465b      	mov	r3, fp
    3bbe:	0312      	lsls	r2, r2, #12
    3bc0:	431a      	orrs	r2, r3
    3bc2:	9b01      	ldr	r3, [sp, #4]
    3bc4:	0312      	lsls	r2, r2, #12
    3bc6:	0b12      	lsrs	r2, r2, #12
    3bc8:	469c      	mov	ip, r3
    3bca:	4688      	mov	r8, r1
    3bcc:	4c03      	ldr	r4, [pc, #12]	; (3bdc <__aeabi_ddiv+0x664>)
    3bce:	e5a1      	b.n	3714 <__aeabi_ddiv+0x19c>
    3bd0:	000003ff 	.word	0x000003ff
    3bd4:	feffffff 	.word	0xfeffffff
    3bd8:	000007fe 	.word	0x000007fe
    3bdc:	000007ff 	.word	0x000007ff

00003be0 <__aeabi_dmul>:
    3be0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3be2:	4657      	mov	r7, sl
    3be4:	4645      	mov	r5, r8
    3be6:	46de      	mov	lr, fp
    3be8:	464e      	mov	r6, r9
    3bea:	b5e0      	push	{r5, r6, r7, lr}
    3bec:	030c      	lsls	r4, r1, #12
    3bee:	4698      	mov	r8, r3
    3bf0:	004e      	lsls	r6, r1, #1
    3bf2:	0b23      	lsrs	r3, r4, #12
    3bf4:	b087      	sub	sp, #28
    3bf6:	0007      	movs	r7, r0
    3bf8:	4692      	mov	sl, r2
    3bfa:	469b      	mov	fp, r3
    3bfc:	0d76      	lsrs	r6, r6, #21
    3bfe:	0fcd      	lsrs	r5, r1, #31
    3c00:	2e00      	cmp	r6, #0
    3c02:	d06b      	beq.n	3cdc <__aeabi_dmul+0xfc>
    3c04:	4b6d      	ldr	r3, [pc, #436]	; (3dbc <__aeabi_dmul+0x1dc>)
    3c06:	429e      	cmp	r6, r3
    3c08:	d035      	beq.n	3c76 <__aeabi_dmul+0x96>
    3c0a:	2480      	movs	r4, #128	; 0x80
    3c0c:	465b      	mov	r3, fp
    3c0e:	0f42      	lsrs	r2, r0, #29
    3c10:	0424      	lsls	r4, r4, #16
    3c12:	00db      	lsls	r3, r3, #3
    3c14:	4314      	orrs	r4, r2
    3c16:	431c      	orrs	r4, r3
    3c18:	00c3      	lsls	r3, r0, #3
    3c1a:	4699      	mov	r9, r3
    3c1c:	4b68      	ldr	r3, [pc, #416]	; (3dc0 <__aeabi_dmul+0x1e0>)
    3c1e:	46a3      	mov	fp, r4
    3c20:	469c      	mov	ip, r3
    3c22:	2300      	movs	r3, #0
    3c24:	2700      	movs	r7, #0
    3c26:	4466      	add	r6, ip
    3c28:	9302      	str	r3, [sp, #8]
    3c2a:	4643      	mov	r3, r8
    3c2c:	031c      	lsls	r4, r3, #12
    3c2e:	005a      	lsls	r2, r3, #1
    3c30:	0fdb      	lsrs	r3, r3, #31
    3c32:	4650      	mov	r0, sl
    3c34:	0b24      	lsrs	r4, r4, #12
    3c36:	0d52      	lsrs	r2, r2, #21
    3c38:	4698      	mov	r8, r3
    3c3a:	d100      	bne.n	3c3e <__aeabi_dmul+0x5e>
    3c3c:	e076      	b.n	3d2c <__aeabi_dmul+0x14c>
    3c3e:	4b5f      	ldr	r3, [pc, #380]	; (3dbc <__aeabi_dmul+0x1dc>)
    3c40:	429a      	cmp	r2, r3
    3c42:	d06d      	beq.n	3d20 <__aeabi_dmul+0x140>
    3c44:	2380      	movs	r3, #128	; 0x80
    3c46:	0f41      	lsrs	r1, r0, #29
    3c48:	041b      	lsls	r3, r3, #16
    3c4a:	430b      	orrs	r3, r1
    3c4c:	495c      	ldr	r1, [pc, #368]	; (3dc0 <__aeabi_dmul+0x1e0>)
    3c4e:	00e4      	lsls	r4, r4, #3
    3c50:	468c      	mov	ip, r1
    3c52:	431c      	orrs	r4, r3
    3c54:	00c3      	lsls	r3, r0, #3
    3c56:	2000      	movs	r0, #0
    3c58:	4462      	add	r2, ip
    3c5a:	4641      	mov	r1, r8
    3c5c:	18b6      	adds	r6, r6, r2
    3c5e:	4069      	eors	r1, r5
    3c60:	1c72      	adds	r2, r6, #1
    3c62:	9101      	str	r1, [sp, #4]
    3c64:	4694      	mov	ip, r2
    3c66:	4307      	orrs	r7, r0
    3c68:	2f0f      	cmp	r7, #15
    3c6a:	d900      	bls.n	3c6e <__aeabi_dmul+0x8e>
    3c6c:	e0b0      	b.n	3dd0 <__aeabi_dmul+0x1f0>
    3c6e:	4a55      	ldr	r2, [pc, #340]	; (3dc4 <__aeabi_dmul+0x1e4>)
    3c70:	00bf      	lsls	r7, r7, #2
    3c72:	59d2      	ldr	r2, [r2, r7]
    3c74:	4697      	mov	pc, r2
    3c76:	465b      	mov	r3, fp
    3c78:	4303      	orrs	r3, r0
    3c7a:	4699      	mov	r9, r3
    3c7c:	d000      	beq.n	3c80 <__aeabi_dmul+0xa0>
    3c7e:	e087      	b.n	3d90 <__aeabi_dmul+0x1b0>
    3c80:	2300      	movs	r3, #0
    3c82:	469b      	mov	fp, r3
    3c84:	3302      	adds	r3, #2
    3c86:	2708      	movs	r7, #8
    3c88:	9302      	str	r3, [sp, #8]
    3c8a:	e7ce      	b.n	3c2a <__aeabi_dmul+0x4a>
    3c8c:	4642      	mov	r2, r8
    3c8e:	9201      	str	r2, [sp, #4]
    3c90:	2802      	cmp	r0, #2
    3c92:	d067      	beq.n	3d64 <__aeabi_dmul+0x184>
    3c94:	2803      	cmp	r0, #3
    3c96:	d100      	bne.n	3c9a <__aeabi_dmul+0xba>
    3c98:	e20e      	b.n	40b8 <__aeabi_dmul+0x4d8>
    3c9a:	2801      	cmp	r0, #1
    3c9c:	d000      	beq.n	3ca0 <__aeabi_dmul+0xc0>
    3c9e:	e162      	b.n	3f66 <__aeabi_dmul+0x386>
    3ca0:	2300      	movs	r3, #0
    3ca2:	2400      	movs	r4, #0
    3ca4:	2200      	movs	r2, #0
    3ca6:	4699      	mov	r9, r3
    3ca8:	9901      	ldr	r1, [sp, #4]
    3caa:	4001      	ands	r1, r0
    3cac:	b2cd      	uxtb	r5, r1
    3cae:	2100      	movs	r1, #0
    3cb0:	0312      	lsls	r2, r2, #12
    3cb2:	0d0b      	lsrs	r3, r1, #20
    3cb4:	0b12      	lsrs	r2, r2, #12
    3cb6:	051b      	lsls	r3, r3, #20
    3cb8:	4313      	orrs	r3, r2
    3cba:	4a43      	ldr	r2, [pc, #268]	; (3dc8 <__aeabi_dmul+0x1e8>)
    3cbc:	0524      	lsls	r4, r4, #20
    3cbe:	4013      	ands	r3, r2
    3cc0:	431c      	orrs	r4, r3
    3cc2:	0064      	lsls	r4, r4, #1
    3cc4:	07ed      	lsls	r5, r5, #31
    3cc6:	0864      	lsrs	r4, r4, #1
    3cc8:	432c      	orrs	r4, r5
    3cca:	4648      	mov	r0, r9
    3ccc:	0021      	movs	r1, r4
    3cce:	b007      	add	sp, #28
    3cd0:	bc3c      	pop	{r2, r3, r4, r5}
    3cd2:	4690      	mov	r8, r2
    3cd4:	4699      	mov	r9, r3
    3cd6:	46a2      	mov	sl, r4
    3cd8:	46ab      	mov	fp, r5
    3cda:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3cdc:	4303      	orrs	r3, r0
    3cde:	4699      	mov	r9, r3
    3ce0:	d04f      	beq.n	3d82 <__aeabi_dmul+0x1a2>
    3ce2:	465b      	mov	r3, fp
    3ce4:	2b00      	cmp	r3, #0
    3ce6:	d100      	bne.n	3cea <__aeabi_dmul+0x10a>
    3ce8:	e189      	b.n	3ffe <__aeabi_dmul+0x41e>
    3cea:	4658      	mov	r0, fp
    3cec:	f000 fe2c 	bl	4948 <__clzsi2>
    3cf0:	0003      	movs	r3, r0
    3cf2:	3b0b      	subs	r3, #11
    3cf4:	2b1c      	cmp	r3, #28
    3cf6:	dd00      	ble.n	3cfa <__aeabi_dmul+0x11a>
    3cf8:	e17a      	b.n	3ff0 <__aeabi_dmul+0x410>
    3cfa:	221d      	movs	r2, #29
    3cfc:	1ad3      	subs	r3, r2, r3
    3cfe:	003a      	movs	r2, r7
    3d00:	0001      	movs	r1, r0
    3d02:	465c      	mov	r4, fp
    3d04:	40da      	lsrs	r2, r3
    3d06:	3908      	subs	r1, #8
    3d08:	408c      	lsls	r4, r1
    3d0a:	0013      	movs	r3, r2
    3d0c:	408f      	lsls	r7, r1
    3d0e:	4323      	orrs	r3, r4
    3d10:	469b      	mov	fp, r3
    3d12:	46b9      	mov	r9, r7
    3d14:	2300      	movs	r3, #0
    3d16:	4e2d      	ldr	r6, [pc, #180]	; (3dcc <__aeabi_dmul+0x1ec>)
    3d18:	2700      	movs	r7, #0
    3d1a:	1a36      	subs	r6, r6, r0
    3d1c:	9302      	str	r3, [sp, #8]
    3d1e:	e784      	b.n	3c2a <__aeabi_dmul+0x4a>
    3d20:	4653      	mov	r3, sl
    3d22:	4323      	orrs	r3, r4
    3d24:	d12a      	bne.n	3d7c <__aeabi_dmul+0x19c>
    3d26:	2400      	movs	r4, #0
    3d28:	2002      	movs	r0, #2
    3d2a:	e796      	b.n	3c5a <__aeabi_dmul+0x7a>
    3d2c:	4653      	mov	r3, sl
    3d2e:	4323      	orrs	r3, r4
    3d30:	d020      	beq.n	3d74 <__aeabi_dmul+0x194>
    3d32:	2c00      	cmp	r4, #0
    3d34:	d100      	bne.n	3d38 <__aeabi_dmul+0x158>
    3d36:	e157      	b.n	3fe8 <__aeabi_dmul+0x408>
    3d38:	0020      	movs	r0, r4
    3d3a:	f000 fe05 	bl	4948 <__clzsi2>
    3d3e:	0003      	movs	r3, r0
    3d40:	3b0b      	subs	r3, #11
    3d42:	2b1c      	cmp	r3, #28
    3d44:	dd00      	ble.n	3d48 <__aeabi_dmul+0x168>
    3d46:	e149      	b.n	3fdc <__aeabi_dmul+0x3fc>
    3d48:	211d      	movs	r1, #29
    3d4a:	1acb      	subs	r3, r1, r3
    3d4c:	4651      	mov	r1, sl
    3d4e:	0002      	movs	r2, r0
    3d50:	40d9      	lsrs	r1, r3
    3d52:	4653      	mov	r3, sl
    3d54:	3a08      	subs	r2, #8
    3d56:	4094      	lsls	r4, r2
    3d58:	4093      	lsls	r3, r2
    3d5a:	430c      	orrs	r4, r1
    3d5c:	4a1b      	ldr	r2, [pc, #108]	; (3dcc <__aeabi_dmul+0x1ec>)
    3d5e:	1a12      	subs	r2, r2, r0
    3d60:	2000      	movs	r0, #0
    3d62:	e77a      	b.n	3c5a <__aeabi_dmul+0x7a>
    3d64:	2501      	movs	r5, #1
    3d66:	9b01      	ldr	r3, [sp, #4]
    3d68:	4c14      	ldr	r4, [pc, #80]	; (3dbc <__aeabi_dmul+0x1dc>)
    3d6a:	401d      	ands	r5, r3
    3d6c:	2300      	movs	r3, #0
    3d6e:	2200      	movs	r2, #0
    3d70:	4699      	mov	r9, r3
    3d72:	e79c      	b.n	3cae <__aeabi_dmul+0xce>
    3d74:	2400      	movs	r4, #0
    3d76:	2200      	movs	r2, #0
    3d78:	2001      	movs	r0, #1
    3d7a:	e76e      	b.n	3c5a <__aeabi_dmul+0x7a>
    3d7c:	4653      	mov	r3, sl
    3d7e:	2003      	movs	r0, #3
    3d80:	e76b      	b.n	3c5a <__aeabi_dmul+0x7a>
    3d82:	2300      	movs	r3, #0
    3d84:	469b      	mov	fp, r3
    3d86:	3301      	adds	r3, #1
    3d88:	2704      	movs	r7, #4
    3d8a:	2600      	movs	r6, #0
    3d8c:	9302      	str	r3, [sp, #8]
    3d8e:	e74c      	b.n	3c2a <__aeabi_dmul+0x4a>
    3d90:	2303      	movs	r3, #3
    3d92:	4681      	mov	r9, r0
    3d94:	270c      	movs	r7, #12
    3d96:	9302      	str	r3, [sp, #8]
    3d98:	e747      	b.n	3c2a <__aeabi_dmul+0x4a>
    3d9a:	2280      	movs	r2, #128	; 0x80
    3d9c:	2300      	movs	r3, #0
    3d9e:	2500      	movs	r5, #0
    3da0:	0312      	lsls	r2, r2, #12
    3da2:	4699      	mov	r9, r3
    3da4:	4c05      	ldr	r4, [pc, #20]	; (3dbc <__aeabi_dmul+0x1dc>)
    3da6:	e782      	b.n	3cae <__aeabi_dmul+0xce>
    3da8:	465c      	mov	r4, fp
    3daa:	464b      	mov	r3, r9
    3dac:	9802      	ldr	r0, [sp, #8]
    3dae:	e76f      	b.n	3c90 <__aeabi_dmul+0xb0>
    3db0:	465c      	mov	r4, fp
    3db2:	464b      	mov	r3, r9
    3db4:	9501      	str	r5, [sp, #4]
    3db6:	9802      	ldr	r0, [sp, #8]
    3db8:	e76a      	b.n	3c90 <__aeabi_dmul+0xb0>
    3dba:	46c0      	nop			; (mov r8, r8)
    3dbc:	000007ff 	.word	0x000007ff
    3dc0:	fffffc01 	.word	0xfffffc01
    3dc4:	00006ba8 	.word	0x00006ba8
    3dc8:	800fffff 	.word	0x800fffff
    3dcc:	fffffc0d 	.word	0xfffffc0d
    3dd0:	464a      	mov	r2, r9
    3dd2:	4649      	mov	r1, r9
    3dd4:	0c17      	lsrs	r7, r2, #16
    3dd6:	0c1a      	lsrs	r2, r3, #16
    3dd8:	041b      	lsls	r3, r3, #16
    3dda:	0c1b      	lsrs	r3, r3, #16
    3ddc:	0408      	lsls	r0, r1, #16
    3dde:	0019      	movs	r1, r3
    3de0:	0c00      	lsrs	r0, r0, #16
    3de2:	4341      	muls	r1, r0
    3de4:	0015      	movs	r5, r2
    3de6:	4688      	mov	r8, r1
    3de8:	0019      	movs	r1, r3
    3dea:	437d      	muls	r5, r7
    3dec:	4379      	muls	r1, r7
    3dee:	9503      	str	r5, [sp, #12]
    3df0:	4689      	mov	r9, r1
    3df2:	0029      	movs	r1, r5
    3df4:	0015      	movs	r5, r2
    3df6:	4345      	muls	r5, r0
    3df8:	444d      	add	r5, r9
    3dfa:	9502      	str	r5, [sp, #8]
    3dfc:	4645      	mov	r5, r8
    3dfe:	0c2d      	lsrs	r5, r5, #16
    3e00:	46aa      	mov	sl, r5
    3e02:	9d02      	ldr	r5, [sp, #8]
    3e04:	4455      	add	r5, sl
    3e06:	45a9      	cmp	r9, r5
    3e08:	d906      	bls.n	3e18 <__aeabi_dmul+0x238>
    3e0a:	468a      	mov	sl, r1
    3e0c:	2180      	movs	r1, #128	; 0x80
    3e0e:	0249      	lsls	r1, r1, #9
    3e10:	4689      	mov	r9, r1
    3e12:	44ca      	add	sl, r9
    3e14:	4651      	mov	r1, sl
    3e16:	9103      	str	r1, [sp, #12]
    3e18:	0c29      	lsrs	r1, r5, #16
    3e1a:	9104      	str	r1, [sp, #16]
    3e1c:	4641      	mov	r1, r8
    3e1e:	0409      	lsls	r1, r1, #16
    3e20:	042d      	lsls	r5, r5, #16
    3e22:	0c09      	lsrs	r1, r1, #16
    3e24:	4688      	mov	r8, r1
    3e26:	0029      	movs	r1, r5
    3e28:	0c25      	lsrs	r5, r4, #16
    3e2a:	0424      	lsls	r4, r4, #16
    3e2c:	4441      	add	r1, r8
    3e2e:	0c24      	lsrs	r4, r4, #16
    3e30:	9105      	str	r1, [sp, #20]
    3e32:	0021      	movs	r1, r4
    3e34:	4341      	muls	r1, r0
    3e36:	4688      	mov	r8, r1
    3e38:	0021      	movs	r1, r4
    3e3a:	4379      	muls	r1, r7
    3e3c:	468a      	mov	sl, r1
    3e3e:	4368      	muls	r0, r5
    3e40:	4641      	mov	r1, r8
    3e42:	4450      	add	r0, sl
    3e44:	4681      	mov	r9, r0
    3e46:	0c08      	lsrs	r0, r1, #16
    3e48:	4448      	add	r0, r9
    3e4a:	436f      	muls	r7, r5
    3e4c:	4582      	cmp	sl, r0
    3e4e:	d903      	bls.n	3e58 <__aeabi_dmul+0x278>
    3e50:	2180      	movs	r1, #128	; 0x80
    3e52:	0249      	lsls	r1, r1, #9
    3e54:	4689      	mov	r9, r1
    3e56:	444f      	add	r7, r9
    3e58:	0c01      	lsrs	r1, r0, #16
    3e5a:	4689      	mov	r9, r1
    3e5c:	0039      	movs	r1, r7
    3e5e:	4449      	add	r1, r9
    3e60:	9102      	str	r1, [sp, #8]
    3e62:	4641      	mov	r1, r8
    3e64:	040f      	lsls	r7, r1, #16
    3e66:	9904      	ldr	r1, [sp, #16]
    3e68:	0c3f      	lsrs	r7, r7, #16
    3e6a:	4688      	mov	r8, r1
    3e6c:	0400      	lsls	r0, r0, #16
    3e6e:	19c0      	adds	r0, r0, r7
    3e70:	4480      	add	r8, r0
    3e72:	4641      	mov	r1, r8
    3e74:	9104      	str	r1, [sp, #16]
    3e76:	4659      	mov	r1, fp
    3e78:	0c0f      	lsrs	r7, r1, #16
    3e7a:	0409      	lsls	r1, r1, #16
    3e7c:	0c09      	lsrs	r1, r1, #16
    3e7e:	4688      	mov	r8, r1
    3e80:	4359      	muls	r1, r3
    3e82:	468a      	mov	sl, r1
    3e84:	0039      	movs	r1, r7
    3e86:	4351      	muls	r1, r2
    3e88:	4689      	mov	r9, r1
    3e8a:	4641      	mov	r1, r8
    3e8c:	434a      	muls	r2, r1
    3e8e:	4651      	mov	r1, sl
    3e90:	0c09      	lsrs	r1, r1, #16
    3e92:	468b      	mov	fp, r1
    3e94:	437b      	muls	r3, r7
    3e96:	18d2      	adds	r2, r2, r3
    3e98:	445a      	add	r2, fp
    3e9a:	4293      	cmp	r3, r2
    3e9c:	d903      	bls.n	3ea6 <__aeabi_dmul+0x2c6>
    3e9e:	2380      	movs	r3, #128	; 0x80
    3ea0:	025b      	lsls	r3, r3, #9
    3ea2:	469b      	mov	fp, r3
    3ea4:	44d9      	add	r9, fp
    3ea6:	4651      	mov	r1, sl
    3ea8:	0409      	lsls	r1, r1, #16
    3eaa:	0c09      	lsrs	r1, r1, #16
    3eac:	468a      	mov	sl, r1
    3eae:	4641      	mov	r1, r8
    3eb0:	4361      	muls	r1, r4
    3eb2:	437c      	muls	r4, r7
    3eb4:	0c13      	lsrs	r3, r2, #16
    3eb6:	0412      	lsls	r2, r2, #16
    3eb8:	444b      	add	r3, r9
    3eba:	4452      	add	r2, sl
    3ebc:	46a1      	mov	r9, r4
    3ebe:	468a      	mov	sl, r1
    3ec0:	003c      	movs	r4, r7
    3ec2:	4641      	mov	r1, r8
    3ec4:	436c      	muls	r4, r5
    3ec6:	434d      	muls	r5, r1
    3ec8:	4651      	mov	r1, sl
    3eca:	444d      	add	r5, r9
    3ecc:	0c0f      	lsrs	r7, r1, #16
    3ece:	197d      	adds	r5, r7, r5
    3ed0:	45a9      	cmp	r9, r5
    3ed2:	d903      	bls.n	3edc <__aeabi_dmul+0x2fc>
    3ed4:	2180      	movs	r1, #128	; 0x80
    3ed6:	0249      	lsls	r1, r1, #9
    3ed8:	4688      	mov	r8, r1
    3eda:	4444      	add	r4, r8
    3edc:	9f04      	ldr	r7, [sp, #16]
    3ede:	9903      	ldr	r1, [sp, #12]
    3ee0:	46b8      	mov	r8, r7
    3ee2:	4441      	add	r1, r8
    3ee4:	468b      	mov	fp, r1
    3ee6:	4583      	cmp	fp, r0
    3ee8:	4180      	sbcs	r0, r0
    3eea:	4241      	negs	r1, r0
    3eec:	4688      	mov	r8, r1
    3eee:	4651      	mov	r1, sl
    3ef0:	0408      	lsls	r0, r1, #16
    3ef2:	042f      	lsls	r7, r5, #16
    3ef4:	0c00      	lsrs	r0, r0, #16
    3ef6:	183f      	adds	r7, r7, r0
    3ef8:	4658      	mov	r0, fp
    3efa:	9902      	ldr	r1, [sp, #8]
    3efc:	1810      	adds	r0, r2, r0
    3efe:	4689      	mov	r9, r1
    3f00:	4290      	cmp	r0, r2
    3f02:	4192      	sbcs	r2, r2
    3f04:	444f      	add	r7, r9
    3f06:	46ba      	mov	sl, r7
    3f08:	4252      	negs	r2, r2
    3f0a:	4699      	mov	r9, r3
    3f0c:	4693      	mov	fp, r2
    3f0e:	44c2      	add	sl, r8
    3f10:	44d1      	add	r9, sl
    3f12:	44cb      	add	fp, r9
    3f14:	428f      	cmp	r7, r1
    3f16:	41bf      	sbcs	r7, r7
    3f18:	45c2      	cmp	sl, r8
    3f1a:	4189      	sbcs	r1, r1
    3f1c:	4599      	cmp	r9, r3
    3f1e:	419b      	sbcs	r3, r3
    3f20:	4593      	cmp	fp, r2
    3f22:	4192      	sbcs	r2, r2
    3f24:	427f      	negs	r7, r7
    3f26:	4249      	negs	r1, r1
    3f28:	0c2d      	lsrs	r5, r5, #16
    3f2a:	4252      	negs	r2, r2
    3f2c:	430f      	orrs	r7, r1
    3f2e:	425b      	negs	r3, r3
    3f30:	4313      	orrs	r3, r2
    3f32:	197f      	adds	r7, r7, r5
    3f34:	18ff      	adds	r7, r7, r3
    3f36:	465b      	mov	r3, fp
    3f38:	193c      	adds	r4, r7, r4
    3f3a:	0ddb      	lsrs	r3, r3, #23
    3f3c:	9a05      	ldr	r2, [sp, #20]
    3f3e:	0264      	lsls	r4, r4, #9
    3f40:	431c      	orrs	r4, r3
    3f42:	0243      	lsls	r3, r0, #9
    3f44:	4313      	orrs	r3, r2
    3f46:	1e5d      	subs	r5, r3, #1
    3f48:	41ab      	sbcs	r3, r5
    3f4a:	465a      	mov	r2, fp
    3f4c:	0dc0      	lsrs	r0, r0, #23
    3f4e:	4303      	orrs	r3, r0
    3f50:	0252      	lsls	r2, r2, #9
    3f52:	4313      	orrs	r3, r2
    3f54:	01e2      	lsls	r2, r4, #7
    3f56:	d556      	bpl.n	4006 <__aeabi_dmul+0x426>
    3f58:	2001      	movs	r0, #1
    3f5a:	085a      	lsrs	r2, r3, #1
    3f5c:	4003      	ands	r3, r0
    3f5e:	4313      	orrs	r3, r2
    3f60:	07e2      	lsls	r2, r4, #31
    3f62:	4313      	orrs	r3, r2
    3f64:	0864      	lsrs	r4, r4, #1
    3f66:	485a      	ldr	r0, [pc, #360]	; (40d0 <__aeabi_dmul+0x4f0>)
    3f68:	4460      	add	r0, ip
    3f6a:	2800      	cmp	r0, #0
    3f6c:	dd4d      	ble.n	400a <__aeabi_dmul+0x42a>
    3f6e:	075a      	lsls	r2, r3, #29
    3f70:	d009      	beq.n	3f86 <__aeabi_dmul+0x3a6>
    3f72:	220f      	movs	r2, #15
    3f74:	401a      	ands	r2, r3
    3f76:	2a04      	cmp	r2, #4
    3f78:	d005      	beq.n	3f86 <__aeabi_dmul+0x3a6>
    3f7a:	1d1a      	adds	r2, r3, #4
    3f7c:	429a      	cmp	r2, r3
    3f7e:	419b      	sbcs	r3, r3
    3f80:	425b      	negs	r3, r3
    3f82:	18e4      	adds	r4, r4, r3
    3f84:	0013      	movs	r3, r2
    3f86:	01e2      	lsls	r2, r4, #7
    3f88:	d504      	bpl.n	3f94 <__aeabi_dmul+0x3b4>
    3f8a:	2080      	movs	r0, #128	; 0x80
    3f8c:	4a51      	ldr	r2, [pc, #324]	; (40d4 <__aeabi_dmul+0x4f4>)
    3f8e:	00c0      	lsls	r0, r0, #3
    3f90:	4014      	ands	r4, r2
    3f92:	4460      	add	r0, ip
    3f94:	4a50      	ldr	r2, [pc, #320]	; (40d8 <__aeabi_dmul+0x4f8>)
    3f96:	4290      	cmp	r0, r2
    3f98:	dd00      	ble.n	3f9c <__aeabi_dmul+0x3bc>
    3f9a:	e6e3      	b.n	3d64 <__aeabi_dmul+0x184>
    3f9c:	2501      	movs	r5, #1
    3f9e:	08db      	lsrs	r3, r3, #3
    3fa0:	0762      	lsls	r2, r4, #29
    3fa2:	431a      	orrs	r2, r3
    3fa4:	0264      	lsls	r4, r4, #9
    3fa6:	9b01      	ldr	r3, [sp, #4]
    3fa8:	4691      	mov	r9, r2
    3faa:	0b22      	lsrs	r2, r4, #12
    3fac:	0544      	lsls	r4, r0, #21
    3fae:	0d64      	lsrs	r4, r4, #21
    3fb0:	401d      	ands	r5, r3
    3fb2:	e67c      	b.n	3cae <__aeabi_dmul+0xce>
    3fb4:	2280      	movs	r2, #128	; 0x80
    3fb6:	4659      	mov	r1, fp
    3fb8:	0312      	lsls	r2, r2, #12
    3fba:	4211      	tst	r1, r2
    3fbc:	d008      	beq.n	3fd0 <__aeabi_dmul+0x3f0>
    3fbe:	4214      	tst	r4, r2
    3fc0:	d106      	bne.n	3fd0 <__aeabi_dmul+0x3f0>
    3fc2:	4322      	orrs	r2, r4
    3fc4:	0312      	lsls	r2, r2, #12
    3fc6:	0b12      	lsrs	r2, r2, #12
    3fc8:	4645      	mov	r5, r8
    3fca:	4699      	mov	r9, r3
    3fcc:	4c43      	ldr	r4, [pc, #268]	; (40dc <__aeabi_dmul+0x4fc>)
    3fce:	e66e      	b.n	3cae <__aeabi_dmul+0xce>
    3fd0:	465b      	mov	r3, fp
    3fd2:	431a      	orrs	r2, r3
    3fd4:	0312      	lsls	r2, r2, #12
    3fd6:	0b12      	lsrs	r2, r2, #12
    3fd8:	4c40      	ldr	r4, [pc, #256]	; (40dc <__aeabi_dmul+0x4fc>)
    3fda:	e668      	b.n	3cae <__aeabi_dmul+0xce>
    3fdc:	0003      	movs	r3, r0
    3fde:	4654      	mov	r4, sl
    3fe0:	3b28      	subs	r3, #40	; 0x28
    3fe2:	409c      	lsls	r4, r3
    3fe4:	2300      	movs	r3, #0
    3fe6:	e6b9      	b.n	3d5c <__aeabi_dmul+0x17c>
    3fe8:	f000 fcae 	bl	4948 <__clzsi2>
    3fec:	3020      	adds	r0, #32
    3fee:	e6a6      	b.n	3d3e <__aeabi_dmul+0x15e>
    3ff0:	0003      	movs	r3, r0
    3ff2:	3b28      	subs	r3, #40	; 0x28
    3ff4:	409f      	lsls	r7, r3
    3ff6:	2300      	movs	r3, #0
    3ff8:	46bb      	mov	fp, r7
    3ffa:	4699      	mov	r9, r3
    3ffc:	e68a      	b.n	3d14 <__aeabi_dmul+0x134>
    3ffe:	f000 fca3 	bl	4948 <__clzsi2>
    4002:	3020      	adds	r0, #32
    4004:	e674      	b.n	3cf0 <__aeabi_dmul+0x110>
    4006:	46b4      	mov	ip, r6
    4008:	e7ad      	b.n	3f66 <__aeabi_dmul+0x386>
    400a:	2501      	movs	r5, #1
    400c:	1a2a      	subs	r2, r5, r0
    400e:	2a38      	cmp	r2, #56	; 0x38
    4010:	dd06      	ble.n	4020 <__aeabi_dmul+0x440>
    4012:	9b01      	ldr	r3, [sp, #4]
    4014:	2400      	movs	r4, #0
    4016:	401d      	ands	r5, r3
    4018:	2300      	movs	r3, #0
    401a:	2200      	movs	r2, #0
    401c:	4699      	mov	r9, r3
    401e:	e646      	b.n	3cae <__aeabi_dmul+0xce>
    4020:	2a1f      	cmp	r2, #31
    4022:	dc21      	bgt.n	4068 <__aeabi_dmul+0x488>
    4024:	2520      	movs	r5, #32
    4026:	0020      	movs	r0, r4
    4028:	1aad      	subs	r5, r5, r2
    402a:	001e      	movs	r6, r3
    402c:	40ab      	lsls	r3, r5
    402e:	40a8      	lsls	r0, r5
    4030:	40d6      	lsrs	r6, r2
    4032:	1e5d      	subs	r5, r3, #1
    4034:	41ab      	sbcs	r3, r5
    4036:	4330      	orrs	r0, r6
    4038:	4318      	orrs	r0, r3
    403a:	40d4      	lsrs	r4, r2
    403c:	0743      	lsls	r3, r0, #29
    403e:	d009      	beq.n	4054 <__aeabi_dmul+0x474>
    4040:	230f      	movs	r3, #15
    4042:	4003      	ands	r3, r0
    4044:	2b04      	cmp	r3, #4
    4046:	d005      	beq.n	4054 <__aeabi_dmul+0x474>
    4048:	0003      	movs	r3, r0
    404a:	1d18      	adds	r0, r3, #4
    404c:	4298      	cmp	r0, r3
    404e:	419b      	sbcs	r3, r3
    4050:	425b      	negs	r3, r3
    4052:	18e4      	adds	r4, r4, r3
    4054:	0223      	lsls	r3, r4, #8
    4056:	d521      	bpl.n	409c <__aeabi_dmul+0x4bc>
    4058:	2501      	movs	r5, #1
    405a:	9b01      	ldr	r3, [sp, #4]
    405c:	2401      	movs	r4, #1
    405e:	401d      	ands	r5, r3
    4060:	2300      	movs	r3, #0
    4062:	2200      	movs	r2, #0
    4064:	4699      	mov	r9, r3
    4066:	e622      	b.n	3cae <__aeabi_dmul+0xce>
    4068:	251f      	movs	r5, #31
    406a:	0021      	movs	r1, r4
    406c:	426d      	negs	r5, r5
    406e:	1a28      	subs	r0, r5, r0
    4070:	40c1      	lsrs	r1, r0
    4072:	0008      	movs	r0, r1
    4074:	2a20      	cmp	r2, #32
    4076:	d01d      	beq.n	40b4 <__aeabi_dmul+0x4d4>
    4078:	355f      	adds	r5, #95	; 0x5f
    407a:	1aaa      	subs	r2, r5, r2
    407c:	4094      	lsls	r4, r2
    407e:	4323      	orrs	r3, r4
    4080:	1e5c      	subs	r4, r3, #1
    4082:	41a3      	sbcs	r3, r4
    4084:	2507      	movs	r5, #7
    4086:	4303      	orrs	r3, r0
    4088:	401d      	ands	r5, r3
    408a:	2200      	movs	r2, #0
    408c:	2d00      	cmp	r5, #0
    408e:	d009      	beq.n	40a4 <__aeabi_dmul+0x4c4>
    4090:	220f      	movs	r2, #15
    4092:	2400      	movs	r4, #0
    4094:	401a      	ands	r2, r3
    4096:	0018      	movs	r0, r3
    4098:	2a04      	cmp	r2, #4
    409a:	d1d6      	bne.n	404a <__aeabi_dmul+0x46a>
    409c:	0003      	movs	r3, r0
    409e:	0765      	lsls	r5, r4, #29
    40a0:	0264      	lsls	r4, r4, #9
    40a2:	0b22      	lsrs	r2, r4, #12
    40a4:	08db      	lsrs	r3, r3, #3
    40a6:	432b      	orrs	r3, r5
    40a8:	2501      	movs	r5, #1
    40aa:	4699      	mov	r9, r3
    40ac:	9b01      	ldr	r3, [sp, #4]
    40ae:	2400      	movs	r4, #0
    40b0:	401d      	ands	r5, r3
    40b2:	e5fc      	b.n	3cae <__aeabi_dmul+0xce>
    40b4:	2400      	movs	r4, #0
    40b6:	e7e2      	b.n	407e <__aeabi_dmul+0x49e>
    40b8:	2280      	movs	r2, #128	; 0x80
    40ba:	2501      	movs	r5, #1
    40bc:	0312      	lsls	r2, r2, #12
    40be:	4322      	orrs	r2, r4
    40c0:	9901      	ldr	r1, [sp, #4]
    40c2:	0312      	lsls	r2, r2, #12
    40c4:	0b12      	lsrs	r2, r2, #12
    40c6:	400d      	ands	r5, r1
    40c8:	4699      	mov	r9, r3
    40ca:	4c04      	ldr	r4, [pc, #16]	; (40dc <__aeabi_dmul+0x4fc>)
    40cc:	e5ef      	b.n	3cae <__aeabi_dmul+0xce>
    40ce:	46c0      	nop			; (mov r8, r8)
    40d0:	000003ff 	.word	0x000003ff
    40d4:	feffffff 	.word	0xfeffffff
    40d8:	000007fe 	.word	0x000007fe
    40dc:	000007ff 	.word	0x000007ff

000040e0 <__aeabi_dsub>:
    40e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    40e2:	4646      	mov	r6, r8
    40e4:	46d6      	mov	lr, sl
    40e6:	464f      	mov	r7, r9
    40e8:	030c      	lsls	r4, r1, #12
    40ea:	b5c0      	push	{r6, r7, lr}
    40ec:	0fcd      	lsrs	r5, r1, #31
    40ee:	004e      	lsls	r6, r1, #1
    40f0:	0a61      	lsrs	r1, r4, #9
    40f2:	0f44      	lsrs	r4, r0, #29
    40f4:	430c      	orrs	r4, r1
    40f6:	00c1      	lsls	r1, r0, #3
    40f8:	0058      	lsls	r0, r3, #1
    40fa:	0d40      	lsrs	r0, r0, #21
    40fc:	4684      	mov	ip, r0
    40fe:	468a      	mov	sl, r1
    4100:	000f      	movs	r7, r1
    4102:	0319      	lsls	r1, r3, #12
    4104:	0f50      	lsrs	r0, r2, #29
    4106:	0a49      	lsrs	r1, r1, #9
    4108:	4301      	orrs	r1, r0
    410a:	48c6      	ldr	r0, [pc, #792]	; (4424 <__aeabi_dsub+0x344>)
    410c:	0d76      	lsrs	r6, r6, #21
    410e:	46a8      	mov	r8, r5
    4110:	0fdb      	lsrs	r3, r3, #31
    4112:	00d2      	lsls	r2, r2, #3
    4114:	4584      	cmp	ip, r0
    4116:	d100      	bne.n	411a <__aeabi_dsub+0x3a>
    4118:	e0d8      	b.n	42cc <__aeabi_dsub+0x1ec>
    411a:	2001      	movs	r0, #1
    411c:	4043      	eors	r3, r0
    411e:	42ab      	cmp	r3, r5
    4120:	d100      	bne.n	4124 <__aeabi_dsub+0x44>
    4122:	e0a6      	b.n	4272 <__aeabi_dsub+0x192>
    4124:	4660      	mov	r0, ip
    4126:	1a35      	subs	r5, r6, r0
    4128:	2d00      	cmp	r5, #0
    412a:	dc00      	bgt.n	412e <__aeabi_dsub+0x4e>
    412c:	e105      	b.n	433a <__aeabi_dsub+0x25a>
    412e:	2800      	cmp	r0, #0
    4130:	d110      	bne.n	4154 <__aeabi_dsub+0x74>
    4132:	000b      	movs	r3, r1
    4134:	4313      	orrs	r3, r2
    4136:	d100      	bne.n	413a <__aeabi_dsub+0x5a>
    4138:	e0d7      	b.n	42ea <__aeabi_dsub+0x20a>
    413a:	1e6b      	subs	r3, r5, #1
    413c:	2b00      	cmp	r3, #0
    413e:	d000      	beq.n	4142 <__aeabi_dsub+0x62>
    4140:	e14b      	b.n	43da <__aeabi_dsub+0x2fa>
    4142:	4653      	mov	r3, sl
    4144:	1a9f      	subs	r7, r3, r2
    4146:	45ba      	cmp	sl, r7
    4148:	4180      	sbcs	r0, r0
    414a:	1a64      	subs	r4, r4, r1
    414c:	4240      	negs	r0, r0
    414e:	1a24      	subs	r4, r4, r0
    4150:	2601      	movs	r6, #1
    4152:	e01e      	b.n	4192 <__aeabi_dsub+0xb2>
    4154:	4bb3      	ldr	r3, [pc, #716]	; (4424 <__aeabi_dsub+0x344>)
    4156:	429e      	cmp	r6, r3
    4158:	d048      	beq.n	41ec <__aeabi_dsub+0x10c>
    415a:	2380      	movs	r3, #128	; 0x80
    415c:	041b      	lsls	r3, r3, #16
    415e:	4319      	orrs	r1, r3
    4160:	2d38      	cmp	r5, #56	; 0x38
    4162:	dd00      	ble.n	4166 <__aeabi_dsub+0x86>
    4164:	e119      	b.n	439a <__aeabi_dsub+0x2ba>
    4166:	2d1f      	cmp	r5, #31
    4168:	dd00      	ble.n	416c <__aeabi_dsub+0x8c>
    416a:	e14c      	b.n	4406 <__aeabi_dsub+0x326>
    416c:	2320      	movs	r3, #32
    416e:	000f      	movs	r7, r1
    4170:	1b5b      	subs	r3, r3, r5
    4172:	0010      	movs	r0, r2
    4174:	409a      	lsls	r2, r3
    4176:	409f      	lsls	r7, r3
    4178:	40e8      	lsrs	r0, r5
    417a:	1e53      	subs	r3, r2, #1
    417c:	419a      	sbcs	r2, r3
    417e:	40e9      	lsrs	r1, r5
    4180:	4307      	orrs	r7, r0
    4182:	4317      	orrs	r7, r2
    4184:	4653      	mov	r3, sl
    4186:	1bdf      	subs	r7, r3, r7
    4188:	1a61      	subs	r1, r4, r1
    418a:	45ba      	cmp	sl, r7
    418c:	41a4      	sbcs	r4, r4
    418e:	4264      	negs	r4, r4
    4190:	1b0c      	subs	r4, r1, r4
    4192:	0223      	lsls	r3, r4, #8
    4194:	d400      	bmi.n	4198 <__aeabi_dsub+0xb8>
    4196:	e0c5      	b.n	4324 <__aeabi_dsub+0x244>
    4198:	0264      	lsls	r4, r4, #9
    419a:	0a65      	lsrs	r5, r4, #9
    419c:	2d00      	cmp	r5, #0
    419e:	d100      	bne.n	41a2 <__aeabi_dsub+0xc2>
    41a0:	e0f6      	b.n	4390 <__aeabi_dsub+0x2b0>
    41a2:	0028      	movs	r0, r5
    41a4:	f000 fbd0 	bl	4948 <__clzsi2>
    41a8:	0003      	movs	r3, r0
    41aa:	3b08      	subs	r3, #8
    41ac:	2b1f      	cmp	r3, #31
    41ae:	dd00      	ble.n	41b2 <__aeabi_dsub+0xd2>
    41b0:	e0e9      	b.n	4386 <__aeabi_dsub+0x2a6>
    41b2:	2220      	movs	r2, #32
    41b4:	003c      	movs	r4, r7
    41b6:	1ad2      	subs	r2, r2, r3
    41b8:	409d      	lsls	r5, r3
    41ba:	40d4      	lsrs	r4, r2
    41bc:	409f      	lsls	r7, r3
    41be:	4325      	orrs	r5, r4
    41c0:	429e      	cmp	r6, r3
    41c2:	dd00      	ble.n	41c6 <__aeabi_dsub+0xe6>
    41c4:	e0db      	b.n	437e <__aeabi_dsub+0x29e>
    41c6:	1b9e      	subs	r6, r3, r6
    41c8:	1c73      	adds	r3, r6, #1
    41ca:	2b1f      	cmp	r3, #31
    41cc:	dd00      	ble.n	41d0 <__aeabi_dsub+0xf0>
    41ce:	e10a      	b.n	43e6 <__aeabi_dsub+0x306>
    41d0:	2220      	movs	r2, #32
    41d2:	0038      	movs	r0, r7
    41d4:	1ad2      	subs	r2, r2, r3
    41d6:	0029      	movs	r1, r5
    41d8:	4097      	lsls	r7, r2
    41da:	002c      	movs	r4, r5
    41dc:	4091      	lsls	r1, r2
    41de:	40d8      	lsrs	r0, r3
    41e0:	1e7a      	subs	r2, r7, #1
    41e2:	4197      	sbcs	r7, r2
    41e4:	40dc      	lsrs	r4, r3
    41e6:	2600      	movs	r6, #0
    41e8:	4301      	orrs	r1, r0
    41ea:	430f      	orrs	r7, r1
    41ec:	077b      	lsls	r3, r7, #29
    41ee:	d009      	beq.n	4204 <__aeabi_dsub+0x124>
    41f0:	230f      	movs	r3, #15
    41f2:	403b      	ands	r3, r7
    41f4:	2b04      	cmp	r3, #4
    41f6:	d005      	beq.n	4204 <__aeabi_dsub+0x124>
    41f8:	1d3b      	adds	r3, r7, #4
    41fa:	42bb      	cmp	r3, r7
    41fc:	41bf      	sbcs	r7, r7
    41fe:	427f      	negs	r7, r7
    4200:	19e4      	adds	r4, r4, r7
    4202:	001f      	movs	r7, r3
    4204:	0223      	lsls	r3, r4, #8
    4206:	d525      	bpl.n	4254 <__aeabi_dsub+0x174>
    4208:	4b86      	ldr	r3, [pc, #536]	; (4424 <__aeabi_dsub+0x344>)
    420a:	3601      	adds	r6, #1
    420c:	429e      	cmp	r6, r3
    420e:	d100      	bne.n	4212 <__aeabi_dsub+0x132>
    4210:	e0af      	b.n	4372 <__aeabi_dsub+0x292>
    4212:	4b85      	ldr	r3, [pc, #532]	; (4428 <__aeabi_dsub+0x348>)
    4214:	2501      	movs	r5, #1
    4216:	401c      	ands	r4, r3
    4218:	4643      	mov	r3, r8
    421a:	0762      	lsls	r2, r4, #29
    421c:	08ff      	lsrs	r7, r7, #3
    421e:	0264      	lsls	r4, r4, #9
    4220:	0576      	lsls	r6, r6, #21
    4222:	4317      	orrs	r7, r2
    4224:	0b24      	lsrs	r4, r4, #12
    4226:	0d76      	lsrs	r6, r6, #21
    4228:	401d      	ands	r5, r3
    422a:	2100      	movs	r1, #0
    422c:	0324      	lsls	r4, r4, #12
    422e:	0b23      	lsrs	r3, r4, #12
    4230:	0d0c      	lsrs	r4, r1, #20
    4232:	4a7e      	ldr	r2, [pc, #504]	; (442c <__aeabi_dsub+0x34c>)
    4234:	0524      	lsls	r4, r4, #20
    4236:	431c      	orrs	r4, r3
    4238:	4014      	ands	r4, r2
    423a:	0533      	lsls	r3, r6, #20
    423c:	4323      	orrs	r3, r4
    423e:	005b      	lsls	r3, r3, #1
    4240:	07ed      	lsls	r5, r5, #31
    4242:	085b      	lsrs	r3, r3, #1
    4244:	432b      	orrs	r3, r5
    4246:	0038      	movs	r0, r7
    4248:	0019      	movs	r1, r3
    424a:	bc1c      	pop	{r2, r3, r4}
    424c:	4690      	mov	r8, r2
    424e:	4699      	mov	r9, r3
    4250:	46a2      	mov	sl, r4
    4252:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4254:	2501      	movs	r5, #1
    4256:	4643      	mov	r3, r8
    4258:	0762      	lsls	r2, r4, #29
    425a:	08ff      	lsrs	r7, r7, #3
    425c:	4317      	orrs	r7, r2
    425e:	08e4      	lsrs	r4, r4, #3
    4260:	401d      	ands	r5, r3
    4262:	4b70      	ldr	r3, [pc, #448]	; (4424 <__aeabi_dsub+0x344>)
    4264:	429e      	cmp	r6, r3
    4266:	d036      	beq.n	42d6 <__aeabi_dsub+0x1f6>
    4268:	0324      	lsls	r4, r4, #12
    426a:	0576      	lsls	r6, r6, #21
    426c:	0b24      	lsrs	r4, r4, #12
    426e:	0d76      	lsrs	r6, r6, #21
    4270:	e7db      	b.n	422a <__aeabi_dsub+0x14a>
    4272:	4663      	mov	r3, ip
    4274:	1af3      	subs	r3, r6, r3
    4276:	2b00      	cmp	r3, #0
    4278:	dc00      	bgt.n	427c <__aeabi_dsub+0x19c>
    427a:	e094      	b.n	43a6 <__aeabi_dsub+0x2c6>
    427c:	4660      	mov	r0, ip
    427e:	2800      	cmp	r0, #0
    4280:	d035      	beq.n	42ee <__aeabi_dsub+0x20e>
    4282:	4868      	ldr	r0, [pc, #416]	; (4424 <__aeabi_dsub+0x344>)
    4284:	4286      	cmp	r6, r0
    4286:	d0b1      	beq.n	41ec <__aeabi_dsub+0x10c>
    4288:	2780      	movs	r7, #128	; 0x80
    428a:	043f      	lsls	r7, r7, #16
    428c:	4339      	orrs	r1, r7
    428e:	2b38      	cmp	r3, #56	; 0x38
    4290:	dc00      	bgt.n	4294 <__aeabi_dsub+0x1b4>
    4292:	e0fd      	b.n	4490 <__aeabi_dsub+0x3b0>
    4294:	430a      	orrs	r2, r1
    4296:	0017      	movs	r7, r2
    4298:	2100      	movs	r1, #0
    429a:	1e7a      	subs	r2, r7, #1
    429c:	4197      	sbcs	r7, r2
    429e:	4457      	add	r7, sl
    42a0:	4557      	cmp	r7, sl
    42a2:	4180      	sbcs	r0, r0
    42a4:	1909      	adds	r1, r1, r4
    42a6:	4244      	negs	r4, r0
    42a8:	190c      	adds	r4, r1, r4
    42aa:	0223      	lsls	r3, r4, #8
    42ac:	d53a      	bpl.n	4324 <__aeabi_dsub+0x244>
    42ae:	4b5d      	ldr	r3, [pc, #372]	; (4424 <__aeabi_dsub+0x344>)
    42b0:	3601      	adds	r6, #1
    42b2:	429e      	cmp	r6, r3
    42b4:	d100      	bne.n	42b8 <__aeabi_dsub+0x1d8>
    42b6:	e14b      	b.n	4550 <__aeabi_dsub+0x470>
    42b8:	2201      	movs	r2, #1
    42ba:	4b5b      	ldr	r3, [pc, #364]	; (4428 <__aeabi_dsub+0x348>)
    42bc:	401c      	ands	r4, r3
    42be:	087b      	lsrs	r3, r7, #1
    42c0:	4017      	ands	r7, r2
    42c2:	431f      	orrs	r7, r3
    42c4:	07e2      	lsls	r2, r4, #31
    42c6:	4317      	orrs	r7, r2
    42c8:	0864      	lsrs	r4, r4, #1
    42ca:	e78f      	b.n	41ec <__aeabi_dsub+0x10c>
    42cc:	0008      	movs	r0, r1
    42ce:	4310      	orrs	r0, r2
    42d0:	d000      	beq.n	42d4 <__aeabi_dsub+0x1f4>
    42d2:	e724      	b.n	411e <__aeabi_dsub+0x3e>
    42d4:	e721      	b.n	411a <__aeabi_dsub+0x3a>
    42d6:	0023      	movs	r3, r4
    42d8:	433b      	orrs	r3, r7
    42da:	d100      	bne.n	42de <__aeabi_dsub+0x1fe>
    42dc:	e1b9      	b.n	4652 <__aeabi_dsub+0x572>
    42de:	2280      	movs	r2, #128	; 0x80
    42e0:	0312      	lsls	r2, r2, #12
    42e2:	4314      	orrs	r4, r2
    42e4:	0324      	lsls	r4, r4, #12
    42e6:	0b24      	lsrs	r4, r4, #12
    42e8:	e79f      	b.n	422a <__aeabi_dsub+0x14a>
    42ea:	002e      	movs	r6, r5
    42ec:	e77e      	b.n	41ec <__aeabi_dsub+0x10c>
    42ee:	0008      	movs	r0, r1
    42f0:	4310      	orrs	r0, r2
    42f2:	d100      	bne.n	42f6 <__aeabi_dsub+0x216>
    42f4:	e0ca      	b.n	448c <__aeabi_dsub+0x3ac>
    42f6:	1e58      	subs	r0, r3, #1
    42f8:	4684      	mov	ip, r0
    42fa:	2800      	cmp	r0, #0
    42fc:	d000      	beq.n	4300 <__aeabi_dsub+0x220>
    42fe:	e0e7      	b.n	44d0 <__aeabi_dsub+0x3f0>
    4300:	4452      	add	r2, sl
    4302:	4552      	cmp	r2, sl
    4304:	4180      	sbcs	r0, r0
    4306:	1864      	adds	r4, r4, r1
    4308:	4240      	negs	r0, r0
    430a:	1824      	adds	r4, r4, r0
    430c:	0017      	movs	r7, r2
    430e:	2601      	movs	r6, #1
    4310:	0223      	lsls	r3, r4, #8
    4312:	d507      	bpl.n	4324 <__aeabi_dsub+0x244>
    4314:	2602      	movs	r6, #2
    4316:	e7cf      	b.n	42b8 <__aeabi_dsub+0x1d8>
    4318:	4664      	mov	r4, ip
    431a:	432c      	orrs	r4, r5
    431c:	d100      	bne.n	4320 <__aeabi_dsub+0x240>
    431e:	e1b3      	b.n	4688 <__aeabi_dsub+0x5a8>
    4320:	002c      	movs	r4, r5
    4322:	4667      	mov	r7, ip
    4324:	077b      	lsls	r3, r7, #29
    4326:	d000      	beq.n	432a <__aeabi_dsub+0x24a>
    4328:	e762      	b.n	41f0 <__aeabi_dsub+0x110>
    432a:	0763      	lsls	r3, r4, #29
    432c:	08ff      	lsrs	r7, r7, #3
    432e:	431f      	orrs	r7, r3
    4330:	2501      	movs	r5, #1
    4332:	4643      	mov	r3, r8
    4334:	08e4      	lsrs	r4, r4, #3
    4336:	401d      	ands	r5, r3
    4338:	e793      	b.n	4262 <__aeabi_dsub+0x182>
    433a:	2d00      	cmp	r5, #0
    433c:	d178      	bne.n	4430 <__aeabi_dsub+0x350>
    433e:	1c75      	adds	r5, r6, #1
    4340:	056d      	lsls	r5, r5, #21
    4342:	0d6d      	lsrs	r5, r5, #21
    4344:	2d01      	cmp	r5, #1
    4346:	dc00      	bgt.n	434a <__aeabi_dsub+0x26a>
    4348:	e0f2      	b.n	4530 <__aeabi_dsub+0x450>
    434a:	4650      	mov	r0, sl
    434c:	1a80      	subs	r0, r0, r2
    434e:	4582      	cmp	sl, r0
    4350:	41bf      	sbcs	r7, r7
    4352:	1a65      	subs	r5, r4, r1
    4354:	427f      	negs	r7, r7
    4356:	1bed      	subs	r5, r5, r7
    4358:	4684      	mov	ip, r0
    435a:	0228      	lsls	r0, r5, #8
    435c:	d400      	bmi.n	4360 <__aeabi_dsub+0x280>
    435e:	e08c      	b.n	447a <__aeabi_dsub+0x39a>
    4360:	4650      	mov	r0, sl
    4362:	1a17      	subs	r7, r2, r0
    4364:	42ba      	cmp	r2, r7
    4366:	4192      	sbcs	r2, r2
    4368:	1b0c      	subs	r4, r1, r4
    436a:	4255      	negs	r5, r2
    436c:	1b65      	subs	r5, r4, r5
    436e:	4698      	mov	r8, r3
    4370:	e714      	b.n	419c <__aeabi_dsub+0xbc>
    4372:	2501      	movs	r5, #1
    4374:	4643      	mov	r3, r8
    4376:	2400      	movs	r4, #0
    4378:	401d      	ands	r5, r3
    437a:	2700      	movs	r7, #0
    437c:	e755      	b.n	422a <__aeabi_dsub+0x14a>
    437e:	4c2a      	ldr	r4, [pc, #168]	; (4428 <__aeabi_dsub+0x348>)
    4380:	1af6      	subs	r6, r6, r3
    4382:	402c      	ands	r4, r5
    4384:	e732      	b.n	41ec <__aeabi_dsub+0x10c>
    4386:	003d      	movs	r5, r7
    4388:	3828      	subs	r0, #40	; 0x28
    438a:	4085      	lsls	r5, r0
    438c:	2700      	movs	r7, #0
    438e:	e717      	b.n	41c0 <__aeabi_dsub+0xe0>
    4390:	0038      	movs	r0, r7
    4392:	f000 fad9 	bl	4948 <__clzsi2>
    4396:	3020      	adds	r0, #32
    4398:	e706      	b.n	41a8 <__aeabi_dsub+0xc8>
    439a:	430a      	orrs	r2, r1
    439c:	0017      	movs	r7, r2
    439e:	2100      	movs	r1, #0
    43a0:	1e7a      	subs	r2, r7, #1
    43a2:	4197      	sbcs	r7, r2
    43a4:	e6ee      	b.n	4184 <__aeabi_dsub+0xa4>
    43a6:	2b00      	cmp	r3, #0
    43a8:	d000      	beq.n	43ac <__aeabi_dsub+0x2cc>
    43aa:	e0e5      	b.n	4578 <__aeabi_dsub+0x498>
    43ac:	1c73      	adds	r3, r6, #1
    43ae:	469c      	mov	ip, r3
    43b0:	055b      	lsls	r3, r3, #21
    43b2:	0d5b      	lsrs	r3, r3, #21
    43b4:	2b01      	cmp	r3, #1
    43b6:	dc00      	bgt.n	43ba <__aeabi_dsub+0x2da>
    43b8:	e09f      	b.n	44fa <__aeabi_dsub+0x41a>
    43ba:	4b1a      	ldr	r3, [pc, #104]	; (4424 <__aeabi_dsub+0x344>)
    43bc:	459c      	cmp	ip, r3
    43be:	d100      	bne.n	43c2 <__aeabi_dsub+0x2e2>
    43c0:	e0c5      	b.n	454e <__aeabi_dsub+0x46e>
    43c2:	4452      	add	r2, sl
    43c4:	4552      	cmp	r2, sl
    43c6:	4180      	sbcs	r0, r0
    43c8:	1864      	adds	r4, r4, r1
    43ca:	4240      	negs	r0, r0
    43cc:	1824      	adds	r4, r4, r0
    43ce:	07e7      	lsls	r7, r4, #31
    43d0:	0852      	lsrs	r2, r2, #1
    43d2:	4317      	orrs	r7, r2
    43d4:	0864      	lsrs	r4, r4, #1
    43d6:	4666      	mov	r6, ip
    43d8:	e708      	b.n	41ec <__aeabi_dsub+0x10c>
    43da:	4812      	ldr	r0, [pc, #72]	; (4424 <__aeabi_dsub+0x344>)
    43dc:	4285      	cmp	r5, r0
    43de:	d100      	bne.n	43e2 <__aeabi_dsub+0x302>
    43e0:	e085      	b.n	44ee <__aeabi_dsub+0x40e>
    43e2:	001d      	movs	r5, r3
    43e4:	e6bc      	b.n	4160 <__aeabi_dsub+0x80>
    43e6:	0029      	movs	r1, r5
    43e8:	3e1f      	subs	r6, #31
    43ea:	40f1      	lsrs	r1, r6
    43ec:	2b20      	cmp	r3, #32
    43ee:	d100      	bne.n	43f2 <__aeabi_dsub+0x312>
    43f0:	e07f      	b.n	44f2 <__aeabi_dsub+0x412>
    43f2:	2240      	movs	r2, #64	; 0x40
    43f4:	1ad3      	subs	r3, r2, r3
    43f6:	409d      	lsls	r5, r3
    43f8:	432f      	orrs	r7, r5
    43fa:	1e7d      	subs	r5, r7, #1
    43fc:	41af      	sbcs	r7, r5
    43fe:	2400      	movs	r4, #0
    4400:	430f      	orrs	r7, r1
    4402:	2600      	movs	r6, #0
    4404:	e78e      	b.n	4324 <__aeabi_dsub+0x244>
    4406:	002b      	movs	r3, r5
    4408:	000f      	movs	r7, r1
    440a:	3b20      	subs	r3, #32
    440c:	40df      	lsrs	r7, r3
    440e:	2d20      	cmp	r5, #32
    4410:	d071      	beq.n	44f6 <__aeabi_dsub+0x416>
    4412:	2340      	movs	r3, #64	; 0x40
    4414:	1b5d      	subs	r5, r3, r5
    4416:	40a9      	lsls	r1, r5
    4418:	430a      	orrs	r2, r1
    441a:	1e51      	subs	r1, r2, #1
    441c:	418a      	sbcs	r2, r1
    441e:	2100      	movs	r1, #0
    4420:	4317      	orrs	r7, r2
    4422:	e6af      	b.n	4184 <__aeabi_dsub+0xa4>
    4424:	000007ff 	.word	0x000007ff
    4428:	ff7fffff 	.word	0xff7fffff
    442c:	800fffff 	.word	0x800fffff
    4430:	2e00      	cmp	r6, #0
    4432:	d03e      	beq.n	44b2 <__aeabi_dsub+0x3d2>
    4434:	4eb3      	ldr	r6, [pc, #716]	; (4704 <__aeabi_dsub+0x624>)
    4436:	45b4      	cmp	ip, r6
    4438:	d045      	beq.n	44c6 <__aeabi_dsub+0x3e6>
    443a:	2680      	movs	r6, #128	; 0x80
    443c:	0436      	lsls	r6, r6, #16
    443e:	426d      	negs	r5, r5
    4440:	4334      	orrs	r4, r6
    4442:	2d38      	cmp	r5, #56	; 0x38
    4444:	dd00      	ble.n	4448 <__aeabi_dsub+0x368>
    4446:	e0a8      	b.n	459a <__aeabi_dsub+0x4ba>
    4448:	2d1f      	cmp	r5, #31
    444a:	dd00      	ble.n	444e <__aeabi_dsub+0x36e>
    444c:	e11f      	b.n	468e <__aeabi_dsub+0x5ae>
    444e:	2620      	movs	r6, #32
    4450:	0027      	movs	r7, r4
    4452:	4650      	mov	r0, sl
    4454:	1b76      	subs	r6, r6, r5
    4456:	40b7      	lsls	r7, r6
    4458:	40e8      	lsrs	r0, r5
    445a:	4307      	orrs	r7, r0
    445c:	4650      	mov	r0, sl
    445e:	40b0      	lsls	r0, r6
    4460:	1e46      	subs	r6, r0, #1
    4462:	41b0      	sbcs	r0, r6
    4464:	40ec      	lsrs	r4, r5
    4466:	4338      	orrs	r0, r7
    4468:	1a17      	subs	r7, r2, r0
    446a:	42ba      	cmp	r2, r7
    446c:	4192      	sbcs	r2, r2
    446e:	1b0c      	subs	r4, r1, r4
    4470:	4252      	negs	r2, r2
    4472:	1aa4      	subs	r4, r4, r2
    4474:	4666      	mov	r6, ip
    4476:	4698      	mov	r8, r3
    4478:	e68b      	b.n	4192 <__aeabi_dsub+0xb2>
    447a:	4664      	mov	r4, ip
    447c:	4667      	mov	r7, ip
    447e:	432c      	orrs	r4, r5
    4480:	d000      	beq.n	4484 <__aeabi_dsub+0x3a4>
    4482:	e68b      	b.n	419c <__aeabi_dsub+0xbc>
    4484:	2500      	movs	r5, #0
    4486:	2600      	movs	r6, #0
    4488:	2700      	movs	r7, #0
    448a:	e6ea      	b.n	4262 <__aeabi_dsub+0x182>
    448c:	001e      	movs	r6, r3
    448e:	e6ad      	b.n	41ec <__aeabi_dsub+0x10c>
    4490:	2b1f      	cmp	r3, #31
    4492:	dc60      	bgt.n	4556 <__aeabi_dsub+0x476>
    4494:	2720      	movs	r7, #32
    4496:	1af8      	subs	r0, r7, r3
    4498:	000f      	movs	r7, r1
    449a:	4684      	mov	ip, r0
    449c:	4087      	lsls	r7, r0
    449e:	0010      	movs	r0, r2
    44a0:	40d8      	lsrs	r0, r3
    44a2:	4307      	orrs	r7, r0
    44a4:	4660      	mov	r0, ip
    44a6:	4082      	lsls	r2, r0
    44a8:	1e50      	subs	r0, r2, #1
    44aa:	4182      	sbcs	r2, r0
    44ac:	40d9      	lsrs	r1, r3
    44ae:	4317      	orrs	r7, r2
    44b0:	e6f5      	b.n	429e <__aeabi_dsub+0x1be>
    44b2:	0026      	movs	r6, r4
    44b4:	4650      	mov	r0, sl
    44b6:	4306      	orrs	r6, r0
    44b8:	d005      	beq.n	44c6 <__aeabi_dsub+0x3e6>
    44ba:	43ed      	mvns	r5, r5
    44bc:	2d00      	cmp	r5, #0
    44be:	d0d3      	beq.n	4468 <__aeabi_dsub+0x388>
    44c0:	4e90      	ldr	r6, [pc, #576]	; (4704 <__aeabi_dsub+0x624>)
    44c2:	45b4      	cmp	ip, r6
    44c4:	d1bd      	bne.n	4442 <__aeabi_dsub+0x362>
    44c6:	000c      	movs	r4, r1
    44c8:	0017      	movs	r7, r2
    44ca:	4666      	mov	r6, ip
    44cc:	4698      	mov	r8, r3
    44ce:	e68d      	b.n	41ec <__aeabi_dsub+0x10c>
    44d0:	488c      	ldr	r0, [pc, #560]	; (4704 <__aeabi_dsub+0x624>)
    44d2:	4283      	cmp	r3, r0
    44d4:	d00b      	beq.n	44ee <__aeabi_dsub+0x40e>
    44d6:	4663      	mov	r3, ip
    44d8:	e6d9      	b.n	428e <__aeabi_dsub+0x1ae>
    44da:	2d00      	cmp	r5, #0
    44dc:	d000      	beq.n	44e0 <__aeabi_dsub+0x400>
    44de:	e096      	b.n	460e <__aeabi_dsub+0x52e>
    44e0:	0008      	movs	r0, r1
    44e2:	4310      	orrs	r0, r2
    44e4:	d100      	bne.n	44e8 <__aeabi_dsub+0x408>
    44e6:	e0e2      	b.n	46ae <__aeabi_dsub+0x5ce>
    44e8:	000c      	movs	r4, r1
    44ea:	0017      	movs	r7, r2
    44ec:	4698      	mov	r8, r3
    44ee:	4e85      	ldr	r6, [pc, #532]	; (4704 <__aeabi_dsub+0x624>)
    44f0:	e67c      	b.n	41ec <__aeabi_dsub+0x10c>
    44f2:	2500      	movs	r5, #0
    44f4:	e780      	b.n	43f8 <__aeabi_dsub+0x318>
    44f6:	2100      	movs	r1, #0
    44f8:	e78e      	b.n	4418 <__aeabi_dsub+0x338>
    44fa:	0023      	movs	r3, r4
    44fc:	4650      	mov	r0, sl
    44fe:	4303      	orrs	r3, r0
    4500:	2e00      	cmp	r6, #0
    4502:	d000      	beq.n	4506 <__aeabi_dsub+0x426>
    4504:	e0a8      	b.n	4658 <__aeabi_dsub+0x578>
    4506:	2b00      	cmp	r3, #0
    4508:	d100      	bne.n	450c <__aeabi_dsub+0x42c>
    450a:	e0de      	b.n	46ca <__aeabi_dsub+0x5ea>
    450c:	000b      	movs	r3, r1
    450e:	4313      	orrs	r3, r2
    4510:	d100      	bne.n	4514 <__aeabi_dsub+0x434>
    4512:	e66b      	b.n	41ec <__aeabi_dsub+0x10c>
    4514:	4452      	add	r2, sl
    4516:	4552      	cmp	r2, sl
    4518:	4180      	sbcs	r0, r0
    451a:	1864      	adds	r4, r4, r1
    451c:	4240      	negs	r0, r0
    451e:	1824      	adds	r4, r4, r0
    4520:	0017      	movs	r7, r2
    4522:	0223      	lsls	r3, r4, #8
    4524:	d400      	bmi.n	4528 <__aeabi_dsub+0x448>
    4526:	e6fd      	b.n	4324 <__aeabi_dsub+0x244>
    4528:	4b77      	ldr	r3, [pc, #476]	; (4708 <__aeabi_dsub+0x628>)
    452a:	4666      	mov	r6, ip
    452c:	401c      	ands	r4, r3
    452e:	e65d      	b.n	41ec <__aeabi_dsub+0x10c>
    4530:	0025      	movs	r5, r4
    4532:	4650      	mov	r0, sl
    4534:	4305      	orrs	r5, r0
    4536:	2e00      	cmp	r6, #0
    4538:	d1cf      	bne.n	44da <__aeabi_dsub+0x3fa>
    453a:	2d00      	cmp	r5, #0
    453c:	d14f      	bne.n	45de <__aeabi_dsub+0x4fe>
    453e:	000c      	movs	r4, r1
    4540:	4314      	orrs	r4, r2
    4542:	d100      	bne.n	4546 <__aeabi_dsub+0x466>
    4544:	e0a0      	b.n	4688 <__aeabi_dsub+0x5a8>
    4546:	000c      	movs	r4, r1
    4548:	0017      	movs	r7, r2
    454a:	4698      	mov	r8, r3
    454c:	e64e      	b.n	41ec <__aeabi_dsub+0x10c>
    454e:	4666      	mov	r6, ip
    4550:	2400      	movs	r4, #0
    4552:	2700      	movs	r7, #0
    4554:	e685      	b.n	4262 <__aeabi_dsub+0x182>
    4556:	001f      	movs	r7, r3
    4558:	0008      	movs	r0, r1
    455a:	3f20      	subs	r7, #32
    455c:	40f8      	lsrs	r0, r7
    455e:	0007      	movs	r7, r0
    4560:	2b20      	cmp	r3, #32
    4562:	d100      	bne.n	4566 <__aeabi_dsub+0x486>
    4564:	e08e      	b.n	4684 <__aeabi_dsub+0x5a4>
    4566:	2040      	movs	r0, #64	; 0x40
    4568:	1ac3      	subs	r3, r0, r3
    456a:	4099      	lsls	r1, r3
    456c:	430a      	orrs	r2, r1
    456e:	1e51      	subs	r1, r2, #1
    4570:	418a      	sbcs	r2, r1
    4572:	2100      	movs	r1, #0
    4574:	4317      	orrs	r7, r2
    4576:	e692      	b.n	429e <__aeabi_dsub+0x1be>
    4578:	2e00      	cmp	r6, #0
    457a:	d114      	bne.n	45a6 <__aeabi_dsub+0x4c6>
    457c:	0026      	movs	r6, r4
    457e:	4650      	mov	r0, sl
    4580:	4306      	orrs	r6, r0
    4582:	d062      	beq.n	464a <__aeabi_dsub+0x56a>
    4584:	43db      	mvns	r3, r3
    4586:	2b00      	cmp	r3, #0
    4588:	d15c      	bne.n	4644 <__aeabi_dsub+0x564>
    458a:	1887      	adds	r7, r0, r2
    458c:	4297      	cmp	r7, r2
    458e:	4192      	sbcs	r2, r2
    4590:	1864      	adds	r4, r4, r1
    4592:	4252      	negs	r2, r2
    4594:	18a4      	adds	r4, r4, r2
    4596:	4666      	mov	r6, ip
    4598:	e687      	b.n	42aa <__aeabi_dsub+0x1ca>
    459a:	4650      	mov	r0, sl
    459c:	4320      	orrs	r0, r4
    459e:	1e44      	subs	r4, r0, #1
    45a0:	41a0      	sbcs	r0, r4
    45a2:	2400      	movs	r4, #0
    45a4:	e760      	b.n	4468 <__aeabi_dsub+0x388>
    45a6:	4e57      	ldr	r6, [pc, #348]	; (4704 <__aeabi_dsub+0x624>)
    45a8:	45b4      	cmp	ip, r6
    45aa:	d04e      	beq.n	464a <__aeabi_dsub+0x56a>
    45ac:	2680      	movs	r6, #128	; 0x80
    45ae:	0436      	lsls	r6, r6, #16
    45b0:	425b      	negs	r3, r3
    45b2:	4334      	orrs	r4, r6
    45b4:	2b38      	cmp	r3, #56	; 0x38
    45b6:	dd00      	ble.n	45ba <__aeabi_dsub+0x4da>
    45b8:	e07f      	b.n	46ba <__aeabi_dsub+0x5da>
    45ba:	2b1f      	cmp	r3, #31
    45bc:	dd00      	ble.n	45c0 <__aeabi_dsub+0x4e0>
    45be:	e08b      	b.n	46d8 <__aeabi_dsub+0x5f8>
    45c0:	2620      	movs	r6, #32
    45c2:	0027      	movs	r7, r4
    45c4:	4650      	mov	r0, sl
    45c6:	1af6      	subs	r6, r6, r3
    45c8:	40b7      	lsls	r7, r6
    45ca:	40d8      	lsrs	r0, r3
    45cc:	4307      	orrs	r7, r0
    45ce:	4650      	mov	r0, sl
    45d0:	40b0      	lsls	r0, r6
    45d2:	1e46      	subs	r6, r0, #1
    45d4:	41b0      	sbcs	r0, r6
    45d6:	4307      	orrs	r7, r0
    45d8:	40dc      	lsrs	r4, r3
    45da:	18bf      	adds	r7, r7, r2
    45dc:	e7d6      	b.n	458c <__aeabi_dsub+0x4ac>
    45de:	000d      	movs	r5, r1
    45e0:	4315      	orrs	r5, r2
    45e2:	d100      	bne.n	45e6 <__aeabi_dsub+0x506>
    45e4:	e602      	b.n	41ec <__aeabi_dsub+0x10c>
    45e6:	4650      	mov	r0, sl
    45e8:	1a80      	subs	r0, r0, r2
    45ea:	4582      	cmp	sl, r0
    45ec:	41bf      	sbcs	r7, r7
    45ee:	1a65      	subs	r5, r4, r1
    45f0:	427f      	negs	r7, r7
    45f2:	1bed      	subs	r5, r5, r7
    45f4:	4684      	mov	ip, r0
    45f6:	0228      	lsls	r0, r5, #8
    45f8:	d400      	bmi.n	45fc <__aeabi_dsub+0x51c>
    45fa:	e68d      	b.n	4318 <__aeabi_dsub+0x238>
    45fc:	4650      	mov	r0, sl
    45fe:	1a17      	subs	r7, r2, r0
    4600:	42ba      	cmp	r2, r7
    4602:	4192      	sbcs	r2, r2
    4604:	1b0c      	subs	r4, r1, r4
    4606:	4252      	negs	r2, r2
    4608:	1aa4      	subs	r4, r4, r2
    460a:	4698      	mov	r8, r3
    460c:	e5ee      	b.n	41ec <__aeabi_dsub+0x10c>
    460e:	000d      	movs	r5, r1
    4610:	4315      	orrs	r5, r2
    4612:	d100      	bne.n	4616 <__aeabi_dsub+0x536>
    4614:	e76b      	b.n	44ee <__aeabi_dsub+0x40e>
    4616:	4650      	mov	r0, sl
    4618:	0767      	lsls	r7, r4, #29
    461a:	08c0      	lsrs	r0, r0, #3
    461c:	4307      	orrs	r7, r0
    461e:	2080      	movs	r0, #128	; 0x80
    4620:	08e4      	lsrs	r4, r4, #3
    4622:	0300      	lsls	r0, r0, #12
    4624:	4204      	tst	r4, r0
    4626:	d007      	beq.n	4638 <__aeabi_dsub+0x558>
    4628:	08cd      	lsrs	r5, r1, #3
    462a:	4205      	tst	r5, r0
    462c:	d104      	bne.n	4638 <__aeabi_dsub+0x558>
    462e:	002c      	movs	r4, r5
    4630:	4698      	mov	r8, r3
    4632:	08d7      	lsrs	r7, r2, #3
    4634:	0749      	lsls	r1, r1, #29
    4636:	430f      	orrs	r7, r1
    4638:	0f7b      	lsrs	r3, r7, #29
    463a:	00e4      	lsls	r4, r4, #3
    463c:	431c      	orrs	r4, r3
    463e:	00ff      	lsls	r7, r7, #3
    4640:	4e30      	ldr	r6, [pc, #192]	; (4704 <__aeabi_dsub+0x624>)
    4642:	e5d3      	b.n	41ec <__aeabi_dsub+0x10c>
    4644:	4e2f      	ldr	r6, [pc, #188]	; (4704 <__aeabi_dsub+0x624>)
    4646:	45b4      	cmp	ip, r6
    4648:	d1b4      	bne.n	45b4 <__aeabi_dsub+0x4d4>
    464a:	000c      	movs	r4, r1
    464c:	0017      	movs	r7, r2
    464e:	4666      	mov	r6, ip
    4650:	e5cc      	b.n	41ec <__aeabi_dsub+0x10c>
    4652:	2700      	movs	r7, #0
    4654:	2400      	movs	r4, #0
    4656:	e5e8      	b.n	422a <__aeabi_dsub+0x14a>
    4658:	2b00      	cmp	r3, #0
    465a:	d039      	beq.n	46d0 <__aeabi_dsub+0x5f0>
    465c:	000b      	movs	r3, r1
    465e:	4313      	orrs	r3, r2
    4660:	d100      	bne.n	4664 <__aeabi_dsub+0x584>
    4662:	e744      	b.n	44ee <__aeabi_dsub+0x40e>
    4664:	08c0      	lsrs	r0, r0, #3
    4666:	0767      	lsls	r7, r4, #29
    4668:	4307      	orrs	r7, r0
    466a:	2080      	movs	r0, #128	; 0x80
    466c:	08e4      	lsrs	r4, r4, #3
    466e:	0300      	lsls	r0, r0, #12
    4670:	4204      	tst	r4, r0
    4672:	d0e1      	beq.n	4638 <__aeabi_dsub+0x558>
    4674:	08cb      	lsrs	r3, r1, #3
    4676:	4203      	tst	r3, r0
    4678:	d1de      	bne.n	4638 <__aeabi_dsub+0x558>
    467a:	08d7      	lsrs	r7, r2, #3
    467c:	0749      	lsls	r1, r1, #29
    467e:	430f      	orrs	r7, r1
    4680:	001c      	movs	r4, r3
    4682:	e7d9      	b.n	4638 <__aeabi_dsub+0x558>
    4684:	2100      	movs	r1, #0
    4686:	e771      	b.n	456c <__aeabi_dsub+0x48c>
    4688:	2500      	movs	r5, #0
    468a:	2700      	movs	r7, #0
    468c:	e5e9      	b.n	4262 <__aeabi_dsub+0x182>
    468e:	002e      	movs	r6, r5
    4690:	0027      	movs	r7, r4
    4692:	3e20      	subs	r6, #32
    4694:	40f7      	lsrs	r7, r6
    4696:	2d20      	cmp	r5, #32
    4698:	d02f      	beq.n	46fa <__aeabi_dsub+0x61a>
    469a:	2640      	movs	r6, #64	; 0x40
    469c:	1b75      	subs	r5, r6, r5
    469e:	40ac      	lsls	r4, r5
    46a0:	4650      	mov	r0, sl
    46a2:	4320      	orrs	r0, r4
    46a4:	1e44      	subs	r4, r0, #1
    46a6:	41a0      	sbcs	r0, r4
    46a8:	2400      	movs	r4, #0
    46aa:	4338      	orrs	r0, r7
    46ac:	e6dc      	b.n	4468 <__aeabi_dsub+0x388>
    46ae:	2480      	movs	r4, #128	; 0x80
    46b0:	2500      	movs	r5, #0
    46b2:	0324      	lsls	r4, r4, #12
    46b4:	4e13      	ldr	r6, [pc, #76]	; (4704 <__aeabi_dsub+0x624>)
    46b6:	2700      	movs	r7, #0
    46b8:	e5d3      	b.n	4262 <__aeabi_dsub+0x182>
    46ba:	4650      	mov	r0, sl
    46bc:	4320      	orrs	r0, r4
    46be:	0007      	movs	r7, r0
    46c0:	1e78      	subs	r0, r7, #1
    46c2:	4187      	sbcs	r7, r0
    46c4:	2400      	movs	r4, #0
    46c6:	18bf      	adds	r7, r7, r2
    46c8:	e760      	b.n	458c <__aeabi_dsub+0x4ac>
    46ca:	000c      	movs	r4, r1
    46cc:	0017      	movs	r7, r2
    46ce:	e58d      	b.n	41ec <__aeabi_dsub+0x10c>
    46d0:	000c      	movs	r4, r1
    46d2:	0017      	movs	r7, r2
    46d4:	4e0b      	ldr	r6, [pc, #44]	; (4704 <__aeabi_dsub+0x624>)
    46d6:	e589      	b.n	41ec <__aeabi_dsub+0x10c>
    46d8:	001e      	movs	r6, r3
    46da:	0027      	movs	r7, r4
    46dc:	3e20      	subs	r6, #32
    46de:	40f7      	lsrs	r7, r6
    46e0:	2b20      	cmp	r3, #32
    46e2:	d00c      	beq.n	46fe <__aeabi_dsub+0x61e>
    46e4:	2640      	movs	r6, #64	; 0x40
    46e6:	1af3      	subs	r3, r6, r3
    46e8:	409c      	lsls	r4, r3
    46ea:	4650      	mov	r0, sl
    46ec:	4320      	orrs	r0, r4
    46ee:	1e44      	subs	r4, r0, #1
    46f0:	41a0      	sbcs	r0, r4
    46f2:	4307      	orrs	r7, r0
    46f4:	2400      	movs	r4, #0
    46f6:	18bf      	adds	r7, r7, r2
    46f8:	e748      	b.n	458c <__aeabi_dsub+0x4ac>
    46fa:	2400      	movs	r4, #0
    46fc:	e7d0      	b.n	46a0 <__aeabi_dsub+0x5c0>
    46fe:	2400      	movs	r4, #0
    4700:	e7f3      	b.n	46ea <__aeabi_dsub+0x60a>
    4702:	46c0      	nop			; (mov r8, r8)
    4704:	000007ff 	.word	0x000007ff
    4708:	ff7fffff 	.word	0xff7fffff

0000470c <__aeabi_i2d>:
    470c:	b570      	push	{r4, r5, r6, lr}
    470e:	2800      	cmp	r0, #0
    4710:	d030      	beq.n	4774 <__aeabi_i2d+0x68>
    4712:	17c3      	asrs	r3, r0, #31
    4714:	18c4      	adds	r4, r0, r3
    4716:	405c      	eors	r4, r3
    4718:	0fc5      	lsrs	r5, r0, #31
    471a:	0020      	movs	r0, r4
    471c:	f000 f914 	bl	4948 <__clzsi2>
    4720:	4b17      	ldr	r3, [pc, #92]	; (4780 <__aeabi_i2d+0x74>)
    4722:	4a18      	ldr	r2, [pc, #96]	; (4784 <__aeabi_i2d+0x78>)
    4724:	1a1b      	subs	r3, r3, r0
    4726:	1ad2      	subs	r2, r2, r3
    4728:	2a1f      	cmp	r2, #31
    472a:	dd18      	ble.n	475e <__aeabi_i2d+0x52>
    472c:	4a16      	ldr	r2, [pc, #88]	; (4788 <__aeabi_i2d+0x7c>)
    472e:	1ad2      	subs	r2, r2, r3
    4730:	4094      	lsls	r4, r2
    4732:	2200      	movs	r2, #0
    4734:	0324      	lsls	r4, r4, #12
    4736:	055b      	lsls	r3, r3, #21
    4738:	0b24      	lsrs	r4, r4, #12
    473a:	0d5b      	lsrs	r3, r3, #21
    473c:	2100      	movs	r1, #0
    473e:	0010      	movs	r0, r2
    4740:	0324      	lsls	r4, r4, #12
    4742:	0d0a      	lsrs	r2, r1, #20
    4744:	0b24      	lsrs	r4, r4, #12
    4746:	0512      	lsls	r2, r2, #20
    4748:	4322      	orrs	r2, r4
    474a:	4c10      	ldr	r4, [pc, #64]	; (478c <__aeabi_i2d+0x80>)
    474c:	051b      	lsls	r3, r3, #20
    474e:	4022      	ands	r2, r4
    4750:	4313      	orrs	r3, r2
    4752:	005b      	lsls	r3, r3, #1
    4754:	07ed      	lsls	r5, r5, #31
    4756:	085b      	lsrs	r3, r3, #1
    4758:	432b      	orrs	r3, r5
    475a:	0019      	movs	r1, r3
    475c:	bd70      	pop	{r4, r5, r6, pc}
    475e:	0021      	movs	r1, r4
    4760:	4091      	lsls	r1, r2
    4762:	000a      	movs	r2, r1
    4764:	210b      	movs	r1, #11
    4766:	1a08      	subs	r0, r1, r0
    4768:	40c4      	lsrs	r4, r0
    476a:	055b      	lsls	r3, r3, #21
    476c:	0324      	lsls	r4, r4, #12
    476e:	0b24      	lsrs	r4, r4, #12
    4770:	0d5b      	lsrs	r3, r3, #21
    4772:	e7e3      	b.n	473c <__aeabi_i2d+0x30>
    4774:	2500      	movs	r5, #0
    4776:	2300      	movs	r3, #0
    4778:	2400      	movs	r4, #0
    477a:	2200      	movs	r2, #0
    477c:	e7de      	b.n	473c <__aeabi_i2d+0x30>
    477e:	46c0      	nop			; (mov r8, r8)
    4780:	0000041e 	.word	0x0000041e
    4784:	00000433 	.word	0x00000433
    4788:	00000413 	.word	0x00000413
    478c:	800fffff 	.word	0x800fffff

00004790 <__aeabi_f2d>:
    4790:	0041      	lsls	r1, r0, #1
    4792:	0e09      	lsrs	r1, r1, #24
    4794:	1c4b      	adds	r3, r1, #1
    4796:	b570      	push	{r4, r5, r6, lr}
    4798:	b2db      	uxtb	r3, r3
    479a:	0246      	lsls	r6, r0, #9
    479c:	0a75      	lsrs	r5, r6, #9
    479e:	0fc4      	lsrs	r4, r0, #31
    47a0:	2b01      	cmp	r3, #1
    47a2:	dd14      	ble.n	47ce <__aeabi_f2d+0x3e>
    47a4:	23e0      	movs	r3, #224	; 0xe0
    47a6:	009b      	lsls	r3, r3, #2
    47a8:	076d      	lsls	r5, r5, #29
    47aa:	0b36      	lsrs	r6, r6, #12
    47ac:	18cb      	adds	r3, r1, r3
    47ae:	2100      	movs	r1, #0
    47b0:	0d0a      	lsrs	r2, r1, #20
    47b2:	0028      	movs	r0, r5
    47b4:	0512      	lsls	r2, r2, #20
    47b6:	4d1c      	ldr	r5, [pc, #112]	; (4828 <__aeabi_f2d+0x98>)
    47b8:	4332      	orrs	r2, r6
    47ba:	055b      	lsls	r3, r3, #21
    47bc:	402a      	ands	r2, r5
    47be:	085b      	lsrs	r3, r3, #1
    47c0:	4313      	orrs	r3, r2
    47c2:	005b      	lsls	r3, r3, #1
    47c4:	07e4      	lsls	r4, r4, #31
    47c6:	085b      	lsrs	r3, r3, #1
    47c8:	4323      	orrs	r3, r4
    47ca:	0019      	movs	r1, r3
    47cc:	bd70      	pop	{r4, r5, r6, pc}
    47ce:	2900      	cmp	r1, #0
    47d0:	d114      	bne.n	47fc <__aeabi_f2d+0x6c>
    47d2:	2d00      	cmp	r5, #0
    47d4:	d01e      	beq.n	4814 <__aeabi_f2d+0x84>
    47d6:	0028      	movs	r0, r5
    47d8:	f000 f8b6 	bl	4948 <__clzsi2>
    47dc:	280a      	cmp	r0, #10
    47de:	dc1c      	bgt.n	481a <__aeabi_f2d+0x8a>
    47e0:	230b      	movs	r3, #11
    47e2:	002a      	movs	r2, r5
    47e4:	1a1b      	subs	r3, r3, r0
    47e6:	40da      	lsrs	r2, r3
    47e8:	0003      	movs	r3, r0
    47ea:	3315      	adds	r3, #21
    47ec:	409d      	lsls	r5, r3
    47ee:	4b0f      	ldr	r3, [pc, #60]	; (482c <__aeabi_f2d+0x9c>)
    47f0:	0312      	lsls	r2, r2, #12
    47f2:	1a1b      	subs	r3, r3, r0
    47f4:	055b      	lsls	r3, r3, #21
    47f6:	0b16      	lsrs	r6, r2, #12
    47f8:	0d5b      	lsrs	r3, r3, #21
    47fa:	e7d8      	b.n	47ae <__aeabi_f2d+0x1e>
    47fc:	2d00      	cmp	r5, #0
    47fe:	d006      	beq.n	480e <__aeabi_f2d+0x7e>
    4800:	0b32      	lsrs	r2, r6, #12
    4802:	2680      	movs	r6, #128	; 0x80
    4804:	0336      	lsls	r6, r6, #12
    4806:	076d      	lsls	r5, r5, #29
    4808:	4316      	orrs	r6, r2
    480a:	4b09      	ldr	r3, [pc, #36]	; (4830 <__aeabi_f2d+0xa0>)
    480c:	e7cf      	b.n	47ae <__aeabi_f2d+0x1e>
    480e:	4b08      	ldr	r3, [pc, #32]	; (4830 <__aeabi_f2d+0xa0>)
    4810:	2600      	movs	r6, #0
    4812:	e7cc      	b.n	47ae <__aeabi_f2d+0x1e>
    4814:	2300      	movs	r3, #0
    4816:	2600      	movs	r6, #0
    4818:	e7c9      	b.n	47ae <__aeabi_f2d+0x1e>
    481a:	0003      	movs	r3, r0
    481c:	002a      	movs	r2, r5
    481e:	3b0b      	subs	r3, #11
    4820:	409a      	lsls	r2, r3
    4822:	2500      	movs	r5, #0
    4824:	e7e3      	b.n	47ee <__aeabi_f2d+0x5e>
    4826:	46c0      	nop			; (mov r8, r8)
    4828:	800fffff 	.word	0x800fffff
    482c:	00000389 	.word	0x00000389
    4830:	000007ff 	.word	0x000007ff

00004834 <__aeabi_d2f>:
    4834:	b5f0      	push	{r4, r5, r6, r7, lr}
    4836:	004c      	lsls	r4, r1, #1
    4838:	0d64      	lsrs	r4, r4, #21
    483a:	030b      	lsls	r3, r1, #12
    483c:	1c62      	adds	r2, r4, #1
    483e:	0f45      	lsrs	r5, r0, #29
    4840:	0a5b      	lsrs	r3, r3, #9
    4842:	0552      	lsls	r2, r2, #21
    4844:	432b      	orrs	r3, r5
    4846:	0fc9      	lsrs	r1, r1, #31
    4848:	00c5      	lsls	r5, r0, #3
    484a:	0d52      	lsrs	r2, r2, #21
    484c:	2a01      	cmp	r2, #1
    484e:	dd28      	ble.n	48a2 <__aeabi_d2f+0x6e>
    4850:	4a3a      	ldr	r2, [pc, #232]	; (493c <__aeabi_d2f+0x108>)
    4852:	18a6      	adds	r6, r4, r2
    4854:	2efe      	cmp	r6, #254	; 0xfe
    4856:	dc1b      	bgt.n	4890 <__aeabi_d2f+0x5c>
    4858:	2e00      	cmp	r6, #0
    485a:	dd3e      	ble.n	48da <__aeabi_d2f+0xa6>
    485c:	0180      	lsls	r0, r0, #6
    485e:	0002      	movs	r2, r0
    4860:	1e50      	subs	r0, r2, #1
    4862:	4182      	sbcs	r2, r0
    4864:	0f6d      	lsrs	r5, r5, #29
    4866:	432a      	orrs	r2, r5
    4868:	00db      	lsls	r3, r3, #3
    486a:	4313      	orrs	r3, r2
    486c:	075a      	lsls	r2, r3, #29
    486e:	d004      	beq.n	487a <__aeabi_d2f+0x46>
    4870:	220f      	movs	r2, #15
    4872:	401a      	ands	r2, r3
    4874:	2a04      	cmp	r2, #4
    4876:	d000      	beq.n	487a <__aeabi_d2f+0x46>
    4878:	3304      	adds	r3, #4
    487a:	2280      	movs	r2, #128	; 0x80
    487c:	04d2      	lsls	r2, r2, #19
    487e:	401a      	ands	r2, r3
    4880:	d05a      	beq.n	4938 <__aeabi_d2f+0x104>
    4882:	3601      	adds	r6, #1
    4884:	2eff      	cmp	r6, #255	; 0xff
    4886:	d003      	beq.n	4890 <__aeabi_d2f+0x5c>
    4888:	019b      	lsls	r3, r3, #6
    488a:	0a5b      	lsrs	r3, r3, #9
    488c:	b2f4      	uxtb	r4, r6
    488e:	e001      	b.n	4894 <__aeabi_d2f+0x60>
    4890:	24ff      	movs	r4, #255	; 0xff
    4892:	2300      	movs	r3, #0
    4894:	0258      	lsls	r0, r3, #9
    4896:	05e4      	lsls	r4, r4, #23
    4898:	0a40      	lsrs	r0, r0, #9
    489a:	07c9      	lsls	r1, r1, #31
    489c:	4320      	orrs	r0, r4
    489e:	4308      	orrs	r0, r1
    48a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    48a2:	2c00      	cmp	r4, #0
    48a4:	d007      	beq.n	48b6 <__aeabi_d2f+0x82>
    48a6:	431d      	orrs	r5, r3
    48a8:	d0f2      	beq.n	4890 <__aeabi_d2f+0x5c>
    48aa:	2080      	movs	r0, #128	; 0x80
    48ac:	00db      	lsls	r3, r3, #3
    48ae:	0480      	lsls	r0, r0, #18
    48b0:	4303      	orrs	r3, r0
    48b2:	26ff      	movs	r6, #255	; 0xff
    48b4:	e7da      	b.n	486c <__aeabi_d2f+0x38>
    48b6:	432b      	orrs	r3, r5
    48b8:	d003      	beq.n	48c2 <__aeabi_d2f+0x8e>
    48ba:	2305      	movs	r3, #5
    48bc:	08db      	lsrs	r3, r3, #3
    48be:	2cff      	cmp	r4, #255	; 0xff
    48c0:	d003      	beq.n	48ca <__aeabi_d2f+0x96>
    48c2:	025b      	lsls	r3, r3, #9
    48c4:	0a5b      	lsrs	r3, r3, #9
    48c6:	b2e4      	uxtb	r4, r4
    48c8:	e7e4      	b.n	4894 <__aeabi_d2f+0x60>
    48ca:	2b00      	cmp	r3, #0
    48cc:	d032      	beq.n	4934 <__aeabi_d2f+0x100>
    48ce:	2080      	movs	r0, #128	; 0x80
    48d0:	03c0      	lsls	r0, r0, #15
    48d2:	4303      	orrs	r3, r0
    48d4:	025b      	lsls	r3, r3, #9
    48d6:	0a5b      	lsrs	r3, r3, #9
    48d8:	e7dc      	b.n	4894 <__aeabi_d2f+0x60>
    48da:	0032      	movs	r2, r6
    48dc:	3217      	adds	r2, #23
    48de:	db14      	blt.n	490a <__aeabi_d2f+0xd6>
    48e0:	2280      	movs	r2, #128	; 0x80
    48e2:	271e      	movs	r7, #30
    48e4:	0412      	lsls	r2, r2, #16
    48e6:	4313      	orrs	r3, r2
    48e8:	1bbf      	subs	r7, r7, r6
    48ea:	2f1f      	cmp	r7, #31
    48ec:	dc0f      	bgt.n	490e <__aeabi_d2f+0xda>
    48ee:	4a14      	ldr	r2, [pc, #80]	; (4940 <__aeabi_d2f+0x10c>)
    48f0:	4694      	mov	ip, r2
    48f2:	4464      	add	r4, ip
    48f4:	002a      	movs	r2, r5
    48f6:	40a5      	lsls	r5, r4
    48f8:	002e      	movs	r6, r5
    48fa:	40a3      	lsls	r3, r4
    48fc:	1e75      	subs	r5, r6, #1
    48fe:	41ae      	sbcs	r6, r5
    4900:	40fa      	lsrs	r2, r7
    4902:	4333      	orrs	r3, r6
    4904:	4313      	orrs	r3, r2
    4906:	2600      	movs	r6, #0
    4908:	e7b0      	b.n	486c <__aeabi_d2f+0x38>
    490a:	2400      	movs	r4, #0
    490c:	e7d5      	b.n	48ba <__aeabi_d2f+0x86>
    490e:	2202      	movs	r2, #2
    4910:	4252      	negs	r2, r2
    4912:	1b96      	subs	r6, r2, r6
    4914:	001a      	movs	r2, r3
    4916:	40f2      	lsrs	r2, r6
    4918:	2f20      	cmp	r7, #32
    491a:	d009      	beq.n	4930 <__aeabi_d2f+0xfc>
    491c:	4809      	ldr	r0, [pc, #36]	; (4944 <__aeabi_d2f+0x110>)
    491e:	4684      	mov	ip, r0
    4920:	4464      	add	r4, ip
    4922:	40a3      	lsls	r3, r4
    4924:	432b      	orrs	r3, r5
    4926:	1e5d      	subs	r5, r3, #1
    4928:	41ab      	sbcs	r3, r5
    492a:	2600      	movs	r6, #0
    492c:	4313      	orrs	r3, r2
    492e:	e79d      	b.n	486c <__aeabi_d2f+0x38>
    4930:	2300      	movs	r3, #0
    4932:	e7f7      	b.n	4924 <__aeabi_d2f+0xf0>
    4934:	2300      	movs	r3, #0
    4936:	e7ad      	b.n	4894 <__aeabi_d2f+0x60>
    4938:	0034      	movs	r4, r6
    493a:	e7bf      	b.n	48bc <__aeabi_d2f+0x88>
    493c:	fffffc80 	.word	0xfffffc80
    4940:	fffffc82 	.word	0xfffffc82
    4944:	fffffca2 	.word	0xfffffca2

00004948 <__clzsi2>:
    4948:	211c      	movs	r1, #28
    494a:	2301      	movs	r3, #1
    494c:	041b      	lsls	r3, r3, #16
    494e:	4298      	cmp	r0, r3
    4950:	d301      	bcc.n	4956 <__clzsi2+0xe>
    4952:	0c00      	lsrs	r0, r0, #16
    4954:	3910      	subs	r1, #16
    4956:	0a1b      	lsrs	r3, r3, #8
    4958:	4298      	cmp	r0, r3
    495a:	d301      	bcc.n	4960 <__clzsi2+0x18>
    495c:	0a00      	lsrs	r0, r0, #8
    495e:	3908      	subs	r1, #8
    4960:	091b      	lsrs	r3, r3, #4
    4962:	4298      	cmp	r0, r3
    4964:	d301      	bcc.n	496a <__clzsi2+0x22>
    4966:	0900      	lsrs	r0, r0, #4
    4968:	3904      	subs	r1, #4
    496a:	a202      	add	r2, pc, #8	; (adr r2, 4974 <__clzsi2+0x2c>)
    496c:	5c10      	ldrb	r0, [r2, r0]
    496e:	1840      	adds	r0, r0, r1
    4970:	4770      	bx	lr
    4972:	46c0      	nop			; (mov r8, r8)
    4974:	02020304 	.word	0x02020304
    4978:	01010101 	.word	0x01010101
	...

00004984 <__clzdi2>:
    4984:	b510      	push	{r4, lr}
    4986:	2900      	cmp	r1, #0
    4988:	d103      	bne.n	4992 <__clzdi2+0xe>
    498a:	f7ff ffdd 	bl	4948 <__clzsi2>
    498e:	3020      	adds	r0, #32
    4990:	e002      	b.n	4998 <__clzdi2+0x14>
    4992:	1c08      	adds	r0, r1, #0
    4994:	f7ff ffd8 	bl	4948 <__clzsi2>
    4998:	bd10      	pop	{r4, pc}
    499a:	46c0      	nop			; (mov r8, r8)

0000499c <__libc_init_array>:
    499c:	b570      	push	{r4, r5, r6, lr}
    499e:	4e0d      	ldr	r6, [pc, #52]	; (49d4 <__libc_init_array+0x38>)
    49a0:	4d0d      	ldr	r5, [pc, #52]	; (49d8 <__libc_init_array+0x3c>)
    49a2:	2400      	movs	r4, #0
    49a4:	1bad      	subs	r5, r5, r6
    49a6:	10ad      	asrs	r5, r5, #2
    49a8:	d005      	beq.n	49b6 <__libc_init_array+0x1a>
    49aa:	00a3      	lsls	r3, r4, #2
    49ac:	58f3      	ldr	r3, [r6, r3]
    49ae:	3401      	adds	r4, #1
    49b0:	4798      	blx	r3
    49b2:	42a5      	cmp	r5, r4
    49b4:	d1f9      	bne.n	49aa <__libc_init_array+0xe>
    49b6:	f002 f9f3 	bl	6da0 <_init>
    49ba:	4e08      	ldr	r6, [pc, #32]	; (49dc <__libc_init_array+0x40>)
    49bc:	4d08      	ldr	r5, [pc, #32]	; (49e0 <__libc_init_array+0x44>)
    49be:	2400      	movs	r4, #0
    49c0:	1bad      	subs	r5, r5, r6
    49c2:	10ad      	asrs	r5, r5, #2
    49c4:	d005      	beq.n	49d2 <__libc_init_array+0x36>
    49c6:	00a3      	lsls	r3, r4, #2
    49c8:	58f3      	ldr	r3, [r6, r3]
    49ca:	3401      	adds	r4, #1
    49cc:	4798      	blx	r3
    49ce:	42a5      	cmp	r5, r4
    49d0:	d1f9      	bne.n	49c6 <__libc_init_array+0x2a>
    49d2:	bd70      	pop	{r4, r5, r6, pc}
    49d4:	00006dac 	.word	0x00006dac
    49d8:	00006dac 	.word	0x00006dac
    49dc:	00006dac 	.word	0x00006dac
    49e0:	00006db4 	.word	0x00006db4

000049e4 <memcpy>:
    49e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    49e6:	0005      	movs	r5, r0
    49e8:	2a0f      	cmp	r2, #15
    49ea:	d92f      	bls.n	4a4c <memcpy+0x68>
    49ec:	000b      	movs	r3, r1
    49ee:	4303      	orrs	r3, r0
    49f0:	079b      	lsls	r3, r3, #30
    49f2:	d134      	bne.n	4a5e <memcpy+0x7a>
    49f4:	0016      	movs	r6, r2
    49f6:	000c      	movs	r4, r1
    49f8:	0003      	movs	r3, r0
    49fa:	3e10      	subs	r6, #16
    49fc:	0935      	lsrs	r5, r6, #4
    49fe:	3501      	adds	r5, #1
    4a00:	012d      	lsls	r5, r5, #4
    4a02:	1945      	adds	r5, r0, r5
    4a04:	6827      	ldr	r7, [r4, #0]
    4a06:	601f      	str	r7, [r3, #0]
    4a08:	6867      	ldr	r7, [r4, #4]
    4a0a:	605f      	str	r7, [r3, #4]
    4a0c:	68a7      	ldr	r7, [r4, #8]
    4a0e:	609f      	str	r7, [r3, #8]
    4a10:	68e7      	ldr	r7, [r4, #12]
    4a12:	3410      	adds	r4, #16
    4a14:	60df      	str	r7, [r3, #12]
    4a16:	3310      	adds	r3, #16
    4a18:	429d      	cmp	r5, r3
    4a1a:	d1f3      	bne.n	4a04 <memcpy+0x20>
    4a1c:	230f      	movs	r3, #15
    4a1e:	439e      	bics	r6, r3
    4a20:	3610      	adds	r6, #16
    4a22:	1985      	adds	r5, r0, r6
    4a24:	1989      	adds	r1, r1, r6
    4a26:	4013      	ands	r3, r2
    4a28:	2b03      	cmp	r3, #3
    4a2a:	d91a      	bls.n	4a62 <memcpy+0x7e>
    4a2c:	1f1e      	subs	r6, r3, #4
    4a2e:	2300      	movs	r3, #0
    4a30:	08b4      	lsrs	r4, r6, #2
    4a32:	3401      	adds	r4, #1
    4a34:	00a4      	lsls	r4, r4, #2
    4a36:	58cf      	ldr	r7, [r1, r3]
    4a38:	50ef      	str	r7, [r5, r3]
    4a3a:	3304      	adds	r3, #4
    4a3c:	42a3      	cmp	r3, r4
    4a3e:	d1fa      	bne.n	4a36 <memcpy+0x52>
    4a40:	2403      	movs	r4, #3
    4a42:	43a6      	bics	r6, r4
    4a44:	1d33      	adds	r3, r6, #4
    4a46:	4022      	ands	r2, r4
    4a48:	18c9      	adds	r1, r1, r3
    4a4a:	18ed      	adds	r5, r5, r3
    4a4c:	2a00      	cmp	r2, #0
    4a4e:	d005      	beq.n	4a5c <memcpy+0x78>
    4a50:	2300      	movs	r3, #0
    4a52:	5ccc      	ldrb	r4, [r1, r3]
    4a54:	54ec      	strb	r4, [r5, r3]
    4a56:	3301      	adds	r3, #1
    4a58:	4293      	cmp	r3, r2
    4a5a:	d1fa      	bne.n	4a52 <memcpy+0x6e>
    4a5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a5e:	0005      	movs	r5, r0
    4a60:	e7f6      	b.n	4a50 <memcpy+0x6c>
    4a62:	001a      	movs	r2, r3
    4a64:	e7f2      	b.n	4a4c <memcpy+0x68>
    4a66:	46c0      	nop			; (mov r8, r8)

00004a68 <memset>:
    4a68:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a6a:	0783      	lsls	r3, r0, #30
    4a6c:	d043      	beq.n	4af6 <memset+0x8e>
    4a6e:	1e54      	subs	r4, r2, #1
    4a70:	2a00      	cmp	r2, #0
    4a72:	d03f      	beq.n	4af4 <memset+0x8c>
    4a74:	b2ce      	uxtb	r6, r1
    4a76:	0002      	movs	r2, r0
    4a78:	2503      	movs	r5, #3
    4a7a:	e002      	b.n	4a82 <memset+0x1a>
    4a7c:	001a      	movs	r2, r3
    4a7e:	3c01      	subs	r4, #1
    4a80:	d338      	bcc.n	4af4 <memset+0x8c>
    4a82:	1c53      	adds	r3, r2, #1
    4a84:	7016      	strb	r6, [r2, #0]
    4a86:	422b      	tst	r3, r5
    4a88:	d1f8      	bne.n	4a7c <memset+0x14>
    4a8a:	2c03      	cmp	r4, #3
    4a8c:	d92a      	bls.n	4ae4 <memset+0x7c>
    4a8e:	22ff      	movs	r2, #255	; 0xff
    4a90:	400a      	ands	r2, r1
    4a92:	0215      	lsls	r5, r2, #8
    4a94:	4315      	orrs	r5, r2
    4a96:	042a      	lsls	r2, r5, #16
    4a98:	4315      	orrs	r5, r2
    4a9a:	2c0f      	cmp	r4, #15
    4a9c:	d914      	bls.n	4ac8 <memset+0x60>
    4a9e:	0027      	movs	r7, r4
    4aa0:	001a      	movs	r2, r3
    4aa2:	3f10      	subs	r7, #16
    4aa4:	093e      	lsrs	r6, r7, #4
    4aa6:	3601      	adds	r6, #1
    4aa8:	0136      	lsls	r6, r6, #4
    4aaa:	199e      	adds	r6, r3, r6
    4aac:	6015      	str	r5, [r2, #0]
    4aae:	6055      	str	r5, [r2, #4]
    4ab0:	6095      	str	r5, [r2, #8]
    4ab2:	60d5      	str	r5, [r2, #12]
    4ab4:	3210      	adds	r2, #16
    4ab6:	4296      	cmp	r6, r2
    4ab8:	d1f8      	bne.n	4aac <memset+0x44>
    4aba:	220f      	movs	r2, #15
    4abc:	4397      	bics	r7, r2
    4abe:	3710      	adds	r7, #16
    4ac0:	19db      	adds	r3, r3, r7
    4ac2:	4014      	ands	r4, r2
    4ac4:	2c03      	cmp	r4, #3
    4ac6:	d90d      	bls.n	4ae4 <memset+0x7c>
    4ac8:	001a      	movs	r2, r3
    4aca:	1f27      	subs	r7, r4, #4
    4acc:	08be      	lsrs	r6, r7, #2
    4ace:	3601      	adds	r6, #1
    4ad0:	00b6      	lsls	r6, r6, #2
    4ad2:	199e      	adds	r6, r3, r6
    4ad4:	c220      	stmia	r2!, {r5}
    4ad6:	42b2      	cmp	r2, r6
    4ad8:	d1fc      	bne.n	4ad4 <memset+0x6c>
    4ada:	2203      	movs	r2, #3
    4adc:	4397      	bics	r7, r2
    4ade:	3704      	adds	r7, #4
    4ae0:	19db      	adds	r3, r3, r7
    4ae2:	4014      	ands	r4, r2
    4ae4:	2c00      	cmp	r4, #0
    4ae6:	d005      	beq.n	4af4 <memset+0x8c>
    4ae8:	b2c9      	uxtb	r1, r1
    4aea:	191c      	adds	r4, r3, r4
    4aec:	7019      	strb	r1, [r3, #0]
    4aee:	3301      	adds	r3, #1
    4af0:	429c      	cmp	r4, r3
    4af2:	d1fb      	bne.n	4aec <memset+0x84>
    4af4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4af6:	0014      	movs	r4, r2
    4af8:	0003      	movs	r3, r0
    4afa:	e7c6      	b.n	4a8a <memset+0x22>

00004afc <strlen>:
    4afc:	b510      	push	{r4, lr}
    4afe:	0783      	lsls	r3, r0, #30
    4b00:	d025      	beq.n	4b4e <strlen+0x52>
    4b02:	7803      	ldrb	r3, [r0, #0]
    4b04:	2b00      	cmp	r3, #0
    4b06:	d024      	beq.n	4b52 <strlen+0x56>
    4b08:	0003      	movs	r3, r0
    4b0a:	2103      	movs	r1, #3
    4b0c:	e002      	b.n	4b14 <strlen+0x18>
    4b0e:	781a      	ldrb	r2, [r3, #0]
    4b10:	2a00      	cmp	r2, #0
    4b12:	d01a      	beq.n	4b4a <strlen+0x4e>
    4b14:	3301      	adds	r3, #1
    4b16:	420b      	tst	r3, r1
    4b18:	d1f9      	bne.n	4b0e <strlen+0x12>
    4b1a:	6819      	ldr	r1, [r3, #0]
    4b1c:	4a0e      	ldr	r2, [pc, #56]	; (4b58 <strlen+0x5c>)
    4b1e:	4c0f      	ldr	r4, [pc, #60]	; (4b5c <strlen+0x60>)
    4b20:	188a      	adds	r2, r1, r2
    4b22:	438a      	bics	r2, r1
    4b24:	4222      	tst	r2, r4
    4b26:	d106      	bne.n	4b36 <strlen+0x3a>
    4b28:	3304      	adds	r3, #4
    4b2a:	6819      	ldr	r1, [r3, #0]
    4b2c:	4a0a      	ldr	r2, [pc, #40]	; (4b58 <strlen+0x5c>)
    4b2e:	188a      	adds	r2, r1, r2
    4b30:	438a      	bics	r2, r1
    4b32:	4222      	tst	r2, r4
    4b34:	d0f8      	beq.n	4b28 <strlen+0x2c>
    4b36:	001a      	movs	r2, r3
    4b38:	781b      	ldrb	r3, [r3, #0]
    4b3a:	2b00      	cmp	r3, #0
    4b3c:	d003      	beq.n	4b46 <strlen+0x4a>
    4b3e:	3201      	adds	r2, #1
    4b40:	7811      	ldrb	r1, [r2, #0]
    4b42:	2900      	cmp	r1, #0
    4b44:	d1fb      	bne.n	4b3e <strlen+0x42>
    4b46:	1a10      	subs	r0, r2, r0
    4b48:	bd10      	pop	{r4, pc}
    4b4a:	1a18      	subs	r0, r3, r0
    4b4c:	e7fc      	b.n	4b48 <strlen+0x4c>
    4b4e:	0003      	movs	r3, r0
    4b50:	e7e3      	b.n	4b1a <strlen+0x1e>
    4b52:	2000      	movs	r0, #0
    4b54:	e7f8      	b.n	4b48 <strlen+0x4c>
    4b56:	46c0      	nop			; (mov r8, r8)
    4b58:	fefefeff 	.word	0xfefefeff
    4b5c:	80808080 	.word	0x80808080

00004b60 <strncpy>:
    4b60:	000b      	movs	r3, r1
    4b62:	4303      	orrs	r3, r0
    4b64:	b5f0      	push	{r4, r5, r6, r7, lr}
    4b66:	079b      	lsls	r3, r3, #30
    4b68:	d101      	bne.n	4b6e <strncpy+0xe>
    4b6a:	2a03      	cmp	r2, #3
    4b6c:	d814      	bhi.n	4b98 <strncpy+0x38>
    4b6e:	0006      	movs	r6, r0
    4b70:	2a00      	cmp	r2, #0
    4b72:	d010      	beq.n	4b96 <strncpy+0x36>
    4b74:	780c      	ldrb	r4, [r1, #0]
    4b76:	3a01      	subs	r2, #1
    4b78:	1c73      	adds	r3, r6, #1
    4b7a:	7034      	strb	r4, [r6, #0]
    4b7c:	2c00      	cmp	r4, #0
    4b7e:	d01d      	beq.n	4bbc <strncpy+0x5c>
    4b80:	2401      	movs	r4, #1
    4b82:	e006      	b.n	4b92 <strncpy+0x32>
    4b84:	5d0d      	ldrb	r5, [r1, r4]
    4b86:	3a01      	subs	r2, #1
    4b88:	5535      	strb	r5, [r6, r4]
    4b8a:	3301      	adds	r3, #1
    4b8c:	3401      	adds	r4, #1
    4b8e:	2d00      	cmp	r5, #0
    4b90:	d014      	beq.n	4bbc <strncpy+0x5c>
    4b92:	2a00      	cmp	r2, #0
    4b94:	d1f6      	bne.n	4b84 <strncpy+0x24>
    4b96:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4b98:	0005      	movs	r5, r0
    4b9a:	4f0d      	ldr	r7, [pc, #52]	; (4bd0 <strncpy+0x70>)
    4b9c:	e006      	b.n	4bac <strncpy+0x4c>
    4b9e:	3a04      	subs	r2, #4
    4ba0:	1d2e      	adds	r6, r5, #4
    4ba2:	3104      	adds	r1, #4
    4ba4:	602c      	str	r4, [r5, #0]
    4ba6:	2a03      	cmp	r2, #3
    4ba8:	d9e2      	bls.n	4b70 <strncpy+0x10>
    4baa:	0035      	movs	r5, r6
    4bac:	680c      	ldr	r4, [r1, #0]
    4bae:	4b09      	ldr	r3, [pc, #36]	; (4bd4 <strncpy+0x74>)
    4bb0:	18e3      	adds	r3, r4, r3
    4bb2:	43a3      	bics	r3, r4
    4bb4:	423b      	tst	r3, r7
    4bb6:	d0f2      	beq.n	4b9e <strncpy+0x3e>
    4bb8:	002e      	movs	r6, r5
    4bba:	e7db      	b.n	4b74 <strncpy+0x14>
    4bbc:	189c      	adds	r4, r3, r2
    4bbe:	2100      	movs	r1, #0
    4bc0:	2a00      	cmp	r2, #0
    4bc2:	d0e8      	beq.n	4b96 <strncpy+0x36>
    4bc4:	7019      	strb	r1, [r3, #0]
    4bc6:	3301      	adds	r3, #1
    4bc8:	42a3      	cmp	r3, r4
    4bca:	d1fb      	bne.n	4bc4 <strncpy+0x64>
    4bcc:	e7e3      	b.n	4b96 <strncpy+0x36>
    4bce:	46c0      	nop			; (mov r8, r8)
    4bd0:	80808080 	.word	0x80808080
    4bd4:	fefefeff 	.word	0xfefefeff

00004bd8 <_vsniprintf_r>:
    4bd8:	b530      	push	{r4, r5, lr}
    4bda:	0004      	movs	r4, r0
    4bdc:	b09b      	sub	sp, #108	; 0x6c
    4bde:	0018      	movs	r0, r3
    4be0:	2a00      	cmp	r2, #0
    4be2:	db2e      	blt.n	4c42 <_vsniprintf_r+0x6a>
    4be4:	2382      	movs	r3, #130	; 0x82
    4be6:	466d      	mov	r5, sp
    4be8:	009b      	lsls	r3, r3, #2
    4bea:	81ab      	strh	r3, [r5, #12]
    4bec:	9100      	str	r1, [sp, #0]
    4bee:	9104      	str	r1, [sp, #16]
    4bf0:	2a00      	cmp	r2, #0
    4bf2:	d011      	beq.n	4c18 <_vsniprintf_r+0x40>
    4bf4:	2301      	movs	r3, #1
    4bf6:	3a01      	subs	r2, #1
    4bf8:	425b      	negs	r3, r3
    4bfa:	9202      	str	r2, [sp, #8]
    4bfc:	9205      	str	r2, [sp, #20]
    4bfe:	81eb      	strh	r3, [r5, #14]
    4c00:	0002      	movs	r2, r0
    4c02:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    4c04:	4669      	mov	r1, sp
    4c06:	0020      	movs	r0, r4
    4c08:	f000 fd36 	bl	5678 <_svfiprintf_r>
    4c0c:	1c43      	adds	r3, r0, #1
    4c0e:	db12      	blt.n	4c36 <_vsniprintf_r+0x5e>
    4c10:	2300      	movs	r3, #0
    4c12:	9a00      	ldr	r2, [sp, #0]
    4c14:	7013      	strb	r3, [r2, #0]
    4c16:	e00c      	b.n	4c32 <_vsniprintf_r+0x5a>
    4c18:	2301      	movs	r3, #1
    4c1a:	425b      	negs	r3, r3
    4c1c:	9202      	str	r2, [sp, #8]
    4c1e:	9205      	str	r2, [sp, #20]
    4c20:	81eb      	strh	r3, [r5, #14]
    4c22:	0002      	movs	r2, r0
    4c24:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    4c26:	4669      	mov	r1, sp
    4c28:	0020      	movs	r0, r4
    4c2a:	f000 fd25 	bl	5678 <_svfiprintf_r>
    4c2e:	1c43      	adds	r3, r0, #1
    4c30:	db04      	blt.n	4c3c <_vsniprintf_r+0x64>
    4c32:	b01b      	add	sp, #108	; 0x6c
    4c34:	bd30      	pop	{r4, r5, pc}
    4c36:	238b      	movs	r3, #139	; 0x8b
    4c38:	6023      	str	r3, [r4, #0]
    4c3a:	e7e9      	b.n	4c10 <_vsniprintf_r+0x38>
    4c3c:	238b      	movs	r3, #139	; 0x8b
    4c3e:	6023      	str	r3, [r4, #0]
    4c40:	e7f7      	b.n	4c32 <_vsniprintf_r+0x5a>
    4c42:	238b      	movs	r3, #139	; 0x8b
    4c44:	2001      	movs	r0, #1
    4c46:	6023      	str	r3, [r4, #0]
    4c48:	4240      	negs	r0, r0
    4c4a:	e7f2      	b.n	4c32 <_vsniprintf_r+0x5a>

00004c4c <vsniprintf>:
    4c4c:	b510      	push	{r4, lr}
    4c4e:	0004      	movs	r4, r0
    4c50:	4805      	ldr	r0, [pc, #20]	; (4c68 <vsniprintf+0x1c>)
    4c52:	b082      	sub	sp, #8
    4c54:	6800      	ldr	r0, [r0, #0]
    4c56:	9300      	str	r3, [sp, #0]
    4c58:	0013      	movs	r3, r2
    4c5a:	000a      	movs	r2, r1
    4c5c:	0021      	movs	r1, r4
    4c5e:	f7ff ffbb 	bl	4bd8 <_vsniprintf_r>
    4c62:	b002      	add	sp, #8
    4c64:	bd10      	pop	{r4, pc}
    4c66:	46c0      	nop			; (mov r8, r8)
    4c68:	20000004 	.word	0x20000004

00004c6c <register_fini>:
    4c6c:	4b03      	ldr	r3, [pc, #12]	; (4c7c <register_fini+0x10>)
    4c6e:	b510      	push	{r4, lr}
    4c70:	2b00      	cmp	r3, #0
    4c72:	d002      	beq.n	4c7a <register_fini+0xe>
    4c74:	4802      	ldr	r0, [pc, #8]	; (4c80 <register_fini+0x14>)
    4c76:	f000 f805 	bl	4c84 <atexit>
    4c7a:	bd10      	pop	{r4, pc}
    4c7c:	00000000 	.word	0x00000000
    4c80:	00004c95 	.word	0x00004c95

00004c84 <atexit>:
    4c84:	b510      	push	{r4, lr}
    4c86:	0001      	movs	r1, r0
    4c88:	2300      	movs	r3, #0
    4c8a:	2200      	movs	r2, #0
    4c8c:	2000      	movs	r0, #0
    4c8e:	f001 fa33 	bl	60f8 <__register_exitproc>
    4c92:	bd10      	pop	{r4, pc}

00004c94 <__libc_fini_array>:
    4c94:	b570      	push	{r4, r5, r6, lr}
    4c96:	4b09      	ldr	r3, [pc, #36]	; (4cbc <__libc_fini_array+0x28>)
    4c98:	4c09      	ldr	r4, [pc, #36]	; (4cc0 <__libc_fini_array+0x2c>)
    4c9a:	1ae4      	subs	r4, r4, r3
    4c9c:	10a4      	asrs	r4, r4, #2
    4c9e:	d009      	beq.n	4cb4 <__libc_fini_array+0x20>
    4ca0:	4a08      	ldr	r2, [pc, #32]	; (4cc4 <__libc_fini_array+0x30>)
    4ca2:	18a5      	adds	r5, r4, r2
    4ca4:	00ad      	lsls	r5, r5, #2
    4ca6:	18ed      	adds	r5, r5, r3
    4ca8:	682b      	ldr	r3, [r5, #0]
    4caa:	3c01      	subs	r4, #1
    4cac:	4798      	blx	r3
    4cae:	3d04      	subs	r5, #4
    4cb0:	2c00      	cmp	r4, #0
    4cb2:	d1f9      	bne.n	4ca8 <__libc_fini_array+0x14>
    4cb4:	f002 f87e 	bl	6db4 <_fini>
    4cb8:	bd70      	pop	{r4, r5, r6, pc}
    4cba:	46c0      	nop			; (mov r8, r8)
    4cbc:	00006dc0 	.word	0x00006dc0
    4cc0:	00006dc4 	.word	0x00006dc4
    4cc4:	3fffffff 	.word	0x3fffffff

00004cc8 <_malloc_trim_r>:
    4cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4cca:	000c      	movs	r4, r1
    4ccc:	0006      	movs	r6, r0
    4cce:	f000 fc21 	bl	5514 <__malloc_lock>
    4cd2:	4f20      	ldr	r7, [pc, #128]	; (4d54 <_malloc_trim_r+0x8c>)
    4cd4:	68bb      	ldr	r3, [r7, #8]
    4cd6:	685d      	ldr	r5, [r3, #4]
    4cd8:	2303      	movs	r3, #3
    4cda:	439d      	bics	r5, r3
    4cdc:	4b1e      	ldr	r3, [pc, #120]	; (4d58 <_malloc_trim_r+0x90>)
    4cde:	1b2c      	subs	r4, r5, r4
    4ce0:	469c      	mov	ip, r3
    4ce2:	4464      	add	r4, ip
    4ce4:	0b24      	lsrs	r4, r4, #12
    4ce6:	4b1d      	ldr	r3, [pc, #116]	; (4d5c <_malloc_trim_r+0x94>)
    4ce8:	3c01      	subs	r4, #1
    4cea:	0324      	lsls	r4, r4, #12
    4cec:	429c      	cmp	r4, r3
    4cee:	dd07      	ble.n	4d00 <_malloc_trim_r+0x38>
    4cf0:	2100      	movs	r1, #0
    4cf2:	0030      	movs	r0, r6
    4cf4:	f000 fc1e 	bl	5534 <_sbrk_r>
    4cf8:	68bb      	ldr	r3, [r7, #8]
    4cfa:	195b      	adds	r3, r3, r5
    4cfc:	4298      	cmp	r0, r3
    4cfe:	d004      	beq.n	4d0a <_malloc_trim_r+0x42>
    4d00:	0030      	movs	r0, r6
    4d02:	f000 fc0f 	bl	5524 <__malloc_unlock>
    4d06:	2000      	movs	r0, #0
    4d08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d0a:	4261      	negs	r1, r4
    4d0c:	0030      	movs	r0, r6
    4d0e:	f000 fc11 	bl	5534 <_sbrk_r>
    4d12:	1c43      	adds	r3, r0, #1
    4d14:	d00d      	beq.n	4d32 <_malloc_trim_r+0x6a>
    4d16:	2201      	movs	r2, #1
    4d18:	68bb      	ldr	r3, [r7, #8]
    4d1a:	1b2d      	subs	r5, r5, r4
    4d1c:	4315      	orrs	r5, r2
    4d1e:	605d      	str	r5, [r3, #4]
    4d20:	4b0f      	ldr	r3, [pc, #60]	; (4d60 <_malloc_trim_r+0x98>)
    4d22:	0030      	movs	r0, r6
    4d24:	681a      	ldr	r2, [r3, #0]
    4d26:	1b14      	subs	r4, r2, r4
    4d28:	601c      	str	r4, [r3, #0]
    4d2a:	f000 fbfb 	bl	5524 <__malloc_unlock>
    4d2e:	2001      	movs	r0, #1
    4d30:	e7ea      	b.n	4d08 <_malloc_trim_r+0x40>
    4d32:	2100      	movs	r1, #0
    4d34:	0030      	movs	r0, r6
    4d36:	f000 fbfd 	bl	5534 <_sbrk_r>
    4d3a:	68ba      	ldr	r2, [r7, #8]
    4d3c:	1a83      	subs	r3, r0, r2
    4d3e:	2b0f      	cmp	r3, #15
    4d40:	ddde      	ble.n	4d00 <_malloc_trim_r+0x38>
    4d42:	4908      	ldr	r1, [pc, #32]	; (4d64 <_malloc_trim_r+0x9c>)
    4d44:	6809      	ldr	r1, [r1, #0]
    4d46:	1a40      	subs	r0, r0, r1
    4d48:	4905      	ldr	r1, [pc, #20]	; (4d60 <_malloc_trim_r+0x98>)
    4d4a:	6008      	str	r0, [r1, #0]
    4d4c:	2101      	movs	r1, #1
    4d4e:	430b      	orrs	r3, r1
    4d50:	6053      	str	r3, [r2, #4]
    4d52:	e7d5      	b.n	4d00 <_malloc_trim_r+0x38>
    4d54:	20000434 	.word	0x20000434
    4d58:	00000fef 	.word	0x00000fef
    4d5c:	00000fff 	.word	0x00000fff
    4d60:	2000089c 	.word	0x2000089c
    4d64:	2000083c 	.word	0x2000083c

00004d68 <_free_r>:
    4d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4d6a:	0004      	movs	r4, r0
    4d6c:	1e0d      	subs	r5, r1, #0
    4d6e:	d03c      	beq.n	4dea <_free_r+0x82>
    4d70:	f000 fbd0 	bl	5514 <__malloc_lock>
    4d74:	0029      	movs	r1, r5
    4d76:	3908      	subs	r1, #8
    4d78:	6848      	ldr	r0, [r1, #4]
    4d7a:	2301      	movs	r3, #1
    4d7c:	0005      	movs	r5, r0
    4d7e:	2603      	movs	r6, #3
    4d80:	439d      	bics	r5, r3
    4d82:	194a      	adds	r2, r1, r5
    4d84:	469c      	mov	ip, r3
    4d86:	4f61      	ldr	r7, [pc, #388]	; (4f0c <_free_r+0x1a4>)
    4d88:	6853      	ldr	r3, [r2, #4]
    4d8a:	43b3      	bics	r3, r6
    4d8c:	68be      	ldr	r6, [r7, #8]
    4d8e:	42b2      	cmp	r2, r6
    4d90:	d056      	beq.n	4e40 <_free_r+0xd8>
    4d92:	4666      	mov	r6, ip
    4d94:	6053      	str	r3, [r2, #4]
    4d96:	4206      	tst	r6, r0
    4d98:	d10a      	bne.n	4db0 <_free_r+0x48>
    4d9a:	003e      	movs	r6, r7
    4d9c:	6808      	ldr	r0, [r1, #0]
    4d9e:	3608      	adds	r6, #8
    4da0:	1a09      	subs	r1, r1, r0
    4da2:	182d      	adds	r5, r5, r0
    4da4:	6888      	ldr	r0, [r1, #8]
    4da6:	42b0      	cmp	r0, r6
    4da8:	d065      	beq.n	4e76 <_free_r+0x10e>
    4daa:	68ce      	ldr	r6, [r1, #12]
    4dac:	60c6      	str	r6, [r0, #12]
    4dae:	60b0      	str	r0, [r6, #8]
    4db0:	2001      	movs	r0, #1
    4db2:	18d6      	adds	r6, r2, r3
    4db4:	6876      	ldr	r6, [r6, #4]
    4db6:	4206      	tst	r6, r0
    4db8:	d033      	beq.n	4e22 <_free_r+0xba>
    4dba:	4b55      	ldr	r3, [pc, #340]	; (4f10 <_free_r+0x1a8>)
    4dbc:	4328      	orrs	r0, r5
    4dbe:	6048      	str	r0, [r1, #4]
    4dc0:	514d      	str	r5, [r1, r5]
    4dc2:	429d      	cmp	r5, r3
    4dc4:	d812      	bhi.n	4dec <_free_r+0x84>
    4dc6:	08ed      	lsrs	r5, r5, #3
    4dc8:	3bff      	subs	r3, #255	; 0xff
    4dca:	10aa      	asrs	r2, r5, #2
    4dcc:	3bff      	subs	r3, #255	; 0xff
    4dce:	4093      	lsls	r3, r2
    4dd0:	687a      	ldr	r2, [r7, #4]
    4dd2:	00ed      	lsls	r5, r5, #3
    4dd4:	4313      	orrs	r3, r2
    4dd6:	607b      	str	r3, [r7, #4]
    4dd8:	19ef      	adds	r7, r5, r7
    4dda:	68bb      	ldr	r3, [r7, #8]
    4ddc:	60cf      	str	r7, [r1, #12]
    4dde:	608b      	str	r3, [r1, #8]
    4de0:	60b9      	str	r1, [r7, #8]
    4de2:	60d9      	str	r1, [r3, #12]
    4de4:	0020      	movs	r0, r4
    4de6:	f000 fb9d 	bl	5524 <__malloc_unlock>
    4dea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4dec:	0a68      	lsrs	r0, r5, #9
    4dee:	2804      	cmp	r0, #4
    4df0:	d850      	bhi.n	4e94 <_free_r+0x12c>
    4df2:	09a8      	lsrs	r0, r5, #6
    4df4:	0002      	movs	r2, r0
    4df6:	3039      	adds	r0, #57	; 0x39
    4df8:	3238      	adds	r2, #56	; 0x38
    4dfa:	00c0      	lsls	r0, r0, #3
    4dfc:	1838      	adds	r0, r7, r0
    4dfe:	3808      	subs	r0, #8
    4e00:	6883      	ldr	r3, [r0, #8]
    4e02:	2603      	movs	r6, #3
    4e04:	4298      	cmp	r0, r3
    4e06:	d04c      	beq.n	4ea2 <_free_r+0x13a>
    4e08:	685a      	ldr	r2, [r3, #4]
    4e0a:	43b2      	bics	r2, r6
    4e0c:	4295      	cmp	r5, r2
    4e0e:	d230      	bcs.n	4e72 <_free_r+0x10a>
    4e10:	689b      	ldr	r3, [r3, #8]
    4e12:	4298      	cmp	r0, r3
    4e14:	d1f8      	bne.n	4e08 <_free_r+0xa0>
    4e16:	68c3      	ldr	r3, [r0, #12]
    4e18:	60cb      	str	r3, [r1, #12]
    4e1a:	6088      	str	r0, [r1, #8]
    4e1c:	6099      	str	r1, [r3, #8]
    4e1e:	60c1      	str	r1, [r0, #12]
    4e20:	e7e0      	b.n	4de4 <_free_r+0x7c>
    4e22:	18ed      	adds	r5, r5, r3
    4e24:	4e3b      	ldr	r6, [pc, #236]	; (4f14 <_free_r+0x1ac>)
    4e26:	6893      	ldr	r3, [r2, #8]
    4e28:	42b3      	cmp	r3, r6
    4e2a:	d042      	beq.n	4eb2 <_free_r+0x14a>
    4e2c:	68d2      	ldr	r2, [r2, #12]
    4e2e:	4328      	orrs	r0, r5
    4e30:	60da      	str	r2, [r3, #12]
    4e32:	6093      	str	r3, [r2, #8]
    4e34:	4b36      	ldr	r3, [pc, #216]	; (4f10 <_free_r+0x1a8>)
    4e36:	6048      	str	r0, [r1, #4]
    4e38:	514d      	str	r5, [r1, r5]
    4e3a:	429d      	cmp	r5, r3
    4e3c:	d8d6      	bhi.n	4dec <_free_r+0x84>
    4e3e:	e7c2      	b.n	4dc6 <_free_r+0x5e>
    4e40:	4662      	mov	r2, ip
    4e42:	18eb      	adds	r3, r5, r3
    4e44:	4202      	tst	r2, r0
    4e46:	d106      	bne.n	4e56 <_free_r+0xee>
    4e48:	680a      	ldr	r2, [r1, #0]
    4e4a:	1a89      	subs	r1, r1, r2
    4e4c:	6888      	ldr	r0, [r1, #8]
    4e4e:	189b      	adds	r3, r3, r2
    4e50:	68ca      	ldr	r2, [r1, #12]
    4e52:	60c2      	str	r2, [r0, #12]
    4e54:	6090      	str	r0, [r2, #8]
    4e56:	2201      	movs	r2, #1
    4e58:	431a      	orrs	r2, r3
    4e5a:	604a      	str	r2, [r1, #4]
    4e5c:	4a2e      	ldr	r2, [pc, #184]	; (4f18 <_free_r+0x1b0>)
    4e5e:	60b9      	str	r1, [r7, #8]
    4e60:	6812      	ldr	r2, [r2, #0]
    4e62:	4293      	cmp	r3, r2
    4e64:	d3be      	bcc.n	4de4 <_free_r+0x7c>
    4e66:	4b2d      	ldr	r3, [pc, #180]	; (4f1c <_free_r+0x1b4>)
    4e68:	0020      	movs	r0, r4
    4e6a:	6819      	ldr	r1, [r3, #0]
    4e6c:	f7ff ff2c 	bl	4cc8 <_malloc_trim_r>
    4e70:	e7b8      	b.n	4de4 <_free_r+0x7c>
    4e72:	0018      	movs	r0, r3
    4e74:	e7cf      	b.n	4e16 <_free_r+0xae>
    4e76:	4666      	mov	r6, ip
    4e78:	18d0      	adds	r0, r2, r3
    4e7a:	6840      	ldr	r0, [r0, #4]
    4e7c:	4230      	tst	r0, r6
    4e7e:	d13f      	bne.n	4f00 <_free_r+0x198>
    4e80:	6890      	ldr	r0, [r2, #8]
    4e82:	195d      	adds	r5, r3, r5
    4e84:	68d3      	ldr	r3, [r2, #12]
    4e86:	60c3      	str	r3, [r0, #12]
    4e88:	6098      	str	r0, [r3, #8]
    4e8a:	4663      	mov	r3, ip
    4e8c:	432b      	orrs	r3, r5
    4e8e:	604b      	str	r3, [r1, #4]
    4e90:	514d      	str	r5, [r1, r5]
    4e92:	e7a7      	b.n	4de4 <_free_r+0x7c>
    4e94:	2814      	cmp	r0, #20
    4e96:	d814      	bhi.n	4ec2 <_free_r+0x15a>
    4e98:	0002      	movs	r2, r0
    4e9a:	305c      	adds	r0, #92	; 0x5c
    4e9c:	325b      	adds	r2, #91	; 0x5b
    4e9e:	00c0      	lsls	r0, r0, #3
    4ea0:	e7ac      	b.n	4dfc <_free_r+0x94>
    4ea2:	2301      	movs	r3, #1
    4ea4:	1092      	asrs	r2, r2, #2
    4ea6:	4093      	lsls	r3, r2
    4ea8:	687a      	ldr	r2, [r7, #4]
    4eaa:	4313      	orrs	r3, r2
    4eac:	607b      	str	r3, [r7, #4]
    4eae:	0003      	movs	r3, r0
    4eb0:	e7b2      	b.n	4e18 <_free_r+0xb0>
    4eb2:	4328      	orrs	r0, r5
    4eb4:	60d9      	str	r1, [r3, #12]
    4eb6:	6099      	str	r1, [r3, #8]
    4eb8:	60cb      	str	r3, [r1, #12]
    4eba:	608b      	str	r3, [r1, #8]
    4ebc:	6048      	str	r0, [r1, #4]
    4ebe:	514d      	str	r5, [r1, r5]
    4ec0:	e790      	b.n	4de4 <_free_r+0x7c>
    4ec2:	2854      	cmp	r0, #84	; 0x54
    4ec4:	d805      	bhi.n	4ed2 <_free_r+0x16a>
    4ec6:	0b28      	lsrs	r0, r5, #12
    4ec8:	0002      	movs	r2, r0
    4eca:	306f      	adds	r0, #111	; 0x6f
    4ecc:	326e      	adds	r2, #110	; 0x6e
    4ece:	00c0      	lsls	r0, r0, #3
    4ed0:	e794      	b.n	4dfc <_free_r+0x94>
    4ed2:	22aa      	movs	r2, #170	; 0xaa
    4ed4:	0052      	lsls	r2, r2, #1
    4ed6:	4290      	cmp	r0, r2
    4ed8:	d805      	bhi.n	4ee6 <_free_r+0x17e>
    4eda:	0be8      	lsrs	r0, r5, #15
    4edc:	0002      	movs	r2, r0
    4ede:	3078      	adds	r0, #120	; 0x78
    4ee0:	3277      	adds	r2, #119	; 0x77
    4ee2:	00c0      	lsls	r0, r0, #3
    4ee4:	e78a      	b.n	4dfc <_free_r+0x94>
    4ee6:	4a0e      	ldr	r2, [pc, #56]	; (4f20 <_free_r+0x1b8>)
    4ee8:	4290      	cmp	r0, r2
    4eea:	d805      	bhi.n	4ef8 <_free_r+0x190>
    4eec:	0ca8      	lsrs	r0, r5, #18
    4eee:	0002      	movs	r2, r0
    4ef0:	307d      	adds	r0, #125	; 0x7d
    4ef2:	327c      	adds	r2, #124	; 0x7c
    4ef4:	00c0      	lsls	r0, r0, #3
    4ef6:	e781      	b.n	4dfc <_free_r+0x94>
    4ef8:	20fe      	movs	r0, #254	; 0xfe
    4efa:	227e      	movs	r2, #126	; 0x7e
    4efc:	0080      	lsls	r0, r0, #2
    4efe:	e77d      	b.n	4dfc <_free_r+0x94>
    4f00:	4663      	mov	r3, ip
    4f02:	432b      	orrs	r3, r5
    4f04:	604b      	str	r3, [r1, #4]
    4f06:	6015      	str	r5, [r2, #0]
    4f08:	e76c      	b.n	4de4 <_free_r+0x7c>
    4f0a:	46c0      	nop			; (mov r8, r8)
    4f0c:	20000434 	.word	0x20000434
    4f10:	000001ff 	.word	0x000001ff
    4f14:	2000043c 	.word	0x2000043c
    4f18:	20000840 	.word	0x20000840
    4f1c:	200008cc 	.word	0x200008cc
    4f20:	00000554 	.word	0x00000554

00004f24 <__retarget_lock_acquire_recursive>:
    4f24:	4770      	bx	lr
    4f26:	46c0      	nop			; (mov r8, r8)

00004f28 <__retarget_lock_release_recursive>:
    4f28:	4770      	bx	lr
    4f2a:	46c0      	nop			; (mov r8, r8)

00004f2c <_malloc_r>:
    4f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f2e:	4657      	mov	r7, sl
    4f30:	4645      	mov	r5, r8
    4f32:	46de      	mov	lr, fp
    4f34:	464e      	mov	r6, r9
    4f36:	b5e0      	push	{r5, r6, r7, lr}
    4f38:	000d      	movs	r5, r1
    4f3a:	350b      	adds	r5, #11
    4f3c:	b083      	sub	sp, #12
    4f3e:	0007      	movs	r7, r0
    4f40:	2d16      	cmp	r5, #22
    4f42:	d800      	bhi.n	4f46 <_malloc_r+0x1a>
    4f44:	e09f      	b.n	5086 <_malloc_r+0x15a>
    4f46:	2307      	movs	r3, #7
    4f48:	439d      	bics	r5, r3
    4f4a:	d500      	bpl.n	4f4e <_malloc_r+0x22>
    4f4c:	e0c4      	b.n	50d8 <_malloc_r+0x1ac>
    4f4e:	42a9      	cmp	r1, r5
    4f50:	d900      	bls.n	4f54 <_malloc_r+0x28>
    4f52:	e0c1      	b.n	50d8 <_malloc_r+0x1ac>
    4f54:	f000 fade 	bl	5514 <__malloc_lock>
    4f58:	23f8      	movs	r3, #248	; 0xf8
    4f5a:	33ff      	adds	r3, #255	; 0xff
    4f5c:	429d      	cmp	r5, r3
    4f5e:	d800      	bhi.n	4f62 <_malloc_r+0x36>
    4f60:	e28f      	b.n	5482 <_malloc_r+0x556>
    4f62:	0a68      	lsrs	r0, r5, #9
    4f64:	d100      	bne.n	4f68 <_malloc_r+0x3c>
    4f66:	e0bb      	b.n	50e0 <_malloc_r+0x1b4>
    4f68:	2804      	cmp	r0, #4
    4f6a:	d900      	bls.n	4f6e <_malloc_r+0x42>
    4f6c:	e162      	b.n	5234 <_malloc_r+0x308>
    4f6e:	2338      	movs	r3, #56	; 0x38
    4f70:	4698      	mov	r8, r3
    4f72:	09a8      	lsrs	r0, r5, #6
    4f74:	4480      	add	r8, r0
    4f76:	3039      	adds	r0, #57	; 0x39
    4f78:	00c1      	lsls	r1, r0, #3
    4f7a:	4ed2      	ldr	r6, [pc, #840]	; (52c4 <_malloc_r+0x398>)
    4f7c:	1871      	adds	r1, r6, r1
    4f7e:	3908      	subs	r1, #8
    4f80:	68cc      	ldr	r4, [r1, #12]
    4f82:	42a1      	cmp	r1, r4
    4f84:	d019      	beq.n	4fba <_malloc_r+0x8e>
    4f86:	2303      	movs	r3, #3
    4f88:	6862      	ldr	r2, [r4, #4]
    4f8a:	439a      	bics	r2, r3
    4f8c:	0013      	movs	r3, r2
    4f8e:	1b52      	subs	r2, r2, r5
    4f90:	2a0f      	cmp	r2, #15
    4f92:	dd00      	ble.n	4f96 <_malloc_r+0x6a>
    4f94:	e0aa      	b.n	50ec <_malloc_r+0x1c0>
    4f96:	2a00      	cmp	r2, #0
    4f98:	db00      	blt.n	4f9c <_malloc_r+0x70>
    4f9a:	e088      	b.n	50ae <_malloc_r+0x182>
    4f9c:	2303      	movs	r3, #3
    4f9e:	469c      	mov	ip, r3
    4fa0:	e008      	b.n	4fb4 <_malloc_r+0x88>
    4fa2:	4662      	mov	r2, ip
    4fa4:	6863      	ldr	r3, [r4, #4]
    4fa6:	4393      	bics	r3, r2
    4fa8:	1b5a      	subs	r2, r3, r5
    4faa:	2a0f      	cmp	r2, #15
    4fac:	dd00      	ble.n	4fb0 <_malloc_r+0x84>
    4fae:	e09d      	b.n	50ec <_malloc_r+0x1c0>
    4fb0:	2a00      	cmp	r2, #0
    4fb2:	da7c      	bge.n	50ae <_malloc_r+0x182>
    4fb4:	68e4      	ldr	r4, [r4, #12]
    4fb6:	42a1      	cmp	r1, r4
    4fb8:	d1f3      	bne.n	4fa2 <_malloc_r+0x76>
    4fba:	0032      	movs	r2, r6
    4fbc:	6934      	ldr	r4, [r6, #16]
    4fbe:	3208      	adds	r2, #8
    4fc0:	4294      	cmp	r4, r2
    4fc2:	d100      	bne.n	4fc6 <_malloc_r+0x9a>
    4fc4:	e190      	b.n	52e8 <_malloc_r+0x3bc>
    4fc6:	2303      	movs	r3, #3
    4fc8:	6861      	ldr	r1, [r4, #4]
    4fca:	4399      	bics	r1, r3
    4fcc:	4689      	mov	r9, r1
    4fce:	1b49      	subs	r1, r1, r5
    4fd0:	290f      	cmp	r1, #15
    4fd2:	dd00      	ble.n	4fd6 <_malloc_r+0xaa>
    4fd4:	e162      	b.n	529c <_malloc_r+0x370>
    4fd6:	6172      	str	r2, [r6, #20]
    4fd8:	6132      	str	r2, [r6, #16]
    4fda:	2900      	cmp	r1, #0
    4fdc:	db00      	blt.n	4fe0 <_malloc_r+0xb4>
    4fde:	e087      	b.n	50f0 <_malloc_r+0x1c4>
    4fe0:	4ab9      	ldr	r2, [pc, #740]	; (52c8 <_malloc_r+0x39c>)
    4fe2:	464b      	mov	r3, r9
    4fe4:	4591      	cmp	r9, r2
    4fe6:	d900      	bls.n	4fea <_malloc_r+0xbe>
    4fe8:	e130      	b.n	524c <_malloc_r+0x320>
    4fea:	08db      	lsrs	r3, r3, #3
    4fec:	3aff      	subs	r2, #255	; 0xff
    4fee:	1099      	asrs	r1, r3, #2
    4ff0:	3aff      	subs	r2, #255	; 0xff
    4ff2:	408a      	lsls	r2, r1
    4ff4:	00db      	lsls	r3, r3, #3
    4ff6:	6871      	ldr	r1, [r6, #4]
    4ff8:	199b      	adds	r3, r3, r6
    4ffa:	430a      	orrs	r2, r1
    4ffc:	6899      	ldr	r1, [r3, #8]
    4ffe:	6072      	str	r2, [r6, #4]
    5000:	60e3      	str	r3, [r4, #12]
    5002:	60a1      	str	r1, [r4, #8]
    5004:	609c      	str	r4, [r3, #8]
    5006:	0013      	movs	r3, r2
    5008:	60cc      	str	r4, [r1, #12]
    500a:	2101      	movs	r1, #1
    500c:	1082      	asrs	r2, r0, #2
    500e:	4091      	lsls	r1, r2
    5010:	4299      	cmp	r1, r3
    5012:	d86f      	bhi.n	50f4 <_malloc_r+0x1c8>
    5014:	420b      	tst	r3, r1
    5016:	d105      	bne.n	5024 <_malloc_r+0xf8>
    5018:	2203      	movs	r2, #3
    501a:	4390      	bics	r0, r2
    501c:	0049      	lsls	r1, r1, #1
    501e:	3004      	adds	r0, #4
    5020:	420b      	tst	r3, r1
    5022:	d0fb      	beq.n	501c <_malloc_r+0xf0>
    5024:	2303      	movs	r3, #3
    5026:	4698      	mov	r8, r3
    5028:	00c3      	lsls	r3, r0, #3
    502a:	4699      	mov	r9, r3
    502c:	44b1      	add	r9, r6
    502e:	46cc      	mov	ip, r9
    5030:	4682      	mov	sl, r0
    5032:	4663      	mov	r3, ip
    5034:	68dc      	ldr	r4, [r3, #12]
    5036:	45a4      	cmp	ip, r4
    5038:	d107      	bne.n	504a <_malloc_r+0x11e>
    503a:	e157      	b.n	52ec <_malloc_r+0x3c0>
    503c:	2a00      	cmp	r2, #0
    503e:	db00      	blt.n	5042 <_malloc_r+0x116>
    5040:	e166      	b.n	5310 <_malloc_r+0x3e4>
    5042:	68e4      	ldr	r4, [r4, #12]
    5044:	45a4      	cmp	ip, r4
    5046:	d100      	bne.n	504a <_malloc_r+0x11e>
    5048:	e150      	b.n	52ec <_malloc_r+0x3c0>
    504a:	4642      	mov	r2, r8
    504c:	6863      	ldr	r3, [r4, #4]
    504e:	4393      	bics	r3, r2
    5050:	1b5a      	subs	r2, r3, r5
    5052:	2a0f      	cmp	r2, #15
    5054:	ddf2      	ble.n	503c <_malloc_r+0x110>
    5056:	2001      	movs	r0, #1
    5058:	4680      	mov	r8, r0
    505a:	1961      	adds	r1, r4, r5
    505c:	4305      	orrs	r5, r0
    505e:	6065      	str	r5, [r4, #4]
    5060:	68a0      	ldr	r0, [r4, #8]
    5062:	68e5      	ldr	r5, [r4, #12]
    5064:	3608      	adds	r6, #8
    5066:	60c5      	str	r5, [r0, #12]
    5068:	60a8      	str	r0, [r5, #8]
    506a:	4640      	mov	r0, r8
    506c:	60f1      	str	r1, [r6, #12]
    506e:	60b1      	str	r1, [r6, #8]
    5070:	4310      	orrs	r0, r2
    5072:	6048      	str	r0, [r1, #4]
    5074:	60ce      	str	r6, [r1, #12]
    5076:	608e      	str	r6, [r1, #8]
    5078:	0038      	movs	r0, r7
    507a:	50e2      	str	r2, [r4, r3]
    507c:	f000 fa52 	bl	5524 <__malloc_unlock>
    5080:	0020      	movs	r0, r4
    5082:	3008      	adds	r0, #8
    5084:	e021      	b.n	50ca <_malloc_r+0x19e>
    5086:	2910      	cmp	r1, #16
    5088:	d826      	bhi.n	50d8 <_malloc_r+0x1ac>
    508a:	0038      	movs	r0, r7
    508c:	f000 fa42 	bl	5514 <__malloc_lock>
    5090:	2510      	movs	r5, #16
    5092:	2318      	movs	r3, #24
    5094:	2002      	movs	r0, #2
    5096:	4e8b      	ldr	r6, [pc, #556]	; (52c4 <_malloc_r+0x398>)
    5098:	18f3      	adds	r3, r6, r3
    509a:	001a      	movs	r2, r3
    509c:	685c      	ldr	r4, [r3, #4]
    509e:	3a08      	subs	r2, #8
    50a0:	4294      	cmp	r4, r2
    50a2:	d100      	bne.n	50a6 <_malloc_r+0x17a>
    50a4:	e12e      	b.n	5304 <_malloc_r+0x3d8>
    50a6:	2303      	movs	r3, #3
    50a8:	6862      	ldr	r2, [r4, #4]
    50aa:	439a      	bics	r2, r3
    50ac:	0013      	movs	r3, r2
    50ae:	68e2      	ldr	r2, [r4, #12]
    50b0:	68a1      	ldr	r1, [r4, #8]
    50b2:	60ca      	str	r2, [r1, #12]
    50b4:	6091      	str	r1, [r2, #8]
    50b6:	2201      	movs	r2, #1
    50b8:	18e3      	adds	r3, r4, r3
    50ba:	6859      	ldr	r1, [r3, #4]
    50bc:	0038      	movs	r0, r7
    50be:	430a      	orrs	r2, r1
    50c0:	605a      	str	r2, [r3, #4]
    50c2:	f000 fa2f 	bl	5524 <__malloc_unlock>
    50c6:	0020      	movs	r0, r4
    50c8:	3008      	adds	r0, #8
    50ca:	b003      	add	sp, #12
    50cc:	bc3c      	pop	{r2, r3, r4, r5}
    50ce:	4690      	mov	r8, r2
    50d0:	4699      	mov	r9, r3
    50d2:	46a2      	mov	sl, r4
    50d4:	46ab      	mov	fp, r5
    50d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    50d8:	230c      	movs	r3, #12
    50da:	2000      	movs	r0, #0
    50dc:	603b      	str	r3, [r7, #0]
    50de:	e7f4      	b.n	50ca <_malloc_r+0x19e>
    50e0:	2180      	movs	r1, #128	; 0x80
    50e2:	233f      	movs	r3, #63	; 0x3f
    50e4:	2040      	movs	r0, #64	; 0x40
    50e6:	0089      	lsls	r1, r1, #2
    50e8:	4698      	mov	r8, r3
    50ea:	e746      	b.n	4f7a <_malloc_r+0x4e>
    50ec:	4640      	mov	r0, r8
    50ee:	e764      	b.n	4fba <_malloc_r+0x8e>
    50f0:	464b      	mov	r3, r9
    50f2:	e7e0      	b.n	50b6 <_malloc_r+0x18a>
    50f4:	2303      	movs	r3, #3
    50f6:	68b4      	ldr	r4, [r6, #8]
    50f8:	6862      	ldr	r2, [r4, #4]
    50fa:	439a      	bics	r2, r3
    50fc:	4690      	mov	r8, r2
    50fe:	42aa      	cmp	r2, r5
    5100:	d303      	bcc.n	510a <_malloc_r+0x1de>
    5102:	1b53      	subs	r3, r2, r5
    5104:	2b0f      	cmp	r3, #15
    5106:	dd00      	ble.n	510a <_malloc_r+0x1de>
    5108:	e086      	b.n	5218 <_malloc_r+0x2ec>
    510a:	0023      	movs	r3, r4
    510c:	4443      	add	r3, r8
    510e:	4a6f      	ldr	r2, [pc, #444]	; (52cc <_malloc_r+0x3a0>)
    5110:	9301      	str	r3, [sp, #4]
    5112:	4b6f      	ldr	r3, [pc, #444]	; (52d0 <_malloc_r+0x3a4>)
    5114:	4693      	mov	fp, r2
    5116:	681b      	ldr	r3, [r3, #0]
    5118:	6812      	ldr	r2, [r2, #0]
    511a:	18eb      	adds	r3, r5, r3
    511c:	3201      	adds	r2, #1
    511e:	d100      	bne.n	5122 <_malloc_r+0x1f6>
    5120:	e168      	b.n	53f4 <_malloc_r+0x4c8>
    5122:	4a6c      	ldr	r2, [pc, #432]	; (52d4 <_malloc_r+0x3a8>)
    5124:	4694      	mov	ip, r2
    5126:	4463      	add	r3, ip
    5128:	0b1b      	lsrs	r3, r3, #12
    512a:	031b      	lsls	r3, r3, #12
    512c:	9300      	str	r3, [sp, #0]
    512e:	9900      	ldr	r1, [sp, #0]
    5130:	0038      	movs	r0, r7
    5132:	f000 f9ff 	bl	5534 <_sbrk_r>
    5136:	0003      	movs	r3, r0
    5138:	4681      	mov	r9, r0
    513a:	3301      	adds	r3, #1
    513c:	d061      	beq.n	5202 <_malloc_r+0x2d6>
    513e:	9b01      	ldr	r3, [sp, #4]
    5140:	4283      	cmp	r3, r0
    5142:	d900      	bls.n	5146 <_malloc_r+0x21a>
    5144:	e0ff      	b.n	5346 <_malloc_r+0x41a>
    5146:	4b64      	ldr	r3, [pc, #400]	; (52d8 <_malloc_r+0x3ac>)
    5148:	9a00      	ldr	r2, [sp, #0]
    514a:	469a      	mov	sl, r3
    514c:	681b      	ldr	r3, [r3, #0]
    514e:	469c      	mov	ip, r3
    5150:	4653      	mov	r3, sl
    5152:	4462      	add	r2, ip
    5154:	601a      	str	r2, [r3, #0]
    5156:	9b01      	ldr	r3, [sp, #4]
    5158:	0011      	movs	r1, r2
    515a:	4283      	cmp	r3, r0
    515c:	d100      	bne.n	5160 <_malloc_r+0x234>
    515e:	e155      	b.n	540c <_malloc_r+0x4e0>
    5160:	465b      	mov	r3, fp
    5162:	681b      	ldr	r3, [r3, #0]
    5164:	3301      	adds	r3, #1
    5166:	d100      	bne.n	516a <_malloc_r+0x23e>
    5168:	e16c      	b.n	5444 <_malloc_r+0x518>
    516a:	464b      	mov	r3, r9
    516c:	9a01      	ldr	r2, [sp, #4]
    516e:	1a9b      	subs	r3, r3, r2
    5170:	1859      	adds	r1, r3, r1
    5172:	4653      	mov	r3, sl
    5174:	6019      	str	r1, [r3, #0]
    5176:	2307      	movs	r3, #7
    5178:	464a      	mov	r2, r9
    517a:	4013      	ands	r3, r2
    517c:	d100      	bne.n	5180 <_malloc_r+0x254>
    517e:	e124      	b.n	53ca <_malloc_r+0x49e>
    5180:	2108      	movs	r1, #8
    5182:	4689      	mov	r9, r1
    5184:	4955      	ldr	r1, [pc, #340]	; (52dc <_malloc_r+0x3b0>)
    5186:	1ad2      	subs	r2, r2, r3
    5188:	4491      	add	r9, r2
    518a:	1acb      	subs	r3, r1, r3
    518c:	9a00      	ldr	r2, [sp, #0]
    518e:	0038      	movs	r0, r7
    5190:	444a      	add	r2, r9
    5192:	0511      	lsls	r1, r2, #20
    5194:	0d09      	lsrs	r1, r1, #20
    5196:	1a5b      	subs	r3, r3, r1
    5198:	0019      	movs	r1, r3
    519a:	469b      	mov	fp, r3
    519c:	f000 f9ca 	bl	5534 <_sbrk_r>
    51a0:	1c43      	adds	r3, r0, #1
    51a2:	d100      	bne.n	51a6 <_malloc_r+0x27a>
    51a4:	e142      	b.n	542c <_malloc_r+0x500>
    51a6:	464b      	mov	r3, r9
    51a8:	1ac0      	subs	r0, r0, r3
    51aa:	2301      	movs	r3, #1
    51ac:	4458      	add	r0, fp
    51ae:	4318      	orrs	r0, r3
    51b0:	4653      	mov	r3, sl
    51b2:	681b      	ldr	r3, [r3, #0]
    51b4:	445b      	add	r3, fp
    51b6:	0019      	movs	r1, r3
    51b8:	4653      	mov	r3, sl
    51ba:	6019      	str	r1, [r3, #0]
    51bc:	464b      	mov	r3, r9
    51be:	60b3      	str	r3, [r6, #8]
    51c0:	6058      	str	r0, [r3, #4]
    51c2:	42b4      	cmp	r4, r6
    51c4:	d013      	beq.n	51ee <_malloc_r+0x2c2>
    51c6:	4643      	mov	r3, r8
    51c8:	2b0f      	cmp	r3, #15
    51ca:	d800      	bhi.n	51ce <_malloc_r+0x2a2>
    51cc:	e0e8      	b.n	53a0 <_malloc_r+0x474>
    51ce:	4643      	mov	r3, r8
    51d0:	2207      	movs	r2, #7
    51d2:	6860      	ldr	r0, [r4, #4]
    51d4:	3b0c      	subs	r3, #12
    51d6:	4393      	bics	r3, r2
    51d8:	3a06      	subs	r2, #6
    51da:	4002      	ands	r2, r0
    51dc:	2005      	movs	r0, #5
    51de:	431a      	orrs	r2, r3
    51e0:	6062      	str	r2, [r4, #4]
    51e2:	18e2      	adds	r2, r4, r3
    51e4:	6050      	str	r0, [r2, #4]
    51e6:	6090      	str	r0, [r2, #8]
    51e8:	2b0f      	cmp	r3, #15
    51ea:	d900      	bls.n	51ee <_malloc_r+0x2c2>
    51ec:	e122      	b.n	5434 <_malloc_r+0x508>
    51ee:	4b3c      	ldr	r3, [pc, #240]	; (52e0 <_malloc_r+0x3b4>)
    51f0:	681a      	ldr	r2, [r3, #0]
    51f2:	4291      	cmp	r1, r2
    51f4:	d900      	bls.n	51f8 <_malloc_r+0x2cc>
    51f6:	6019      	str	r1, [r3, #0]
    51f8:	4b3a      	ldr	r3, [pc, #232]	; (52e4 <_malloc_r+0x3b8>)
    51fa:	681a      	ldr	r2, [r3, #0]
    51fc:	4291      	cmp	r1, r2
    51fe:	d900      	bls.n	5202 <_malloc_r+0x2d6>
    5200:	6019      	str	r1, [r3, #0]
    5202:	2303      	movs	r3, #3
    5204:	68b4      	ldr	r4, [r6, #8]
    5206:	6862      	ldr	r2, [r4, #4]
    5208:	439a      	bics	r2, r3
    520a:	1b53      	subs	r3, r2, r5
    520c:	4295      	cmp	r5, r2
    520e:	d900      	bls.n	5212 <_malloc_r+0x2e6>
    5210:	e0c9      	b.n	53a6 <_malloc_r+0x47a>
    5212:	2b0f      	cmp	r3, #15
    5214:	dc00      	bgt.n	5218 <_malloc_r+0x2ec>
    5216:	e0c6      	b.n	53a6 <_malloc_r+0x47a>
    5218:	2201      	movs	r2, #1
    521a:	0029      	movs	r1, r5
    521c:	4313      	orrs	r3, r2
    521e:	4311      	orrs	r1, r2
    5220:	1965      	adds	r5, r4, r5
    5222:	6061      	str	r1, [r4, #4]
    5224:	0038      	movs	r0, r7
    5226:	60b5      	str	r5, [r6, #8]
    5228:	606b      	str	r3, [r5, #4]
    522a:	f000 f97b 	bl	5524 <__malloc_unlock>
    522e:	0020      	movs	r0, r4
    5230:	3008      	adds	r0, #8
    5232:	e74a      	b.n	50ca <_malloc_r+0x19e>
    5234:	2814      	cmp	r0, #20
    5236:	d97a      	bls.n	532e <_malloc_r+0x402>
    5238:	2854      	cmp	r0, #84	; 0x54
    523a:	d900      	bls.n	523e <_malloc_r+0x312>
    523c:	e0ba      	b.n	53b4 <_malloc_r+0x488>
    523e:	236e      	movs	r3, #110	; 0x6e
    5240:	4698      	mov	r8, r3
    5242:	0b28      	lsrs	r0, r5, #12
    5244:	4480      	add	r8, r0
    5246:	306f      	adds	r0, #111	; 0x6f
    5248:	00c1      	lsls	r1, r0, #3
    524a:	e696      	b.n	4f7a <_malloc_r+0x4e>
    524c:	0a5a      	lsrs	r2, r3, #9
    524e:	2a04      	cmp	r2, #4
    5250:	d973      	bls.n	533a <_malloc_r+0x40e>
    5252:	2a14      	cmp	r2, #20
    5254:	d900      	bls.n	5258 <_malloc_r+0x32c>
    5256:	e0d0      	b.n	53fa <_malloc_r+0x4ce>
    5258:	0011      	movs	r1, r2
    525a:	325c      	adds	r2, #92	; 0x5c
    525c:	315b      	adds	r1, #91	; 0x5b
    525e:	00d2      	lsls	r2, r2, #3
    5260:	2308      	movs	r3, #8
    5262:	425b      	negs	r3, r3
    5264:	469c      	mov	ip, r3
    5266:	18b2      	adds	r2, r6, r2
    5268:	4494      	add	ip, r2
    526a:	4663      	mov	r3, ip
    526c:	689a      	ldr	r2, [r3, #8]
    526e:	2303      	movs	r3, #3
    5270:	4698      	mov	r8, r3
    5272:	4594      	cmp	ip, r2
    5274:	d100      	bne.n	5278 <_malloc_r+0x34c>
    5276:	e0ab      	b.n	53d0 <_malloc_r+0x4a4>
    5278:	4643      	mov	r3, r8
    527a:	6851      	ldr	r1, [r2, #4]
    527c:	4399      	bics	r1, r3
    527e:	4589      	cmp	r9, r1
    5280:	d300      	bcc.n	5284 <_malloc_r+0x358>
    5282:	e095      	b.n	53b0 <_malloc_r+0x484>
    5284:	6892      	ldr	r2, [r2, #8]
    5286:	4594      	cmp	ip, r2
    5288:	d1f6      	bne.n	5278 <_malloc_r+0x34c>
    528a:	4663      	mov	r3, ip
    528c:	68da      	ldr	r2, [r3, #12]
    528e:	6873      	ldr	r3, [r6, #4]
    5290:	4661      	mov	r1, ip
    5292:	60e2      	str	r2, [r4, #12]
    5294:	60a1      	str	r1, [r4, #8]
    5296:	6094      	str	r4, [r2, #8]
    5298:	60cc      	str	r4, [r1, #12]
    529a:	e6b6      	b.n	500a <_malloc_r+0xde>
    529c:	2301      	movs	r3, #1
    529e:	1960      	adds	r0, r4, r5
    52a0:	431d      	orrs	r5, r3
    52a2:	6065      	str	r5, [r4, #4]
    52a4:	6170      	str	r0, [r6, #20]
    52a6:	6130      	str	r0, [r6, #16]
    52a8:	60c2      	str	r2, [r0, #12]
    52aa:	6082      	str	r2, [r0, #8]
    52ac:	001a      	movs	r2, r3
    52ae:	464b      	mov	r3, r9
    52b0:	430a      	orrs	r2, r1
    52b2:	6042      	str	r2, [r0, #4]
    52b4:	0038      	movs	r0, r7
    52b6:	50e1      	str	r1, [r4, r3]
    52b8:	f000 f934 	bl	5524 <__malloc_unlock>
    52bc:	0020      	movs	r0, r4
    52be:	3008      	adds	r0, #8
    52c0:	e703      	b.n	50ca <_malloc_r+0x19e>
    52c2:	46c0      	nop			; (mov r8, r8)
    52c4:	20000434 	.word	0x20000434
    52c8:	000001ff 	.word	0x000001ff
    52cc:	2000083c 	.word	0x2000083c
    52d0:	200008cc 	.word	0x200008cc
    52d4:	0000100f 	.word	0x0000100f
    52d8:	2000089c 	.word	0x2000089c
    52dc:	00001008 	.word	0x00001008
    52e0:	200008c4 	.word	0x200008c4
    52e4:	200008c8 	.word	0x200008c8
    52e8:	6873      	ldr	r3, [r6, #4]
    52ea:	e68e      	b.n	500a <_malloc_r+0xde>
    52ec:	2308      	movs	r3, #8
    52ee:	469b      	mov	fp, r3
    52f0:	3b07      	subs	r3, #7
    52f2:	44dc      	add	ip, fp
    52f4:	469b      	mov	fp, r3
    52f6:	44da      	add	sl, fp
    52f8:	4643      	mov	r3, r8
    52fa:	4652      	mov	r2, sl
    52fc:	4213      	tst	r3, r2
    52fe:	d000      	beq.n	5302 <_malloc_r+0x3d6>
    5300:	e697      	b.n	5032 <_malloc_r+0x106>
    5302:	e037      	b.n	5374 <_malloc_r+0x448>
    5304:	68dc      	ldr	r4, [r3, #12]
    5306:	3002      	adds	r0, #2
    5308:	42a3      	cmp	r3, r4
    530a:	d100      	bne.n	530e <_malloc_r+0x3e2>
    530c:	e655      	b.n	4fba <_malloc_r+0x8e>
    530e:	e6ca      	b.n	50a6 <_malloc_r+0x17a>
    5310:	2201      	movs	r2, #1
    5312:	18e3      	adds	r3, r4, r3
    5314:	6859      	ldr	r1, [r3, #4]
    5316:	0038      	movs	r0, r7
    5318:	430a      	orrs	r2, r1
    531a:	605a      	str	r2, [r3, #4]
    531c:	68e3      	ldr	r3, [r4, #12]
    531e:	68a2      	ldr	r2, [r4, #8]
    5320:	60d3      	str	r3, [r2, #12]
    5322:	609a      	str	r2, [r3, #8]
    5324:	f000 f8fe 	bl	5524 <__malloc_unlock>
    5328:	0020      	movs	r0, r4
    532a:	3008      	adds	r0, #8
    532c:	e6cd      	b.n	50ca <_malloc_r+0x19e>
    532e:	235b      	movs	r3, #91	; 0x5b
    5330:	4698      	mov	r8, r3
    5332:	4480      	add	r8, r0
    5334:	305c      	adds	r0, #92	; 0x5c
    5336:	00c1      	lsls	r1, r0, #3
    5338:	e61f      	b.n	4f7a <_malloc_r+0x4e>
    533a:	099a      	lsrs	r2, r3, #6
    533c:	0011      	movs	r1, r2
    533e:	3239      	adds	r2, #57	; 0x39
    5340:	3138      	adds	r1, #56	; 0x38
    5342:	00d2      	lsls	r2, r2, #3
    5344:	e78c      	b.n	5260 <_malloc_r+0x334>
    5346:	42b4      	cmp	r4, r6
    5348:	d000      	beq.n	534c <_malloc_r+0x420>
    534a:	e75a      	b.n	5202 <_malloc_r+0x2d6>
    534c:	4b4f      	ldr	r3, [pc, #316]	; (548c <_malloc_r+0x560>)
    534e:	9a00      	ldr	r2, [sp, #0]
    5350:	469a      	mov	sl, r3
    5352:	681b      	ldr	r3, [r3, #0]
    5354:	469c      	mov	ip, r3
    5356:	4653      	mov	r3, sl
    5358:	4462      	add	r2, ip
    535a:	0011      	movs	r1, r2
    535c:	601a      	str	r2, [r3, #0]
    535e:	e6ff      	b.n	5160 <_malloc_r+0x234>
    5360:	2308      	movs	r3, #8
    5362:	425b      	negs	r3, r3
    5364:	469c      	mov	ip, r3
    5366:	44e1      	add	r9, ip
    5368:	464b      	mov	r3, r9
    536a:	689b      	ldr	r3, [r3, #8]
    536c:	3801      	subs	r0, #1
    536e:	4599      	cmp	r9, r3
    5370:	d000      	beq.n	5374 <_malloc_r+0x448>
    5372:	e084      	b.n	547e <_malloc_r+0x552>
    5374:	4643      	mov	r3, r8
    5376:	4203      	tst	r3, r0
    5378:	d1f2      	bne.n	5360 <_malloc_r+0x434>
    537a:	6873      	ldr	r3, [r6, #4]
    537c:	438b      	bics	r3, r1
    537e:	6073      	str	r3, [r6, #4]
    5380:	0049      	lsls	r1, r1, #1
    5382:	4299      	cmp	r1, r3
    5384:	d900      	bls.n	5388 <_malloc_r+0x45c>
    5386:	e6b5      	b.n	50f4 <_malloc_r+0x1c8>
    5388:	2900      	cmp	r1, #0
    538a:	d100      	bne.n	538e <_malloc_r+0x462>
    538c:	e6b2      	b.n	50f4 <_malloc_r+0x1c8>
    538e:	4650      	mov	r0, sl
    5390:	420b      	tst	r3, r1
    5392:	d000      	beq.n	5396 <_malloc_r+0x46a>
    5394:	e648      	b.n	5028 <_malloc_r+0xfc>
    5396:	0049      	lsls	r1, r1, #1
    5398:	3004      	adds	r0, #4
    539a:	420b      	tst	r3, r1
    539c:	d0fb      	beq.n	5396 <_malloc_r+0x46a>
    539e:	e643      	b.n	5028 <_malloc_r+0xfc>
    53a0:	2301      	movs	r3, #1
    53a2:	464a      	mov	r2, r9
    53a4:	6053      	str	r3, [r2, #4]
    53a6:	0038      	movs	r0, r7
    53a8:	f000 f8bc 	bl	5524 <__malloc_unlock>
    53ac:	2000      	movs	r0, #0
    53ae:	e68c      	b.n	50ca <_malloc_r+0x19e>
    53b0:	4694      	mov	ip, r2
    53b2:	e76a      	b.n	528a <_malloc_r+0x35e>
    53b4:	23aa      	movs	r3, #170	; 0xaa
    53b6:	005b      	lsls	r3, r3, #1
    53b8:	4298      	cmp	r0, r3
    53ba:	d811      	bhi.n	53e0 <_malloc_r+0x4b4>
    53bc:	3bdd      	subs	r3, #221	; 0xdd
    53be:	4698      	mov	r8, r3
    53c0:	0be8      	lsrs	r0, r5, #15
    53c2:	4480      	add	r8, r0
    53c4:	3078      	adds	r0, #120	; 0x78
    53c6:	00c1      	lsls	r1, r0, #3
    53c8:	e5d7      	b.n	4f7a <_malloc_r+0x4e>
    53ca:	2380      	movs	r3, #128	; 0x80
    53cc:	015b      	lsls	r3, r3, #5
    53ce:	e6dd      	b.n	518c <_malloc_r+0x260>
    53d0:	1089      	asrs	r1, r1, #2
    53d2:	3b02      	subs	r3, #2
    53d4:	408b      	lsls	r3, r1
    53d6:	6872      	ldr	r2, [r6, #4]
    53d8:	4313      	orrs	r3, r2
    53da:	6073      	str	r3, [r6, #4]
    53dc:	4662      	mov	r2, ip
    53de:	e757      	b.n	5290 <_malloc_r+0x364>
    53e0:	4b2b      	ldr	r3, [pc, #172]	; (5490 <_malloc_r+0x564>)
    53e2:	4298      	cmp	r0, r3
    53e4:	d81c      	bhi.n	5420 <_malloc_r+0x4f4>
    53e6:	237c      	movs	r3, #124	; 0x7c
    53e8:	4698      	mov	r8, r3
    53ea:	0ca8      	lsrs	r0, r5, #18
    53ec:	4480      	add	r8, r0
    53ee:	307d      	adds	r0, #125	; 0x7d
    53f0:	00c1      	lsls	r1, r0, #3
    53f2:	e5c2      	b.n	4f7a <_malloc_r+0x4e>
    53f4:	3310      	adds	r3, #16
    53f6:	9300      	str	r3, [sp, #0]
    53f8:	e699      	b.n	512e <_malloc_r+0x202>
    53fa:	2a54      	cmp	r2, #84	; 0x54
    53fc:	d826      	bhi.n	544c <_malloc_r+0x520>
    53fe:	464b      	mov	r3, r9
    5400:	0b1a      	lsrs	r2, r3, #12
    5402:	0011      	movs	r1, r2
    5404:	326f      	adds	r2, #111	; 0x6f
    5406:	316e      	adds	r1, #110	; 0x6e
    5408:	00d2      	lsls	r2, r2, #3
    540a:	e729      	b.n	5260 <_malloc_r+0x334>
    540c:	051b      	lsls	r3, r3, #20
    540e:	d000      	beq.n	5412 <_malloc_r+0x4e6>
    5410:	e6a6      	b.n	5160 <_malloc_r+0x234>
    5412:	2001      	movs	r0, #1
    5414:	9b00      	ldr	r3, [sp, #0]
    5416:	68b2      	ldr	r2, [r6, #8]
    5418:	4443      	add	r3, r8
    541a:	4303      	orrs	r3, r0
    541c:	6053      	str	r3, [r2, #4]
    541e:	e6e6      	b.n	51ee <_malloc_r+0x2c2>
    5420:	21fe      	movs	r1, #254	; 0xfe
    5422:	237e      	movs	r3, #126	; 0x7e
    5424:	207f      	movs	r0, #127	; 0x7f
    5426:	0089      	lsls	r1, r1, #2
    5428:	4698      	mov	r8, r3
    542a:	e5a6      	b.n	4f7a <_malloc_r+0x4e>
    542c:	2300      	movs	r3, #0
    542e:	2001      	movs	r0, #1
    5430:	469b      	mov	fp, r3
    5432:	e6bd      	b.n	51b0 <_malloc_r+0x284>
    5434:	0021      	movs	r1, r4
    5436:	0038      	movs	r0, r7
    5438:	3108      	adds	r1, #8
    543a:	f7ff fc95 	bl	4d68 <_free_r>
    543e:	4653      	mov	r3, sl
    5440:	6819      	ldr	r1, [r3, #0]
    5442:	e6d4      	b.n	51ee <_malloc_r+0x2c2>
    5444:	465b      	mov	r3, fp
    5446:	464a      	mov	r2, r9
    5448:	601a      	str	r2, [r3, #0]
    544a:	e694      	b.n	5176 <_malloc_r+0x24a>
    544c:	21aa      	movs	r1, #170	; 0xaa
    544e:	0049      	lsls	r1, r1, #1
    5450:	428a      	cmp	r2, r1
    5452:	d806      	bhi.n	5462 <_malloc_r+0x536>
    5454:	464b      	mov	r3, r9
    5456:	0bda      	lsrs	r2, r3, #15
    5458:	0011      	movs	r1, r2
    545a:	3278      	adds	r2, #120	; 0x78
    545c:	3177      	adds	r1, #119	; 0x77
    545e:	00d2      	lsls	r2, r2, #3
    5460:	e6fe      	b.n	5260 <_malloc_r+0x334>
    5462:	490b      	ldr	r1, [pc, #44]	; (5490 <_malloc_r+0x564>)
    5464:	428a      	cmp	r2, r1
    5466:	d806      	bhi.n	5476 <_malloc_r+0x54a>
    5468:	464b      	mov	r3, r9
    546a:	0c9a      	lsrs	r2, r3, #18
    546c:	0011      	movs	r1, r2
    546e:	327d      	adds	r2, #125	; 0x7d
    5470:	317c      	adds	r1, #124	; 0x7c
    5472:	00d2      	lsls	r2, r2, #3
    5474:	e6f4      	b.n	5260 <_malloc_r+0x334>
    5476:	22fe      	movs	r2, #254	; 0xfe
    5478:	217e      	movs	r1, #126	; 0x7e
    547a:	0092      	lsls	r2, r2, #2
    547c:	e6f0      	b.n	5260 <_malloc_r+0x334>
    547e:	6873      	ldr	r3, [r6, #4]
    5480:	e77e      	b.n	5380 <_malloc_r+0x454>
    5482:	002b      	movs	r3, r5
    5484:	08e8      	lsrs	r0, r5, #3
    5486:	3308      	adds	r3, #8
    5488:	e605      	b.n	5096 <_malloc_r+0x16a>
    548a:	46c0      	nop			; (mov r8, r8)
    548c:	2000089c 	.word	0x2000089c
    5490:	00000554 	.word	0x00000554

00005494 <memchr>:
    5494:	b570      	push	{r4, r5, r6, lr}
    5496:	b2cd      	uxtb	r5, r1
    5498:	0783      	lsls	r3, r0, #30
    549a:	d034      	beq.n	5506 <memchr+0x72>
    549c:	1e54      	subs	r4, r2, #1
    549e:	2a00      	cmp	r2, #0
    54a0:	d01b      	beq.n	54da <memchr+0x46>
    54a2:	7803      	ldrb	r3, [r0, #0]
    54a4:	42ab      	cmp	r3, r5
    54a6:	d019      	beq.n	54dc <memchr+0x48>
    54a8:	2203      	movs	r2, #3
    54aa:	e004      	b.n	54b6 <memchr+0x22>
    54ac:	3c01      	subs	r4, #1
    54ae:	d314      	bcc.n	54da <memchr+0x46>
    54b0:	7803      	ldrb	r3, [r0, #0]
    54b2:	42ab      	cmp	r3, r5
    54b4:	d012      	beq.n	54dc <memchr+0x48>
    54b6:	3001      	adds	r0, #1
    54b8:	4210      	tst	r0, r2
    54ba:	d1f7      	bne.n	54ac <memchr+0x18>
    54bc:	2c03      	cmp	r4, #3
    54be:	d80e      	bhi.n	54de <memchr+0x4a>
    54c0:	2c00      	cmp	r4, #0
    54c2:	d00a      	beq.n	54da <memchr+0x46>
    54c4:	7803      	ldrb	r3, [r0, #0]
    54c6:	42ab      	cmp	r3, r5
    54c8:	d008      	beq.n	54dc <memchr+0x48>
    54ca:	1904      	adds	r4, r0, r4
    54cc:	e002      	b.n	54d4 <memchr+0x40>
    54ce:	7803      	ldrb	r3, [r0, #0]
    54d0:	42ab      	cmp	r3, r5
    54d2:	d003      	beq.n	54dc <memchr+0x48>
    54d4:	3001      	adds	r0, #1
    54d6:	4284      	cmp	r4, r0
    54d8:	d1f9      	bne.n	54ce <memchr+0x3a>
    54da:	2000      	movs	r0, #0
    54dc:	bd70      	pop	{r4, r5, r6, pc}
    54de:	22ff      	movs	r2, #255	; 0xff
    54e0:	060b      	lsls	r3, r1, #24
    54e2:	0c1b      	lsrs	r3, r3, #16
    54e4:	4011      	ands	r1, r2
    54e6:	4319      	orrs	r1, r3
    54e8:	040b      	lsls	r3, r1, #16
    54ea:	4e08      	ldr	r6, [pc, #32]	; (550c <memchr+0x78>)
    54ec:	4319      	orrs	r1, r3
    54ee:	6803      	ldr	r3, [r0, #0]
    54f0:	4a07      	ldr	r2, [pc, #28]	; (5510 <memchr+0x7c>)
    54f2:	404b      	eors	r3, r1
    54f4:	189a      	adds	r2, r3, r2
    54f6:	439a      	bics	r2, r3
    54f8:	4232      	tst	r2, r6
    54fa:	d1e3      	bne.n	54c4 <memchr+0x30>
    54fc:	3c04      	subs	r4, #4
    54fe:	3004      	adds	r0, #4
    5500:	2c03      	cmp	r4, #3
    5502:	d8f4      	bhi.n	54ee <memchr+0x5a>
    5504:	e7dc      	b.n	54c0 <memchr+0x2c>
    5506:	0014      	movs	r4, r2
    5508:	e7d8      	b.n	54bc <memchr+0x28>
    550a:	46c0      	nop			; (mov r8, r8)
    550c:	80808080 	.word	0x80808080
    5510:	fefefeff 	.word	0xfefefeff

00005514 <__malloc_lock>:
    5514:	b510      	push	{r4, lr}
    5516:	4802      	ldr	r0, [pc, #8]	; (5520 <__malloc_lock+0xc>)
    5518:	f7ff fd04 	bl	4f24 <__retarget_lock_acquire_recursive>
    551c:	bd10      	pop	{r4, pc}
    551e:	46c0      	nop			; (mov r8, r8)
    5520:	200009b0 	.word	0x200009b0

00005524 <__malloc_unlock>:
    5524:	b510      	push	{r4, lr}
    5526:	4802      	ldr	r0, [pc, #8]	; (5530 <__malloc_unlock+0xc>)
    5528:	f7ff fcfe 	bl	4f28 <__retarget_lock_release_recursive>
    552c:	bd10      	pop	{r4, pc}
    552e:	46c0      	nop			; (mov r8, r8)
    5530:	200009b0 	.word	0x200009b0

00005534 <_sbrk_r>:
    5534:	2300      	movs	r3, #0
    5536:	b570      	push	{r4, r5, r6, lr}
    5538:	4c06      	ldr	r4, [pc, #24]	; (5554 <_sbrk_r+0x20>)
    553a:	0005      	movs	r5, r0
    553c:	0008      	movs	r0, r1
    553e:	6023      	str	r3, [r4, #0]
    5540:	f7fb f9ba 	bl	8b8 <_sbrk>
    5544:	1c43      	adds	r3, r0, #1
    5546:	d000      	beq.n	554a <_sbrk_r+0x16>
    5548:	bd70      	pop	{r4, r5, r6, pc}
    554a:	6823      	ldr	r3, [r4, #0]
    554c:	2b00      	cmp	r3, #0
    554e:	d0fb      	beq.n	5548 <_sbrk_r+0x14>
    5550:	602b      	str	r3, [r5, #0]
    5552:	e7f9      	b.n	5548 <_sbrk_r+0x14>
    5554:	200009c4 	.word	0x200009c4

00005558 <__ssprint_r>:
    5558:	b5f0      	push	{r4, r5, r6, r7, lr}
    555a:	4657      	mov	r7, sl
    555c:	464e      	mov	r6, r9
    555e:	46de      	mov	lr, fp
    5560:	4645      	mov	r5, r8
    5562:	b5e0      	push	{r5, r6, r7, lr}
    5564:	6893      	ldr	r3, [r2, #8]
    5566:	b083      	sub	sp, #12
    5568:	9001      	str	r0, [sp, #4]
    556a:	000e      	movs	r6, r1
    556c:	4692      	mov	sl, r2
    556e:	2b00      	cmp	r3, #0
    5570:	d070      	beq.n	5654 <__ssprint_r+0xfc>
    5572:	688d      	ldr	r5, [r1, #8]
    5574:	6813      	ldr	r3, [r2, #0]
    5576:	002c      	movs	r4, r5
    5578:	6808      	ldr	r0, [r1, #0]
    557a:	001d      	movs	r5, r3
    557c:	e046      	b.n	560c <__ssprint_r+0xb4>
    557e:	2290      	movs	r2, #144	; 0x90
    5580:	89b3      	ldrh	r3, [r6, #12]
    5582:	00d2      	lsls	r2, r2, #3
    5584:	4213      	tst	r3, r2
    5586:	d030      	beq.n	55ea <__ssprint_r+0x92>
    5588:	6931      	ldr	r1, [r6, #16]
    558a:	1a42      	subs	r2, r0, r1
    558c:	4693      	mov	fp, r2
    558e:	6970      	ldr	r0, [r6, #20]
    5590:	0042      	lsls	r2, r0, #1
    5592:	1812      	adds	r2, r2, r0
    5594:	0fd0      	lsrs	r0, r2, #31
    5596:	1882      	adds	r2, r0, r2
    5598:	1052      	asrs	r2, r2, #1
    559a:	4690      	mov	r8, r2
    559c:	465a      	mov	r2, fp
    559e:	1c50      	adds	r0, r2, #1
    55a0:	19c0      	adds	r0, r0, r7
    55a2:	4642      	mov	r2, r8
    55a4:	4540      	cmp	r0, r8
    55a6:	d901      	bls.n	55ac <__ssprint_r+0x54>
    55a8:	4680      	mov	r8, r0
    55aa:	0002      	movs	r2, r0
    55ac:	2080      	movs	r0, #128	; 0x80
    55ae:	00c0      	lsls	r0, r0, #3
    55b0:	4203      	tst	r3, r0
    55b2:	d038      	beq.n	5626 <__ssprint_r+0xce>
    55b4:	0011      	movs	r1, r2
    55b6:	9801      	ldr	r0, [sp, #4]
    55b8:	f7ff fcb8 	bl	4f2c <_malloc_r>
    55bc:	1e04      	subs	r4, r0, #0
    55be:	d054      	beq.n	566a <__ssprint_r+0x112>
    55c0:	465a      	mov	r2, fp
    55c2:	6931      	ldr	r1, [r6, #16]
    55c4:	f7ff fa0e 	bl	49e4 <memcpy>
    55c8:	89b3      	ldrh	r3, [r6, #12]
    55ca:	4a2a      	ldr	r2, [pc, #168]	; (5674 <__ssprint_r+0x11c>)
    55cc:	4013      	ands	r3, r2
    55ce:	2280      	movs	r2, #128	; 0x80
    55d0:	4313      	orrs	r3, r2
    55d2:	81b3      	strh	r3, [r6, #12]
    55d4:	4643      	mov	r3, r8
    55d6:	0020      	movs	r0, r4
    55d8:	465a      	mov	r2, fp
    55da:	6134      	str	r4, [r6, #16]
    55dc:	46b8      	mov	r8, r7
    55de:	003c      	movs	r4, r7
    55e0:	4458      	add	r0, fp
    55e2:	6173      	str	r3, [r6, #20]
    55e4:	1a9b      	subs	r3, r3, r2
    55e6:	6030      	str	r0, [r6, #0]
    55e8:	60b3      	str	r3, [r6, #8]
    55ea:	4642      	mov	r2, r8
    55ec:	4649      	mov	r1, r9
    55ee:	f000 fdfd 	bl	61ec <memmove>
    55f2:	68b3      	ldr	r3, [r6, #8]
    55f4:	1b1c      	subs	r4, r3, r4
    55f6:	6833      	ldr	r3, [r6, #0]
    55f8:	60b4      	str	r4, [r6, #8]
    55fa:	4443      	add	r3, r8
    55fc:	6033      	str	r3, [r6, #0]
    55fe:	0018      	movs	r0, r3
    5600:	4653      	mov	r3, sl
    5602:	689b      	ldr	r3, [r3, #8]
    5604:	1bdf      	subs	r7, r3, r7
    5606:	4653      	mov	r3, sl
    5608:	609f      	str	r7, [r3, #8]
    560a:	d023      	beq.n	5654 <__ssprint_r+0xfc>
    560c:	686f      	ldr	r7, [r5, #4]
    560e:	002b      	movs	r3, r5
    5610:	3508      	adds	r5, #8
    5612:	2f00      	cmp	r7, #0
    5614:	d0fa      	beq.n	560c <__ssprint_r+0xb4>
    5616:	681b      	ldr	r3, [r3, #0]
    5618:	46a0      	mov	r8, r4
    561a:	4699      	mov	r9, r3
    561c:	42a7      	cmp	r7, r4
    561e:	d2ae      	bcs.n	557e <__ssprint_r+0x26>
    5620:	003c      	movs	r4, r7
    5622:	46b8      	mov	r8, r7
    5624:	e7e1      	b.n	55ea <__ssprint_r+0x92>
    5626:	9801      	ldr	r0, [sp, #4]
    5628:	f000 fe30 	bl	628c <_realloc_r>
    562c:	1e04      	subs	r4, r0, #0
    562e:	d1d1      	bne.n	55d4 <__ssprint_r+0x7c>
    5630:	9c01      	ldr	r4, [sp, #4]
    5632:	6931      	ldr	r1, [r6, #16]
    5634:	0020      	movs	r0, r4
    5636:	f7ff fb97 	bl	4d68 <_free_r>
    563a:	230c      	movs	r3, #12
    563c:	6023      	str	r3, [r4, #0]
    563e:	2240      	movs	r2, #64	; 0x40
    5640:	89b3      	ldrh	r3, [r6, #12]
    5642:	2001      	movs	r0, #1
    5644:	4313      	orrs	r3, r2
    5646:	81b3      	strh	r3, [r6, #12]
    5648:	4652      	mov	r2, sl
    564a:	2300      	movs	r3, #0
    564c:	4240      	negs	r0, r0
    564e:	6093      	str	r3, [r2, #8]
    5650:	6053      	str	r3, [r2, #4]
    5652:	e003      	b.n	565c <__ssprint_r+0x104>
    5654:	2300      	movs	r3, #0
    5656:	4652      	mov	r2, sl
    5658:	2000      	movs	r0, #0
    565a:	6053      	str	r3, [r2, #4]
    565c:	b003      	add	sp, #12
    565e:	bc3c      	pop	{r2, r3, r4, r5}
    5660:	4690      	mov	r8, r2
    5662:	4699      	mov	r9, r3
    5664:	46a2      	mov	sl, r4
    5666:	46ab      	mov	fp, r5
    5668:	bdf0      	pop	{r4, r5, r6, r7, pc}
    566a:	230c      	movs	r3, #12
    566c:	9a01      	ldr	r2, [sp, #4]
    566e:	6013      	str	r3, [r2, #0]
    5670:	e7e5      	b.n	563e <__ssprint_r+0xe6>
    5672:	46c0      	nop			; (mov r8, r8)
    5674:	fffffb7f 	.word	0xfffffb7f

00005678 <_svfiprintf_r>:
    5678:	b5f0      	push	{r4, r5, r6, r7, lr}
    567a:	4645      	mov	r5, r8
    567c:	46de      	mov	lr, fp
    567e:	4657      	mov	r7, sl
    5680:	464e      	mov	r6, r9
    5682:	b5e0      	push	{r5, r6, r7, lr}
    5684:	b0ad      	sub	sp, #180	; 0xb4
    5686:	9002      	str	r0, [sp, #8]
    5688:	9308      	str	r3, [sp, #32]
    568a:	898b      	ldrh	r3, [r1, #12]
    568c:	4688      	mov	r8, r1
    568e:	0014      	movs	r4, r2
    5690:	061b      	lsls	r3, r3, #24
    5692:	d504      	bpl.n	569e <_svfiprintf_r+0x26>
    5694:	690b      	ldr	r3, [r1, #16]
    5696:	2b00      	cmp	r3, #0
    5698:	d101      	bne.n	569e <_svfiprintf_r+0x26>
    569a:	f000 fce6 	bl	606a <_svfiprintf_r+0x9f2>
    569e:	ab1c      	add	r3, sp, #112	; 0x70
    56a0:	930f      	str	r3, [sp, #60]	; 0x3c
    56a2:	2300      	movs	r3, #0
    56a4:	0027      	movs	r7, r4
    56a6:	46c3      	mov	fp, r8
    56a8:	9311      	str	r3, [sp, #68]	; 0x44
    56aa:	9310      	str	r3, [sp, #64]	; 0x40
    56ac:	ae1c      	add	r6, sp, #112	; 0x70
    56ae:	930b      	str	r3, [sp, #44]	; 0x2c
    56b0:	9304      	str	r3, [sp, #16]
    56b2:	783b      	ldrb	r3, [r7, #0]
    56b4:	003c      	movs	r4, r7
    56b6:	2b00      	cmp	r3, #0
    56b8:	d01c      	beq.n	56f4 <_svfiprintf_r+0x7c>
    56ba:	2b25      	cmp	r3, #37	; 0x25
    56bc:	d102      	bne.n	56c4 <_svfiprintf_r+0x4c>
    56be:	e019      	b.n	56f4 <_svfiprintf_r+0x7c>
    56c0:	2b25      	cmp	r3, #37	; 0x25
    56c2:	d003      	beq.n	56cc <_svfiprintf_r+0x54>
    56c4:	3401      	adds	r4, #1
    56c6:	7823      	ldrb	r3, [r4, #0]
    56c8:	2b00      	cmp	r3, #0
    56ca:	d1f9      	bne.n	56c0 <_svfiprintf_r+0x48>
    56cc:	1be5      	subs	r5, r4, r7
    56ce:	d011      	beq.n	56f4 <_svfiprintf_r+0x7c>
    56d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    56d2:	6037      	str	r7, [r6, #0]
    56d4:	195b      	adds	r3, r3, r5
    56d6:	9311      	str	r3, [sp, #68]	; 0x44
    56d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    56da:	6075      	str	r5, [r6, #4]
    56dc:	9300      	str	r3, [sp, #0]
    56de:	3301      	adds	r3, #1
    56e0:	9310      	str	r3, [sp, #64]	; 0x40
    56e2:	2b07      	cmp	r3, #7
    56e4:	dd00      	ble.n	56e8 <_svfiprintf_r+0x70>
    56e6:	e398      	b.n	5e1a <_svfiprintf_r+0x7a2>
    56e8:	3608      	adds	r6, #8
    56ea:	9b04      	ldr	r3, [sp, #16]
    56ec:	469c      	mov	ip, r3
    56ee:	44ac      	add	ip, r5
    56f0:	4663      	mov	r3, ip
    56f2:	9304      	str	r3, [sp, #16]
    56f4:	7823      	ldrb	r3, [r4, #0]
    56f6:	2b00      	cmp	r3, #0
    56f8:	d101      	bne.n	56fe <_svfiprintf_r+0x86>
    56fa:	f000 fc99 	bl	6030 <_svfiprintf_r+0x9b8>
    56fe:	2300      	movs	r3, #0
    5700:	aa0c      	add	r2, sp, #48	; 0x30
    5702:	71d3      	strb	r3, [r2, #7]
    5704:	2201      	movs	r2, #1
    5706:	4252      	negs	r2, r2
    5708:	4692      	mov	sl, r2
    570a:	2200      	movs	r2, #0
    570c:	9205      	str	r2, [sp, #20]
    570e:	3220      	adds	r2, #32
    5710:	4694      	mov	ip, r2
    5712:	3220      	adds	r2, #32
    5714:	4690      	mov	r8, r2
    5716:	3240      	adds	r2, #64	; 0x40
    5718:	1c67      	adds	r7, r4, #1
    571a:	7863      	ldrb	r3, [r4, #1]
    571c:	2000      	movs	r0, #0
    571e:	2500      	movs	r5, #0
    5720:	2400      	movs	r4, #0
    5722:	4691      	mov	r9, r2
    5724:	3701      	adds	r7, #1
    5726:	001a      	movs	r2, r3
    5728:	3a20      	subs	r2, #32
    572a:	2a58      	cmp	r2, #88	; 0x58
    572c:	d900      	bls.n	5730 <_svfiprintf_r+0xb8>
    572e:	e215      	b.n	5b5c <_svfiprintf_r+0x4e4>
    5730:	49d5      	ldr	r1, [pc, #852]	; (5a88 <_svfiprintf_r+0x410>)
    5732:	0092      	lsls	r2, r2, #2
    5734:	588a      	ldr	r2, [r1, r2]
    5736:	4697      	mov	pc, r2
    5738:	2310      	movs	r3, #16
    573a:	431c      	orrs	r4, r3
    573c:	06a3      	lsls	r3, r4, #26
    573e:	d501      	bpl.n	5744 <_svfiprintf_r+0xcc>
    5740:	f000 fc39 	bl	5fb6 <_svfiprintf_r+0x93e>
    5744:	06e3      	lsls	r3, r4, #27
    5746:	d403      	bmi.n	5750 <_svfiprintf_r+0xd8>
    5748:	0663      	lsls	r3, r4, #25
    574a:	d501      	bpl.n	5750 <_svfiprintf_r+0xd8>
    574c:	f000 fc06 	bl	5f5c <_svfiprintf_r+0x8e4>
    5750:	9b08      	ldr	r3, [sp, #32]
    5752:	681a      	ldr	r2, [r3, #0]
    5754:	9206      	str	r2, [sp, #24]
    5756:	2200      	movs	r2, #0
    5758:	3304      	adds	r3, #4
    575a:	9207      	str	r2, [sp, #28]
    575c:	9308      	str	r3, [sp, #32]
    575e:	3201      	adds	r2, #1
    5760:	9906      	ldr	r1, [sp, #24]
    5762:	e158      	b.n	5a16 <_svfiprintf_r+0x39e>
    5764:	2310      	movs	r3, #16
    5766:	431c      	orrs	r4, r3
    5768:	06a3      	lsls	r3, r4, #26
    576a:	d501      	bpl.n	5770 <_svfiprintf_r+0xf8>
    576c:	f000 fc37 	bl	5fde <_svfiprintf_r+0x966>
    5770:	06e3      	lsls	r3, r4, #27
    5772:	d403      	bmi.n	577c <_svfiprintf_r+0x104>
    5774:	0663      	lsls	r3, r4, #25
    5776:	d501      	bpl.n	577c <_svfiprintf_r+0x104>
    5778:	f000 fbf4 	bl	5f64 <_svfiprintf_r+0x8ec>
    577c:	9b08      	ldr	r3, [sp, #32]
    577e:	681a      	ldr	r2, [r3, #0]
    5780:	9206      	str	r2, [sp, #24]
    5782:	2200      	movs	r2, #0
    5784:	3304      	adds	r3, #4
    5786:	9207      	str	r2, [sp, #28]
    5788:	9308      	str	r3, [sp, #32]
    578a:	9906      	ldr	r1, [sp, #24]
    578c:	e143      	b.n	5a16 <_svfiprintf_r+0x39e>
    578e:	9b08      	ldr	r3, [sp, #32]
    5790:	1d1a      	adds	r2, r3, #4
    5792:	681b      	ldr	r3, [r3, #0]
    5794:	9305      	str	r3, [sp, #20]
    5796:	2b00      	cmp	r3, #0
    5798:	db00      	blt.n	579c <_svfiprintf_r+0x124>
    579a:	e3d5      	b.n	5f48 <_svfiprintf_r+0x8d0>
    579c:	9b05      	ldr	r3, [sp, #20]
    579e:	9208      	str	r2, [sp, #32]
    57a0:	425b      	negs	r3, r3
    57a2:	9305      	str	r3, [sp, #20]
    57a4:	2304      	movs	r3, #4
    57a6:	431c      	orrs	r4, r3
    57a8:	783b      	ldrb	r3, [r7, #0]
    57aa:	e7bb      	b.n	5724 <_svfiprintf_r+0xac>
    57ac:	9b08      	ldr	r3, [sp, #32]
    57ae:	1d1a      	adds	r2, r3, #4
    57b0:	681d      	ldr	r5, [r3, #0]
    57b2:	2300      	movs	r3, #0
    57b4:	4691      	mov	r9, r2
    57b6:	aa0c      	add	r2, sp, #48	; 0x30
    57b8:	71d3      	strb	r3, [r2, #7]
    57ba:	4653      	mov	r3, sl
    57bc:	2d00      	cmp	r5, #0
    57be:	d101      	bne.n	57c4 <_svfiprintf_r+0x14c>
    57c0:	f000 fc48 	bl	6054 <_svfiprintf_r+0x9dc>
    57c4:	3301      	adds	r3, #1
    57c6:	d101      	bne.n	57cc <_svfiprintf_r+0x154>
    57c8:	f000 fc3e 	bl	6048 <_svfiprintf_r+0x9d0>
    57cc:	4652      	mov	r2, sl
    57ce:	2100      	movs	r1, #0
    57d0:	0028      	movs	r0, r5
    57d2:	f7ff fe5f 	bl	5494 <memchr>
    57d6:	2800      	cmp	r0, #0
    57d8:	d101      	bne.n	57de <_svfiprintf_r+0x166>
    57da:	f000 fc57 	bl	608c <_svfiprintf_r+0xa14>
    57de:	1b43      	subs	r3, r0, r5
    57e0:	9303      	str	r3, [sp, #12]
    57e2:	ab0c      	add	r3, sp, #48	; 0x30
    57e4:	79db      	ldrb	r3, [r3, #7]
    57e6:	9401      	str	r4, [sp, #4]
    57e8:	4698      	mov	r8, r3
    57ea:	464b      	mov	r3, r9
    57ec:	9308      	str	r3, [sp, #32]
    57ee:	2300      	movs	r3, #0
    57f0:	469a      	mov	sl, r3
    57f2:	4653      	mov	r3, sl
    57f4:	9a03      	ldr	r2, [sp, #12]
    57f6:	9300      	str	r3, [sp, #0]
    57f8:	4592      	cmp	sl, r2
    57fa:	da00      	bge.n	57fe <_svfiprintf_r+0x186>
    57fc:	9200      	str	r2, [sp, #0]
    57fe:	4643      	mov	r3, r8
    5800:	1e5a      	subs	r2, r3, #1
    5802:	4193      	sbcs	r3, r2
    5804:	9a00      	ldr	r2, [sp, #0]
    5806:	4694      	mov	ip, r2
    5808:	449c      	add	ip, r3
    580a:	4663      	mov	r3, ip
    580c:	9300      	str	r3, [sp, #0]
    580e:	e064      	b.n	58da <_svfiprintf_r+0x262>
    5810:	4663      	mov	r3, ip
    5812:	431c      	orrs	r4, r3
    5814:	783b      	ldrb	r3, [r7, #0]
    5816:	e785      	b.n	5724 <_svfiprintf_r+0xac>
    5818:	4643      	mov	r3, r8
    581a:	431c      	orrs	r4, r3
    581c:	783b      	ldrb	r3, [r7, #0]
    581e:	e781      	b.n	5724 <_svfiprintf_r+0xac>
    5820:	2800      	cmp	r0, #0
    5822:	d001      	beq.n	5828 <_svfiprintf_r+0x1b0>
    5824:	f000 fc56 	bl	60d4 <_svfiprintf_r+0xa5c>
    5828:	9a08      	ldr	r2, [sp, #32]
    582a:	06a3      	lsls	r3, r4, #26
    582c:	d500      	bpl.n	5830 <_svfiprintf_r+0x1b8>
    582e:	e15b      	b.n	5ae8 <_svfiprintf_r+0x470>
    5830:	06e3      	lsls	r3, r4, #27
    5832:	d402      	bmi.n	583a <_svfiprintf_r+0x1c2>
    5834:	0663      	lsls	r3, r4, #25
    5836:	d500      	bpl.n	583a <_svfiprintf_r+0x1c2>
    5838:	e38d      	b.n	5f56 <_svfiprintf_r+0x8de>
    583a:	6813      	ldr	r3, [r2, #0]
    583c:	9300      	str	r3, [sp, #0]
    583e:	9306      	str	r3, [sp, #24]
    5840:	3204      	adds	r2, #4
    5842:	17db      	asrs	r3, r3, #31
    5844:	9307      	str	r3, [sp, #28]
    5846:	9208      	str	r2, [sp, #32]
    5848:	d500      	bpl.n	584c <_svfiprintf_r+0x1d4>
    584a:	e15c      	b.n	5b06 <_svfiprintf_r+0x48e>
    584c:	9806      	ldr	r0, [sp, #24]
    584e:	9907      	ldr	r1, [sp, #28]
    5850:	ab0c      	add	r3, sp, #48	; 0x30
    5852:	79db      	ldrb	r3, [r3, #7]
    5854:	2201      	movs	r2, #1
    5856:	4698      	mov	r8, r3
    5858:	0003      	movs	r3, r0
    585a:	430b      	orrs	r3, r1
    585c:	0019      	movs	r1, r3
    585e:	4653      	mov	r3, sl
    5860:	3301      	adds	r3, #1
    5862:	d000      	beq.n	5866 <_svfiprintf_r+0x1ee>
    5864:	e0df      	b.n	5a26 <_svfiprintf_r+0x3ae>
    5866:	2900      	cmp	r1, #0
    5868:	d100      	bne.n	586c <_svfiprintf_r+0x1f4>
    586a:	e2cb      	b.n	5e04 <_svfiprintf_r+0x78c>
    586c:	9401      	str	r4, [sp, #4]
    586e:	2a01      	cmp	r2, #1
    5870:	d100      	bne.n	5874 <_svfiprintf_r+0x1fc>
    5872:	e32b      	b.n	5ecc <_svfiprintf_r+0x854>
    5874:	2a02      	cmp	r2, #2
    5876:	d000      	beq.n	587a <_svfiprintf_r+0x202>
    5878:	e2e8      	b.n	5e4c <_svfiprintf_r+0x7d4>
    587a:	9a06      	ldr	r2, [sp, #24]
    587c:	9b07      	ldr	r3, [sp, #28]
    587e:	200f      	movs	r0, #15
    5880:	46b9      	mov	r9, r7
    5882:	46b4      	mov	ip, r6
    5884:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    5886:	ad1c      	add	r5, sp, #112	; 0x70
    5888:	0001      	movs	r1, r0
    588a:	4011      	ands	r1, r2
    588c:	5c71      	ldrb	r1, [r6, r1]
    588e:	071f      	lsls	r7, r3, #28
    5890:	0914      	lsrs	r4, r2, #4
    5892:	3d01      	subs	r5, #1
    5894:	4327      	orrs	r7, r4
    5896:	7029      	strb	r1, [r5, #0]
    5898:	0919      	lsrs	r1, r3, #4
    589a:	000b      	movs	r3, r1
    589c:	0039      	movs	r1, r7
    589e:	003a      	movs	r2, r7
    58a0:	4319      	orrs	r1, r3
    58a2:	d1f1      	bne.n	5888 <_svfiprintf_r+0x210>
    58a4:	464f      	mov	r7, r9
    58a6:	4666      	mov	r6, ip
    58a8:	9206      	str	r2, [sp, #24]
    58aa:	9307      	str	r3, [sp, #28]
    58ac:	ab1c      	add	r3, sp, #112	; 0x70
    58ae:	1b5b      	subs	r3, r3, r5
    58b0:	9303      	str	r3, [sp, #12]
    58b2:	e79e      	b.n	57f2 <_svfiprintf_r+0x17a>
    58b4:	9a08      	ldr	r2, [sp, #32]
    58b6:	ad12      	add	r5, sp, #72	; 0x48
    58b8:	6813      	ldr	r3, [r2, #0]
    58ba:	a90c      	add	r1, sp, #48	; 0x30
    58bc:	9300      	str	r3, [sp, #0]
    58be:	466b      	mov	r3, sp
    58c0:	781b      	ldrb	r3, [r3, #0]
    58c2:	702b      	strb	r3, [r5, #0]
    58c4:	2300      	movs	r3, #0
    58c6:	71cb      	strb	r3, [r1, #7]
    58c8:	0013      	movs	r3, r2
    58ca:	3304      	adds	r3, #4
    58cc:	9308      	str	r3, [sp, #32]
    58ce:	2301      	movs	r3, #1
    58d0:	9300      	str	r3, [sp, #0]
    58d2:	9303      	str	r3, [sp, #12]
    58d4:	2300      	movs	r3, #0
    58d6:	469a      	mov	sl, r3
    58d8:	9401      	str	r4, [sp, #4]
    58da:	2302      	movs	r3, #2
    58dc:	9a01      	ldr	r2, [sp, #4]
    58de:	401a      	ands	r2, r3
    58e0:	9209      	str	r2, [sp, #36]	; 0x24
    58e2:	d002      	beq.n	58ea <_svfiprintf_r+0x272>
    58e4:	9b00      	ldr	r3, [sp, #0]
    58e6:	3302      	adds	r3, #2
    58e8:	9300      	str	r3, [sp, #0]
    58ea:	2384      	movs	r3, #132	; 0x84
    58ec:	9a01      	ldr	r2, [sp, #4]
    58ee:	401a      	ands	r2, r3
    58f0:	920a      	str	r2, [sp, #40]	; 0x28
    58f2:	d000      	beq.n	58f6 <_svfiprintf_r+0x27e>
    58f4:	e169      	b.n	5bca <_svfiprintf_r+0x552>
    58f6:	9b05      	ldr	r3, [sp, #20]
    58f8:	9a00      	ldr	r2, [sp, #0]
    58fa:	1a9c      	subs	r4, r3, r2
    58fc:	2c00      	cmp	r4, #0
    58fe:	dc00      	bgt.n	5902 <_svfiprintf_r+0x28a>
    5900:	e163      	b.n	5bca <_svfiprintf_r+0x552>
    5902:	4a62      	ldr	r2, [pc, #392]	; (5a8c <_svfiprintf_r+0x414>)
    5904:	9811      	ldr	r0, [sp, #68]	; 0x44
    5906:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5908:	4690      	mov	r8, r2
    590a:	2c10      	cmp	r4, #16
    590c:	dd2a      	ble.n	5964 <_svfiprintf_r+0x2ec>
    590e:	2210      	movs	r2, #16
    5910:	4641      	mov	r1, r8
    5912:	4691      	mov	r9, r2
    5914:	46b8      	mov	r8, r7
    5916:	0032      	movs	r2, r6
    5918:	465f      	mov	r7, fp
    591a:	9e02      	ldr	r6, [sp, #8]
    591c:	46ab      	mov	fp, r5
    591e:	000d      	movs	r5, r1
    5920:	e003      	b.n	592a <_svfiprintf_r+0x2b2>
    5922:	3c10      	subs	r4, #16
    5924:	3208      	adds	r2, #8
    5926:	2c10      	cmp	r4, #16
    5928:	dd16      	ble.n	5958 <_svfiprintf_r+0x2e0>
    592a:	4649      	mov	r1, r9
    592c:	3010      	adds	r0, #16
    592e:	3301      	adds	r3, #1
    5930:	6015      	str	r5, [r2, #0]
    5932:	6051      	str	r1, [r2, #4]
    5934:	9011      	str	r0, [sp, #68]	; 0x44
    5936:	9310      	str	r3, [sp, #64]	; 0x40
    5938:	2b07      	cmp	r3, #7
    593a:	ddf2      	ble.n	5922 <_svfiprintf_r+0x2aa>
    593c:	aa0f      	add	r2, sp, #60	; 0x3c
    593e:	0039      	movs	r1, r7
    5940:	0030      	movs	r0, r6
    5942:	f7ff fe09 	bl	5558 <__ssprint_r>
    5946:	2800      	cmp	r0, #0
    5948:	d000      	beq.n	594c <_svfiprintf_r+0x2d4>
    594a:	e1f3      	b.n	5d34 <_svfiprintf_r+0x6bc>
    594c:	3c10      	subs	r4, #16
    594e:	9811      	ldr	r0, [sp, #68]	; 0x44
    5950:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5952:	aa1c      	add	r2, sp, #112	; 0x70
    5954:	2c10      	cmp	r4, #16
    5956:	dce8      	bgt.n	592a <_svfiprintf_r+0x2b2>
    5958:	0016      	movs	r6, r2
    595a:	002a      	movs	r2, r5
    595c:	465d      	mov	r5, fp
    595e:	46bb      	mov	fp, r7
    5960:	4647      	mov	r7, r8
    5962:	4690      	mov	r8, r2
    5964:	4642      	mov	r2, r8
    5966:	1820      	adds	r0, r4, r0
    5968:	3301      	adds	r3, #1
    596a:	6032      	str	r2, [r6, #0]
    596c:	6074      	str	r4, [r6, #4]
    596e:	9011      	str	r0, [sp, #68]	; 0x44
    5970:	9310      	str	r3, [sp, #64]	; 0x40
    5972:	2b07      	cmp	r3, #7
    5974:	dd00      	ble.n	5978 <_svfiprintf_r+0x300>
    5976:	e2d1      	b.n	5f1c <_svfiprintf_r+0x8a4>
    5978:	3608      	adds	r6, #8
    597a:	e128      	b.n	5bce <_svfiprintf_r+0x556>
    597c:	2800      	cmp	r0, #0
    597e:	d000      	beq.n	5982 <_svfiprintf_r+0x30a>
    5980:	e3af      	b.n	60e2 <_svfiprintf_r+0xa6a>
    5982:	4a43      	ldr	r2, [pc, #268]	; (5a90 <_svfiprintf_r+0x418>)
    5984:	920b      	str	r2, [sp, #44]	; 0x2c
    5986:	06a2      	lsls	r2, r4, #26
    5988:	d500      	bpl.n	598c <_svfiprintf_r+0x314>
    598a:	e08d      	b.n	5aa8 <_svfiprintf_r+0x430>
    598c:	06e2      	lsls	r2, r4, #27
    598e:	d402      	bmi.n	5996 <_svfiprintf_r+0x31e>
    5990:	0662      	lsls	r2, r4, #25
    5992:	d500      	bpl.n	5996 <_svfiprintf_r+0x31e>
    5994:	e2dc      	b.n	5f50 <_svfiprintf_r+0x8d8>
    5996:	9a08      	ldr	r2, [sp, #32]
    5998:	6811      	ldr	r1, [r2, #0]
    599a:	9106      	str	r1, [sp, #24]
    599c:	2100      	movs	r1, #0
    599e:	3204      	adds	r2, #4
    59a0:	9107      	str	r1, [sp, #28]
    59a2:	9208      	str	r2, [sp, #32]
    59a4:	07e2      	lsls	r2, r4, #31
    59a6:	d400      	bmi.n	59aa <_svfiprintf_r+0x332>
    59a8:	e08e      	b.n	5ac8 <_svfiprintf_r+0x450>
    59aa:	9806      	ldr	r0, [sp, #24]
    59ac:	9907      	ldr	r1, [sp, #28]
    59ae:	0002      	movs	r2, r0
    59b0:	430a      	orrs	r2, r1
    59b2:	0011      	movs	r1, r2
    59b4:	2202      	movs	r2, #2
    59b6:	2900      	cmp	r1, #0
    59b8:	d02d      	beq.n	5a16 <_svfiprintf_r+0x39e>
    59ba:	2530      	movs	r5, #48	; 0x30
    59bc:	a80e      	add	r0, sp, #56	; 0x38
    59be:	7005      	strb	r5, [r0, #0]
    59c0:	7043      	strb	r3, [r0, #1]
    59c2:	4314      	orrs	r4, r2
    59c4:	e027      	b.n	5a16 <_svfiprintf_r+0x39e>
    59c6:	2800      	cmp	r0, #0
    59c8:	d000      	beq.n	59cc <_svfiprintf_r+0x354>
    59ca:	e390      	b.n	60ee <_svfiprintf_r+0xa76>
    59cc:	06a3      	lsls	r3, r4, #26
    59ce:	d500      	bpl.n	59d2 <_svfiprintf_r+0x35a>
    59d0:	e2cc      	b.n	5f6c <_svfiprintf_r+0x8f4>
    59d2:	06e3      	lsls	r3, r4, #27
    59d4:	d500      	bpl.n	59d8 <_svfiprintf_r+0x360>
    59d6:	e322      	b.n	601e <_svfiprintf_r+0x9a6>
    59d8:	0663      	lsls	r3, r4, #25
    59da:	d400      	bmi.n	59de <_svfiprintf_r+0x366>
    59dc:	e31f      	b.n	601e <_svfiprintf_r+0x9a6>
    59de:	4669      	mov	r1, sp
    59e0:	9b08      	ldr	r3, [sp, #32]
    59e2:	8a09      	ldrh	r1, [r1, #16]
    59e4:	681a      	ldr	r2, [r3, #0]
    59e6:	3304      	adds	r3, #4
    59e8:	9200      	str	r2, [sp, #0]
    59ea:	8011      	strh	r1, [r2, #0]
    59ec:	9308      	str	r3, [sp, #32]
    59ee:	e660      	b.n	56b2 <_svfiprintf_r+0x3a>
    59f0:	9908      	ldr	r1, [sp, #32]
    59f2:	2230      	movs	r2, #48	; 0x30
    59f4:	680b      	ldr	r3, [r1, #0]
    59f6:	9306      	str	r3, [sp, #24]
    59f8:	2300      	movs	r3, #0
    59fa:	9307      	str	r3, [sp, #28]
    59fc:	3302      	adds	r3, #2
    59fe:	431c      	orrs	r4, r3
    5a00:	ab0e      	add	r3, sp, #56	; 0x38
    5a02:	701a      	strb	r2, [r3, #0]
    5a04:	3248      	adds	r2, #72	; 0x48
    5a06:	705a      	strb	r2, [r3, #1]
    5a08:	000b      	movs	r3, r1
    5a0a:	3304      	adds	r3, #4
    5a0c:	9308      	str	r3, [sp, #32]
    5a0e:	4b21      	ldr	r3, [pc, #132]	; (5a94 <_svfiprintf_r+0x41c>)
    5a10:	9906      	ldr	r1, [sp, #24]
    5a12:	930b      	str	r3, [sp, #44]	; 0x2c
    5a14:	3a76      	subs	r2, #118	; 0x76
    5a16:	2300      	movs	r3, #0
    5a18:	4698      	mov	r8, r3
    5a1a:	a80c      	add	r0, sp, #48	; 0x30
    5a1c:	71c3      	strb	r3, [r0, #7]
    5a1e:	4653      	mov	r3, sl
    5a20:	3301      	adds	r3, #1
    5a22:	d100      	bne.n	5a26 <_svfiprintf_r+0x3ae>
    5a24:	e71f      	b.n	5866 <_svfiprintf_r+0x1ee>
    5a26:	2380      	movs	r3, #128	; 0x80
    5a28:	0020      	movs	r0, r4
    5a2a:	4398      	bics	r0, r3
    5a2c:	9001      	str	r0, [sp, #4]
    5a2e:	2900      	cmp	r1, #0
    5a30:	d000      	beq.n	5a34 <_svfiprintf_r+0x3bc>
    5a32:	e71c      	b.n	586e <_svfiprintf_r+0x1f6>
    5a34:	4653      	mov	r3, sl
    5a36:	2b00      	cmp	r3, #0
    5a38:	d000      	beq.n	5a3c <_svfiprintf_r+0x3c4>
    5a3a:	e1e2      	b.n	5e02 <_svfiprintf_r+0x78a>
    5a3c:	2a00      	cmp	r2, #0
    5a3e:	d000      	beq.n	5a42 <_svfiprintf_r+0x3ca>
    5a40:	e268      	b.n	5f14 <_svfiprintf_r+0x89c>
    5a42:	2001      	movs	r0, #1
    5a44:	4020      	ands	r0, r4
    5a46:	9003      	str	r0, [sp, #12]
    5a48:	ad1c      	add	r5, sp, #112	; 0x70
    5a4a:	2800      	cmp	r0, #0
    5a4c:	d100      	bne.n	5a50 <_svfiprintf_r+0x3d8>
    5a4e:	e6d0      	b.n	57f2 <_svfiprintf_r+0x17a>
    5a50:	2327      	movs	r3, #39	; 0x27
    5a52:	2130      	movs	r1, #48	; 0x30
    5a54:	aa12      	add	r2, sp, #72	; 0x48
    5a56:	54d1      	strb	r1, [r2, r3]
    5a58:	ab0c      	add	r3, sp, #48	; 0x30
    5a5a:	253f      	movs	r5, #63	; 0x3f
    5a5c:	469c      	mov	ip, r3
    5a5e:	4465      	add	r5, ip
    5a60:	e6c7      	b.n	57f2 <_svfiprintf_r+0x17a>
    5a62:	783b      	ldrb	r3, [r7, #0]
    5a64:	2b6c      	cmp	r3, #108	; 0x6c
    5a66:	d100      	bne.n	5a6a <_svfiprintf_r+0x3f2>
    5a68:	e29d      	b.n	5fa6 <_svfiprintf_r+0x92e>
    5a6a:	2210      	movs	r2, #16
    5a6c:	4314      	orrs	r4, r2
    5a6e:	e659      	b.n	5724 <_svfiprintf_r+0xac>
    5a70:	2301      	movs	r3, #1
    5a72:	431c      	orrs	r4, r3
    5a74:	783b      	ldrb	r3, [r7, #0]
    5a76:	e655      	b.n	5724 <_svfiprintf_r+0xac>
    5a78:	783b      	ldrb	r3, [r7, #0]
    5a7a:	2d00      	cmp	r5, #0
    5a7c:	d000      	beq.n	5a80 <_svfiprintf_r+0x408>
    5a7e:	e651      	b.n	5724 <_svfiprintf_r+0xac>
    5a80:	2001      	movs	r0, #1
    5a82:	3520      	adds	r5, #32
    5a84:	e64e      	b.n	5724 <_svfiprintf_r+0xac>
    5a86:	46c0      	nop			; (mov r8, r8)
    5a88:	00006bec 	.word	0x00006bec
    5a8c:	00006d80 	.word	0x00006d80
    5a90:	00006d50 	.word	0x00006d50
    5a94:	00006d64 	.word	0x00006d64
    5a98:	2800      	cmp	r0, #0
    5a9a:	d000      	beq.n	5a9e <_svfiprintf_r+0x426>
    5a9c:	e317      	b.n	60ce <_svfiprintf_r+0xa56>
    5a9e:	4acc      	ldr	r2, [pc, #816]	; (5dd0 <_svfiprintf_r+0x758>)
    5aa0:	920b      	str	r2, [sp, #44]	; 0x2c
    5aa2:	06a2      	lsls	r2, r4, #26
    5aa4:	d400      	bmi.n	5aa8 <_svfiprintf_r+0x430>
    5aa6:	e771      	b.n	598c <_svfiprintf_r+0x314>
    5aa8:	2107      	movs	r1, #7
    5aaa:	9a08      	ldr	r2, [sp, #32]
    5aac:	3207      	adds	r2, #7
    5aae:	438a      	bics	r2, r1
    5ab0:	3101      	adds	r1, #1
    5ab2:	468c      	mov	ip, r1
    5ab4:	4494      	add	ip, r2
    5ab6:	4661      	mov	r1, ip
    5ab8:	9108      	str	r1, [sp, #32]
    5aba:	6811      	ldr	r1, [r2, #0]
    5abc:	6852      	ldr	r2, [r2, #4]
    5abe:	9106      	str	r1, [sp, #24]
    5ac0:	9207      	str	r2, [sp, #28]
    5ac2:	07e2      	lsls	r2, r4, #31
    5ac4:	d500      	bpl.n	5ac8 <_svfiprintf_r+0x450>
    5ac6:	e770      	b.n	59aa <_svfiprintf_r+0x332>
    5ac8:	9806      	ldr	r0, [sp, #24]
    5aca:	9907      	ldr	r1, [sp, #28]
    5acc:	0003      	movs	r3, r0
    5ace:	430b      	orrs	r3, r1
    5ad0:	2202      	movs	r2, #2
    5ad2:	0019      	movs	r1, r3
    5ad4:	e79f      	b.n	5a16 <_svfiprintf_r+0x39e>
    5ad6:	2800      	cmp	r0, #0
    5ad8:	d000      	beq.n	5adc <_svfiprintf_r+0x464>
    5ada:	e2ff      	b.n	60dc <_svfiprintf_r+0xa64>
    5adc:	2310      	movs	r3, #16
    5ade:	431c      	orrs	r4, r3
    5ae0:	9a08      	ldr	r2, [sp, #32]
    5ae2:	06a3      	lsls	r3, r4, #26
    5ae4:	d400      	bmi.n	5ae8 <_svfiprintf_r+0x470>
    5ae6:	e6a3      	b.n	5830 <_svfiprintf_r+0x1b8>
    5ae8:	2307      	movs	r3, #7
    5aea:	3207      	adds	r2, #7
    5aec:	439a      	bics	r2, r3
    5aee:	3301      	adds	r3, #1
    5af0:	469c      	mov	ip, r3
    5af2:	4494      	add	ip, r2
    5af4:	4663      	mov	r3, ip
    5af6:	9308      	str	r3, [sp, #32]
    5af8:	6853      	ldr	r3, [r2, #4]
    5afa:	6812      	ldr	r2, [r2, #0]
    5afc:	9307      	str	r3, [sp, #28]
    5afe:	9206      	str	r2, [sp, #24]
    5b00:	2b00      	cmp	r3, #0
    5b02:	db00      	blt.n	5b06 <_svfiprintf_r+0x48e>
    5b04:	e6a2      	b.n	584c <_svfiprintf_r+0x1d4>
    5b06:	9806      	ldr	r0, [sp, #24]
    5b08:	9907      	ldr	r1, [sp, #28]
    5b0a:	2300      	movs	r3, #0
    5b0c:	4242      	negs	r2, r0
    5b0e:	418b      	sbcs	r3, r1
    5b10:	0019      	movs	r1, r3
    5b12:	0010      	movs	r0, r2
    5b14:	232d      	movs	r3, #45	; 0x2d
    5b16:	aa0c      	add	r2, sp, #48	; 0x30
    5b18:	71d3      	strb	r3, [r2, #7]
    5b1a:	4698      	mov	r8, r3
    5b1c:	0003      	movs	r3, r0
    5b1e:	430b      	orrs	r3, r1
    5b20:	9006      	str	r0, [sp, #24]
    5b22:	9107      	str	r1, [sp, #28]
    5b24:	2201      	movs	r2, #1
    5b26:	0019      	movs	r1, r3
    5b28:	e779      	b.n	5a1e <_svfiprintf_r+0x3a6>
    5b2a:	2200      	movs	r2, #0
    5b2c:	3b30      	subs	r3, #48	; 0x30
    5b2e:	9205      	str	r2, [sp, #20]
    5b30:	9400      	str	r4, [sp, #0]
    5b32:	0039      	movs	r1, r7
    5b34:	001a      	movs	r2, r3
    5b36:	2400      	movs	r4, #0
    5b38:	00a3      	lsls	r3, r4, #2
    5b3a:	191c      	adds	r4, r3, r4
    5b3c:	780b      	ldrb	r3, [r1, #0]
    5b3e:	0064      	lsls	r4, r4, #1
    5b40:	1914      	adds	r4, r2, r4
    5b42:	001a      	movs	r2, r3
    5b44:	3701      	adds	r7, #1
    5b46:	3a30      	subs	r2, #48	; 0x30
    5b48:	0039      	movs	r1, r7
    5b4a:	2a09      	cmp	r2, #9
    5b4c:	d9f4      	bls.n	5b38 <_svfiprintf_r+0x4c0>
    5b4e:	001a      	movs	r2, r3
    5b50:	3a20      	subs	r2, #32
    5b52:	9405      	str	r4, [sp, #20]
    5b54:	9c00      	ldr	r4, [sp, #0]
    5b56:	2a58      	cmp	r2, #88	; 0x58
    5b58:	d800      	bhi.n	5b5c <_svfiprintf_r+0x4e4>
    5b5a:	e5e9      	b.n	5730 <_svfiprintf_r+0xb8>
    5b5c:	2800      	cmp	r0, #0
    5b5e:	d000      	beq.n	5b62 <_svfiprintf_r+0x4ea>
    5b60:	e2c2      	b.n	60e8 <_svfiprintf_r+0xa70>
    5b62:	2b00      	cmp	r3, #0
    5b64:	d100      	bne.n	5b68 <_svfiprintf_r+0x4f0>
    5b66:	e263      	b.n	6030 <_svfiprintf_r+0x9b8>
    5b68:	ad12      	add	r5, sp, #72	; 0x48
    5b6a:	702b      	strb	r3, [r5, #0]
    5b6c:	2300      	movs	r3, #0
    5b6e:	aa0c      	add	r2, sp, #48	; 0x30
    5b70:	71d3      	strb	r3, [r2, #7]
    5b72:	3301      	adds	r3, #1
    5b74:	9300      	str	r3, [sp, #0]
    5b76:	9303      	str	r3, [sp, #12]
    5b78:	e6ac      	b.n	58d4 <_svfiprintf_r+0x25c>
    5b7a:	464b      	mov	r3, r9
    5b7c:	431c      	orrs	r4, r3
    5b7e:	783b      	ldrb	r3, [r7, #0]
    5b80:	e5d0      	b.n	5724 <_svfiprintf_r+0xac>
    5b82:	783b      	ldrb	r3, [r7, #0]
    5b84:	1c79      	adds	r1, r7, #1
    5b86:	2b2a      	cmp	r3, #42	; 0x2a
    5b88:	d100      	bne.n	5b8c <_svfiprintf_r+0x514>
    5b8a:	e28b      	b.n	60a4 <_svfiprintf_r+0xa2c>
    5b8c:	001a      	movs	r2, r3
    5b8e:	2700      	movs	r7, #0
    5b90:	3a30      	subs	r2, #48	; 0x30
    5b92:	46ba      	mov	sl, r7
    5b94:	000f      	movs	r7, r1
    5b96:	2a09      	cmp	r2, #9
    5b98:	d900      	bls.n	5b9c <_svfiprintf_r+0x524>
    5b9a:	e5c4      	b.n	5726 <_svfiprintf_r+0xae>
    5b9c:	4657      	mov	r7, sl
    5b9e:	4682      	mov	sl, r0
    5ba0:	00bb      	lsls	r3, r7, #2
    5ba2:	19db      	adds	r3, r3, r7
    5ba4:	7808      	ldrb	r0, [r1, #0]
    5ba6:	005b      	lsls	r3, r3, #1
    5ba8:	189f      	adds	r7, r3, r2
    5baa:	0002      	movs	r2, r0
    5bac:	1c4b      	adds	r3, r1, #1
    5bae:	3a30      	subs	r2, #48	; 0x30
    5bb0:	0019      	movs	r1, r3
    5bb2:	2a09      	cmp	r2, #9
    5bb4:	d9f4      	bls.n	5ba0 <_svfiprintf_r+0x528>
    5bb6:	4652      	mov	r2, sl
    5bb8:	46ba      	mov	sl, r7
    5bba:	001f      	movs	r7, r3
    5bbc:	0003      	movs	r3, r0
    5bbe:	0010      	movs	r0, r2
    5bc0:	e5b1      	b.n	5726 <_svfiprintf_r+0xae>
    5bc2:	783b      	ldrb	r3, [r7, #0]
    5bc4:	2001      	movs	r0, #1
    5bc6:	252b      	movs	r5, #43	; 0x2b
    5bc8:	e5ac      	b.n	5724 <_svfiprintf_r+0xac>
    5bca:	9811      	ldr	r0, [sp, #68]	; 0x44
    5bcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5bce:	aa0c      	add	r2, sp, #48	; 0x30
    5bd0:	79d2      	ldrb	r2, [r2, #7]
    5bd2:	2a00      	cmp	r2, #0
    5bd4:	d00c      	beq.n	5bf0 <_svfiprintf_r+0x578>
    5bd6:	aa0c      	add	r2, sp, #48	; 0x30
    5bd8:	3207      	adds	r2, #7
    5bda:	6032      	str	r2, [r6, #0]
    5bdc:	2201      	movs	r2, #1
    5bde:	3001      	adds	r0, #1
    5be0:	3301      	adds	r3, #1
    5be2:	6072      	str	r2, [r6, #4]
    5be4:	9011      	str	r0, [sp, #68]	; 0x44
    5be6:	9310      	str	r3, [sp, #64]	; 0x40
    5be8:	2b07      	cmp	r3, #7
    5bea:	dd00      	ble.n	5bee <_svfiprintf_r+0x576>
    5bec:	e158      	b.n	5ea0 <_svfiprintf_r+0x828>
    5bee:	3608      	adds	r6, #8
    5bf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    5bf2:	2a00      	cmp	r2, #0
    5bf4:	d00b      	beq.n	5c0e <_svfiprintf_r+0x596>
    5bf6:	aa0e      	add	r2, sp, #56	; 0x38
    5bf8:	6032      	str	r2, [r6, #0]
    5bfa:	2202      	movs	r2, #2
    5bfc:	3002      	adds	r0, #2
    5bfe:	3301      	adds	r3, #1
    5c00:	6072      	str	r2, [r6, #4]
    5c02:	9011      	str	r0, [sp, #68]	; 0x44
    5c04:	9310      	str	r3, [sp, #64]	; 0x40
    5c06:	2b07      	cmp	r3, #7
    5c08:	dd00      	ble.n	5c0c <_svfiprintf_r+0x594>
    5c0a:	e154      	b.n	5eb6 <_svfiprintf_r+0x83e>
    5c0c:	3608      	adds	r6, #8
    5c0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5c10:	2a80      	cmp	r2, #128	; 0x80
    5c12:	d100      	bne.n	5c16 <_svfiprintf_r+0x59e>
    5c14:	e09c      	b.n	5d50 <_svfiprintf_r+0x6d8>
    5c16:	4652      	mov	r2, sl
    5c18:	9903      	ldr	r1, [sp, #12]
    5c1a:	1a54      	subs	r4, r2, r1
    5c1c:	2c00      	cmp	r4, #0
    5c1e:	dd36      	ble.n	5c8e <_svfiprintf_r+0x616>
    5c20:	4a6c      	ldr	r2, [pc, #432]	; (5dd4 <_svfiprintf_r+0x75c>)
    5c22:	4690      	mov	r8, r2
    5c24:	2c10      	cmp	r4, #16
    5c26:	dd27      	ble.n	5c78 <_svfiprintf_r+0x600>
    5c28:	2210      	movs	r2, #16
    5c2a:	46aa      	mov	sl, r5
    5c2c:	4691      	mov	r9, r2
    5c2e:	4645      	mov	r5, r8
    5c30:	0032      	movs	r2, r6
    5c32:	46b8      	mov	r8, r7
    5c34:	9e02      	ldr	r6, [sp, #8]
    5c36:	465f      	mov	r7, fp
    5c38:	e003      	b.n	5c42 <_svfiprintf_r+0x5ca>
    5c3a:	3c10      	subs	r4, #16
    5c3c:	3208      	adds	r2, #8
    5c3e:	2c10      	cmp	r4, #16
    5c40:	dd15      	ble.n	5c6e <_svfiprintf_r+0x5f6>
    5c42:	4649      	mov	r1, r9
    5c44:	3010      	adds	r0, #16
    5c46:	3301      	adds	r3, #1
    5c48:	6015      	str	r5, [r2, #0]
    5c4a:	6051      	str	r1, [r2, #4]
    5c4c:	9011      	str	r0, [sp, #68]	; 0x44
    5c4e:	9310      	str	r3, [sp, #64]	; 0x40
    5c50:	2b07      	cmp	r3, #7
    5c52:	ddf2      	ble.n	5c3a <_svfiprintf_r+0x5c2>
    5c54:	aa0f      	add	r2, sp, #60	; 0x3c
    5c56:	0039      	movs	r1, r7
    5c58:	0030      	movs	r0, r6
    5c5a:	f7ff fc7d 	bl	5558 <__ssprint_r>
    5c5e:	2800      	cmp	r0, #0
    5c60:	d168      	bne.n	5d34 <_svfiprintf_r+0x6bc>
    5c62:	3c10      	subs	r4, #16
    5c64:	9811      	ldr	r0, [sp, #68]	; 0x44
    5c66:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5c68:	aa1c      	add	r2, sp, #112	; 0x70
    5c6a:	2c10      	cmp	r4, #16
    5c6c:	dce9      	bgt.n	5c42 <_svfiprintf_r+0x5ca>
    5c6e:	46bb      	mov	fp, r7
    5c70:	0016      	movs	r6, r2
    5c72:	4647      	mov	r7, r8
    5c74:	46a8      	mov	r8, r5
    5c76:	4655      	mov	r5, sl
    5c78:	4642      	mov	r2, r8
    5c7a:	1900      	adds	r0, r0, r4
    5c7c:	3301      	adds	r3, #1
    5c7e:	6032      	str	r2, [r6, #0]
    5c80:	6074      	str	r4, [r6, #4]
    5c82:	9011      	str	r0, [sp, #68]	; 0x44
    5c84:	9310      	str	r3, [sp, #64]	; 0x40
    5c86:	2b07      	cmp	r3, #7
    5c88:	dd00      	ble.n	5c8c <_svfiprintf_r+0x614>
    5c8a:	e0cf      	b.n	5e2c <_svfiprintf_r+0x7b4>
    5c8c:	3608      	adds	r6, #8
    5c8e:	9a03      	ldr	r2, [sp, #12]
    5c90:	3301      	adds	r3, #1
    5c92:	4694      	mov	ip, r2
    5c94:	4460      	add	r0, ip
    5c96:	6035      	str	r5, [r6, #0]
    5c98:	6072      	str	r2, [r6, #4]
    5c9a:	9011      	str	r0, [sp, #68]	; 0x44
    5c9c:	9310      	str	r3, [sp, #64]	; 0x40
    5c9e:	2b07      	cmp	r3, #7
    5ca0:	dd00      	ble.n	5ca4 <_svfiprintf_r+0x62c>
    5ca2:	e09b      	b.n	5ddc <_svfiprintf_r+0x764>
    5ca4:	0032      	movs	r2, r6
    5ca6:	3208      	adds	r2, #8
    5ca8:	9b01      	ldr	r3, [sp, #4]
    5caa:	075b      	lsls	r3, r3, #29
    5cac:	d532      	bpl.n	5d14 <_svfiprintf_r+0x69c>
    5cae:	9b05      	ldr	r3, [sp, #20]
    5cb0:	9900      	ldr	r1, [sp, #0]
    5cb2:	1a5d      	subs	r5, r3, r1
    5cb4:	2d00      	cmp	r5, #0
    5cb6:	dd2d      	ble.n	5d14 <_svfiprintf_r+0x69c>
    5cb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5cba:	4947      	ldr	r1, [pc, #284]	; (5dd8 <_svfiprintf_r+0x760>)
    5cbc:	2d10      	cmp	r5, #16
    5cbe:	dd21      	ble.n	5d04 <_svfiprintf_r+0x68c>
    5cc0:	46b8      	mov	r8, r7
    5cc2:	2610      	movs	r6, #16
    5cc4:	465c      	mov	r4, fp
    5cc6:	000f      	movs	r7, r1
    5cc8:	e003      	b.n	5cd2 <_svfiprintf_r+0x65a>
    5cca:	3d10      	subs	r5, #16
    5ccc:	3208      	adds	r2, #8
    5cce:	2d10      	cmp	r5, #16
    5cd0:	dd15      	ble.n	5cfe <_svfiprintf_r+0x686>
    5cd2:	3010      	adds	r0, #16
    5cd4:	3301      	adds	r3, #1
    5cd6:	6017      	str	r7, [r2, #0]
    5cd8:	6056      	str	r6, [r2, #4]
    5cda:	9011      	str	r0, [sp, #68]	; 0x44
    5cdc:	9310      	str	r3, [sp, #64]	; 0x40
    5cde:	2b07      	cmp	r3, #7
    5ce0:	ddf3      	ble.n	5cca <_svfiprintf_r+0x652>
    5ce2:	aa0f      	add	r2, sp, #60	; 0x3c
    5ce4:	0021      	movs	r1, r4
    5ce6:	9802      	ldr	r0, [sp, #8]
    5ce8:	f7ff fc36 	bl	5558 <__ssprint_r>
    5cec:	2800      	cmp	r0, #0
    5cee:	d000      	beq.n	5cf2 <_svfiprintf_r+0x67a>
    5cf0:	e15f      	b.n	5fb2 <_svfiprintf_r+0x93a>
    5cf2:	3d10      	subs	r5, #16
    5cf4:	9811      	ldr	r0, [sp, #68]	; 0x44
    5cf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5cf8:	aa1c      	add	r2, sp, #112	; 0x70
    5cfa:	2d10      	cmp	r5, #16
    5cfc:	dce9      	bgt.n	5cd2 <_svfiprintf_r+0x65a>
    5cfe:	0039      	movs	r1, r7
    5d00:	46a3      	mov	fp, r4
    5d02:	4647      	mov	r7, r8
    5d04:	1940      	adds	r0, r0, r5
    5d06:	3301      	adds	r3, #1
    5d08:	c222      	stmia	r2!, {r1, r5}
    5d0a:	9011      	str	r0, [sp, #68]	; 0x44
    5d0c:	9310      	str	r3, [sp, #64]	; 0x40
    5d0e:	2b07      	cmp	r3, #7
    5d10:	dd00      	ble.n	5d14 <_svfiprintf_r+0x69c>
    5d12:	e10f      	b.n	5f34 <_svfiprintf_r+0x8bc>
    5d14:	9b05      	ldr	r3, [sp, #20]
    5d16:	9900      	ldr	r1, [sp, #0]
    5d18:	428b      	cmp	r3, r1
    5d1a:	da00      	bge.n	5d1e <_svfiprintf_r+0x6a6>
    5d1c:	000b      	movs	r3, r1
    5d1e:	9a04      	ldr	r2, [sp, #16]
    5d20:	4694      	mov	ip, r2
    5d22:	449c      	add	ip, r3
    5d24:	4663      	mov	r3, ip
    5d26:	9304      	str	r3, [sp, #16]
    5d28:	2800      	cmp	r0, #0
    5d2a:	d161      	bne.n	5df0 <_svfiprintf_r+0x778>
    5d2c:	2300      	movs	r3, #0
    5d2e:	ae1c      	add	r6, sp, #112	; 0x70
    5d30:	9310      	str	r3, [sp, #64]	; 0x40
    5d32:	e4be      	b.n	56b2 <_svfiprintf_r+0x3a>
    5d34:	46b8      	mov	r8, r7
    5d36:	4643      	mov	r3, r8
    5d38:	899b      	ldrh	r3, [r3, #12]
    5d3a:	065b      	lsls	r3, r3, #25
    5d3c:	d500      	bpl.n	5d40 <_svfiprintf_r+0x6c8>
    5d3e:	e1a1      	b.n	6084 <_svfiprintf_r+0xa0c>
    5d40:	9804      	ldr	r0, [sp, #16]
    5d42:	b02d      	add	sp, #180	; 0xb4
    5d44:	bc3c      	pop	{r2, r3, r4, r5}
    5d46:	4690      	mov	r8, r2
    5d48:	4699      	mov	r9, r3
    5d4a:	46a2      	mov	sl, r4
    5d4c:	46ab      	mov	fp, r5
    5d4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5d50:	9a05      	ldr	r2, [sp, #20]
    5d52:	9900      	ldr	r1, [sp, #0]
    5d54:	1a54      	subs	r4, r2, r1
    5d56:	2c00      	cmp	r4, #0
    5d58:	dc00      	bgt.n	5d5c <_svfiprintf_r+0x6e4>
    5d5a:	e75c      	b.n	5c16 <_svfiprintf_r+0x59e>
    5d5c:	4a1d      	ldr	r2, [pc, #116]	; (5dd4 <_svfiprintf_r+0x75c>)
    5d5e:	4690      	mov	r8, r2
    5d60:	2c10      	cmp	r4, #16
    5d62:	dd29      	ble.n	5db8 <_svfiprintf_r+0x740>
    5d64:	2210      	movs	r2, #16
    5d66:	4641      	mov	r1, r8
    5d68:	4691      	mov	r9, r2
    5d6a:	46b8      	mov	r8, r7
    5d6c:	0032      	movs	r2, r6
    5d6e:	465f      	mov	r7, fp
    5d70:	9e02      	ldr	r6, [sp, #8]
    5d72:	46ab      	mov	fp, r5
    5d74:	000d      	movs	r5, r1
    5d76:	e003      	b.n	5d80 <_svfiprintf_r+0x708>
    5d78:	3c10      	subs	r4, #16
    5d7a:	3208      	adds	r2, #8
    5d7c:	2c10      	cmp	r4, #16
    5d7e:	dd15      	ble.n	5dac <_svfiprintf_r+0x734>
    5d80:	4649      	mov	r1, r9
    5d82:	3010      	adds	r0, #16
    5d84:	3301      	adds	r3, #1
    5d86:	6015      	str	r5, [r2, #0]
    5d88:	6051      	str	r1, [r2, #4]
    5d8a:	9011      	str	r0, [sp, #68]	; 0x44
    5d8c:	9310      	str	r3, [sp, #64]	; 0x40
    5d8e:	2b07      	cmp	r3, #7
    5d90:	ddf2      	ble.n	5d78 <_svfiprintf_r+0x700>
    5d92:	aa0f      	add	r2, sp, #60	; 0x3c
    5d94:	0039      	movs	r1, r7
    5d96:	0030      	movs	r0, r6
    5d98:	f7ff fbde 	bl	5558 <__ssprint_r>
    5d9c:	2800      	cmp	r0, #0
    5d9e:	d1c9      	bne.n	5d34 <_svfiprintf_r+0x6bc>
    5da0:	3c10      	subs	r4, #16
    5da2:	9811      	ldr	r0, [sp, #68]	; 0x44
    5da4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5da6:	aa1c      	add	r2, sp, #112	; 0x70
    5da8:	2c10      	cmp	r4, #16
    5daa:	dce9      	bgt.n	5d80 <_svfiprintf_r+0x708>
    5dac:	0016      	movs	r6, r2
    5dae:	002a      	movs	r2, r5
    5db0:	465d      	mov	r5, fp
    5db2:	46bb      	mov	fp, r7
    5db4:	4647      	mov	r7, r8
    5db6:	4690      	mov	r8, r2
    5db8:	4642      	mov	r2, r8
    5dba:	1900      	adds	r0, r0, r4
    5dbc:	3301      	adds	r3, #1
    5dbe:	6032      	str	r2, [r6, #0]
    5dc0:	6074      	str	r4, [r6, #4]
    5dc2:	9011      	str	r0, [sp, #68]	; 0x44
    5dc4:	9310      	str	r3, [sp, #64]	; 0x40
    5dc6:	2b07      	cmp	r3, #7
    5dc8:	dd00      	ble.n	5dcc <_svfiprintf_r+0x754>
    5dca:	e11c      	b.n	6006 <_svfiprintf_r+0x98e>
    5dcc:	3608      	adds	r6, #8
    5dce:	e722      	b.n	5c16 <_svfiprintf_r+0x59e>
    5dd0:	00006d64 	.word	0x00006d64
    5dd4:	00006d90 	.word	0x00006d90
    5dd8:	00006d80 	.word	0x00006d80
    5ddc:	aa0f      	add	r2, sp, #60	; 0x3c
    5dde:	4659      	mov	r1, fp
    5de0:	9802      	ldr	r0, [sp, #8]
    5de2:	f7ff fbb9 	bl	5558 <__ssprint_r>
    5de6:	2800      	cmp	r0, #0
    5de8:	d109      	bne.n	5dfe <_svfiprintf_r+0x786>
    5dea:	9811      	ldr	r0, [sp, #68]	; 0x44
    5dec:	aa1c      	add	r2, sp, #112	; 0x70
    5dee:	e75b      	b.n	5ca8 <_svfiprintf_r+0x630>
    5df0:	aa0f      	add	r2, sp, #60	; 0x3c
    5df2:	4659      	mov	r1, fp
    5df4:	9802      	ldr	r0, [sp, #8]
    5df6:	f7ff fbaf 	bl	5558 <__ssprint_r>
    5dfa:	2800      	cmp	r0, #0
    5dfc:	d096      	beq.n	5d2c <_svfiprintf_r+0x6b4>
    5dfe:	46d8      	mov	r8, fp
    5e00:	e799      	b.n	5d36 <_svfiprintf_r+0x6be>
    5e02:	9c01      	ldr	r4, [sp, #4]
    5e04:	2a01      	cmp	r2, #1
    5e06:	d100      	bne.n	5e0a <_svfiprintf_r+0x792>
    5e08:	e0bf      	b.n	5f8a <_svfiprintf_r+0x912>
    5e0a:	2a02      	cmp	r2, #2
    5e0c:	d119      	bne.n	5e42 <_svfiprintf_r+0x7ca>
    5e0e:	9401      	str	r4, [sp, #4]
    5e10:	2300      	movs	r3, #0
    5e12:	2400      	movs	r4, #0
    5e14:	9306      	str	r3, [sp, #24]
    5e16:	9407      	str	r4, [sp, #28]
    5e18:	e52f      	b.n	587a <_svfiprintf_r+0x202>
    5e1a:	aa0f      	add	r2, sp, #60	; 0x3c
    5e1c:	4659      	mov	r1, fp
    5e1e:	9802      	ldr	r0, [sp, #8]
    5e20:	f7ff fb9a 	bl	5558 <__ssprint_r>
    5e24:	2800      	cmp	r0, #0
    5e26:	d1ea      	bne.n	5dfe <_svfiprintf_r+0x786>
    5e28:	ae1c      	add	r6, sp, #112	; 0x70
    5e2a:	e45e      	b.n	56ea <_svfiprintf_r+0x72>
    5e2c:	aa0f      	add	r2, sp, #60	; 0x3c
    5e2e:	4659      	mov	r1, fp
    5e30:	9802      	ldr	r0, [sp, #8]
    5e32:	f7ff fb91 	bl	5558 <__ssprint_r>
    5e36:	2800      	cmp	r0, #0
    5e38:	d1e1      	bne.n	5dfe <_svfiprintf_r+0x786>
    5e3a:	9811      	ldr	r0, [sp, #68]	; 0x44
    5e3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5e3e:	ae1c      	add	r6, sp, #112	; 0x70
    5e40:	e725      	b.n	5c8e <_svfiprintf_r+0x616>
    5e42:	9401      	str	r4, [sp, #4]
    5e44:	2300      	movs	r3, #0
    5e46:	2400      	movs	r4, #0
    5e48:	9306      	str	r3, [sp, #24]
    5e4a:	9407      	str	r4, [sp, #28]
    5e4c:	9806      	ldr	r0, [sp, #24]
    5e4e:	9907      	ldr	r1, [sp, #28]
    5e50:	2307      	movs	r3, #7
    5e52:	aa1c      	add	r2, sp, #112	; 0x70
    5e54:	46b1      	mov	r9, r6
    5e56:	469c      	mov	ip, r3
    5e58:	9700      	str	r7, [sp, #0]
    5e5a:	0016      	movs	r6, r2
    5e5c:	e000      	b.n	5e60 <_svfiprintf_r+0x7e8>
    5e5e:	002e      	movs	r6, r5
    5e60:	4663      	mov	r3, ip
    5e62:	074a      	lsls	r2, r1, #29
    5e64:	4003      	ands	r3, r0
    5e66:	08c7      	lsrs	r7, r0, #3
    5e68:	08cc      	lsrs	r4, r1, #3
    5e6a:	433a      	orrs	r2, r7
    5e6c:	1e75      	subs	r5, r6, #1
    5e6e:	3330      	adds	r3, #48	; 0x30
    5e70:	0010      	movs	r0, r2
    5e72:	702b      	strb	r3, [r5, #0]
    5e74:	0021      	movs	r1, r4
    5e76:	4322      	orrs	r2, r4
    5e78:	d1f1      	bne.n	5e5e <_svfiprintf_r+0x7e6>
    5e7a:	9006      	str	r0, [sp, #24]
    5e7c:	9107      	str	r1, [sp, #28]
    5e7e:	9901      	ldr	r1, [sp, #4]
    5e80:	0032      	movs	r2, r6
    5e82:	9f00      	ldr	r7, [sp, #0]
    5e84:	464e      	mov	r6, r9
    5e86:	07c9      	lsls	r1, r1, #31
    5e88:	d400      	bmi.n	5e8c <_svfiprintf_r+0x814>
    5e8a:	e50f      	b.n	58ac <_svfiprintf_r+0x234>
    5e8c:	2b30      	cmp	r3, #48	; 0x30
    5e8e:	d100      	bne.n	5e92 <_svfiprintf_r+0x81a>
    5e90:	e50c      	b.n	58ac <_svfiprintf_r+0x234>
    5e92:	2330      	movs	r3, #48	; 0x30
    5e94:	1e95      	subs	r5, r2, #2
    5e96:	702b      	strb	r3, [r5, #0]
    5e98:	ab1c      	add	r3, sp, #112	; 0x70
    5e9a:	1b5b      	subs	r3, r3, r5
    5e9c:	9303      	str	r3, [sp, #12]
    5e9e:	e4a8      	b.n	57f2 <_svfiprintf_r+0x17a>
    5ea0:	aa0f      	add	r2, sp, #60	; 0x3c
    5ea2:	4659      	mov	r1, fp
    5ea4:	9802      	ldr	r0, [sp, #8]
    5ea6:	f7ff fb57 	bl	5558 <__ssprint_r>
    5eaa:	2800      	cmp	r0, #0
    5eac:	d1a7      	bne.n	5dfe <_svfiprintf_r+0x786>
    5eae:	9811      	ldr	r0, [sp, #68]	; 0x44
    5eb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5eb2:	ae1c      	add	r6, sp, #112	; 0x70
    5eb4:	e69c      	b.n	5bf0 <_svfiprintf_r+0x578>
    5eb6:	aa0f      	add	r2, sp, #60	; 0x3c
    5eb8:	4659      	mov	r1, fp
    5eba:	9802      	ldr	r0, [sp, #8]
    5ebc:	f7ff fb4c 	bl	5558 <__ssprint_r>
    5ec0:	2800      	cmp	r0, #0
    5ec2:	d19c      	bne.n	5dfe <_svfiprintf_r+0x786>
    5ec4:	9811      	ldr	r0, [sp, #68]	; 0x44
    5ec6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5ec8:	ae1c      	add	r6, sp, #112	; 0x70
    5eca:	e6a0      	b.n	5c0e <_svfiprintf_r+0x596>
    5ecc:	9b07      	ldr	r3, [sp, #28]
    5ece:	2b00      	cmp	r3, #0
    5ed0:	d057      	beq.n	5f82 <_svfiprintf_r+0x90a>
    5ed2:	ad1c      	add	r5, sp, #112	; 0x70
    5ed4:	46b1      	mov	r9, r6
    5ed6:	002e      	movs	r6, r5
    5ed8:	9c06      	ldr	r4, [sp, #24]
    5eda:	9d07      	ldr	r5, [sp, #28]
    5edc:	0020      	movs	r0, r4
    5ede:	0029      	movs	r1, r5
    5ee0:	220a      	movs	r2, #10
    5ee2:	2300      	movs	r3, #0
    5ee4:	f7fc f892 	bl	200c <__aeabi_uldivmod>
    5ee8:	3e01      	subs	r6, #1
    5eea:	3230      	adds	r2, #48	; 0x30
    5eec:	7032      	strb	r2, [r6, #0]
    5eee:	2300      	movs	r3, #0
    5ef0:	0020      	movs	r0, r4
    5ef2:	0029      	movs	r1, r5
    5ef4:	220a      	movs	r2, #10
    5ef6:	f7fc f889 	bl	200c <__aeabi_uldivmod>
    5efa:	0003      	movs	r3, r0
    5efc:	0004      	movs	r4, r0
    5efe:	000d      	movs	r5, r1
    5f00:	430b      	orrs	r3, r1
    5f02:	d1eb      	bne.n	5edc <_svfiprintf_r+0x864>
    5f04:	9406      	str	r4, [sp, #24]
    5f06:	9507      	str	r5, [sp, #28]
    5f08:	0035      	movs	r5, r6
    5f0a:	ab1c      	add	r3, sp, #112	; 0x70
    5f0c:	1b5b      	subs	r3, r3, r5
    5f0e:	464e      	mov	r6, r9
    5f10:	9303      	str	r3, [sp, #12]
    5f12:	e46e      	b.n	57f2 <_svfiprintf_r+0x17a>
    5f14:	2300      	movs	r3, #0
    5f16:	ad1c      	add	r5, sp, #112	; 0x70
    5f18:	9303      	str	r3, [sp, #12]
    5f1a:	e46a      	b.n	57f2 <_svfiprintf_r+0x17a>
    5f1c:	aa0f      	add	r2, sp, #60	; 0x3c
    5f1e:	4659      	mov	r1, fp
    5f20:	9802      	ldr	r0, [sp, #8]
    5f22:	f7ff fb19 	bl	5558 <__ssprint_r>
    5f26:	2800      	cmp	r0, #0
    5f28:	d000      	beq.n	5f2c <_svfiprintf_r+0x8b4>
    5f2a:	e768      	b.n	5dfe <_svfiprintf_r+0x786>
    5f2c:	9811      	ldr	r0, [sp, #68]	; 0x44
    5f2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5f30:	ae1c      	add	r6, sp, #112	; 0x70
    5f32:	e64c      	b.n	5bce <_svfiprintf_r+0x556>
    5f34:	aa0f      	add	r2, sp, #60	; 0x3c
    5f36:	4659      	mov	r1, fp
    5f38:	9802      	ldr	r0, [sp, #8]
    5f3a:	f7ff fb0d 	bl	5558 <__ssprint_r>
    5f3e:	2800      	cmp	r0, #0
    5f40:	d000      	beq.n	5f44 <_svfiprintf_r+0x8cc>
    5f42:	e75c      	b.n	5dfe <_svfiprintf_r+0x786>
    5f44:	9811      	ldr	r0, [sp, #68]	; 0x44
    5f46:	e6e5      	b.n	5d14 <_svfiprintf_r+0x69c>
    5f48:	783b      	ldrb	r3, [r7, #0]
    5f4a:	9208      	str	r2, [sp, #32]
    5f4c:	f7ff fbea 	bl	5724 <_svfiprintf_r+0xac>
    5f50:	9a08      	ldr	r2, [sp, #32]
    5f52:	8811      	ldrh	r1, [r2, #0]
    5f54:	e521      	b.n	599a <_svfiprintf_r+0x322>
    5f56:	2100      	movs	r1, #0
    5f58:	5e53      	ldrsh	r3, [r2, r1]
    5f5a:	e470      	b.n	583e <_svfiprintf_r+0x1c6>
    5f5c:	9b08      	ldr	r3, [sp, #32]
    5f5e:	881a      	ldrh	r2, [r3, #0]
    5f60:	f7ff fbf8 	bl	5754 <_svfiprintf_r+0xdc>
    5f64:	9b08      	ldr	r3, [sp, #32]
    5f66:	881a      	ldrh	r2, [r3, #0]
    5f68:	f7ff fc0a 	bl	5780 <_svfiprintf_r+0x108>
    5f6c:	9908      	ldr	r1, [sp, #32]
    5f6e:	9a04      	ldr	r2, [sp, #16]
    5f70:	680b      	ldr	r3, [r1, #0]
    5f72:	601a      	str	r2, [r3, #0]
    5f74:	17d2      	asrs	r2, r2, #31
    5f76:	605a      	str	r2, [r3, #4]
    5f78:	000b      	movs	r3, r1
    5f7a:	3304      	adds	r3, #4
    5f7c:	9308      	str	r3, [sp, #32]
    5f7e:	f7ff fb98 	bl	56b2 <_svfiprintf_r+0x3a>
    5f82:	9b06      	ldr	r3, [sp, #24]
    5f84:	2b09      	cmp	r3, #9
    5f86:	d8a4      	bhi.n	5ed2 <_svfiprintf_r+0x85a>
    5f88:	9c01      	ldr	r4, [sp, #4]
    5f8a:	2227      	movs	r2, #39	; 0x27
    5f8c:	9b06      	ldr	r3, [sp, #24]
    5f8e:	a912      	add	r1, sp, #72	; 0x48
    5f90:	3330      	adds	r3, #48	; 0x30
    5f92:	548b      	strb	r3, [r1, r2]
    5f94:	2301      	movs	r3, #1
    5f96:	9303      	str	r3, [sp, #12]
    5f98:	ab0c      	add	r3, sp, #48	; 0x30
    5f9a:	253f      	movs	r5, #63	; 0x3f
    5f9c:	469c      	mov	ip, r3
    5f9e:	9401      	str	r4, [sp, #4]
    5fa0:	4465      	add	r5, ip
    5fa2:	f7ff fc26 	bl	57f2 <_svfiprintf_r+0x17a>
    5fa6:	4663      	mov	r3, ip
    5fa8:	3701      	adds	r7, #1
    5faa:	431c      	orrs	r4, r3
    5fac:	783b      	ldrb	r3, [r7, #0]
    5fae:	f7ff fbb9 	bl	5724 <_svfiprintf_r+0xac>
    5fb2:	46a0      	mov	r8, r4
    5fb4:	e6bf      	b.n	5d36 <_svfiprintf_r+0x6be>
    5fb6:	2207      	movs	r2, #7
    5fb8:	9b08      	ldr	r3, [sp, #32]
    5fba:	3307      	adds	r3, #7
    5fbc:	4393      	bics	r3, r2
    5fbe:	3201      	adds	r2, #1
    5fc0:	4694      	mov	ip, r2
    5fc2:	449c      	add	ip, r3
    5fc4:	4662      	mov	r2, ip
    5fc6:	9208      	str	r2, [sp, #32]
    5fc8:	681a      	ldr	r2, [r3, #0]
    5fca:	685b      	ldr	r3, [r3, #4]
    5fcc:	0010      	movs	r0, r2
    5fce:	0019      	movs	r1, r3
    5fd0:	0003      	movs	r3, r0
    5fd2:	430b      	orrs	r3, r1
    5fd4:	9006      	str	r0, [sp, #24]
    5fd6:	9107      	str	r1, [sp, #28]
    5fd8:	2201      	movs	r2, #1
    5fda:	0019      	movs	r1, r3
    5fdc:	e51b      	b.n	5a16 <_svfiprintf_r+0x39e>
    5fde:	2207      	movs	r2, #7
    5fe0:	9b08      	ldr	r3, [sp, #32]
    5fe2:	3307      	adds	r3, #7
    5fe4:	4393      	bics	r3, r2
    5fe6:	3201      	adds	r2, #1
    5fe8:	4694      	mov	ip, r2
    5fea:	449c      	add	ip, r3
    5fec:	4662      	mov	r2, ip
    5fee:	9208      	str	r2, [sp, #32]
    5ff0:	681a      	ldr	r2, [r3, #0]
    5ff2:	685b      	ldr	r3, [r3, #4]
    5ff4:	0010      	movs	r0, r2
    5ff6:	0019      	movs	r1, r3
    5ff8:	0003      	movs	r3, r0
    5ffa:	430b      	orrs	r3, r1
    5ffc:	9006      	str	r0, [sp, #24]
    5ffe:	9107      	str	r1, [sp, #28]
    6000:	2200      	movs	r2, #0
    6002:	0019      	movs	r1, r3
    6004:	e507      	b.n	5a16 <_svfiprintf_r+0x39e>
    6006:	aa0f      	add	r2, sp, #60	; 0x3c
    6008:	4659      	mov	r1, fp
    600a:	9802      	ldr	r0, [sp, #8]
    600c:	f7ff faa4 	bl	5558 <__ssprint_r>
    6010:	2800      	cmp	r0, #0
    6012:	d000      	beq.n	6016 <_svfiprintf_r+0x99e>
    6014:	e6f3      	b.n	5dfe <_svfiprintf_r+0x786>
    6016:	9811      	ldr	r0, [sp, #68]	; 0x44
    6018:	9b10      	ldr	r3, [sp, #64]	; 0x40
    601a:	ae1c      	add	r6, sp, #112	; 0x70
    601c:	e5fb      	b.n	5c16 <_svfiprintf_r+0x59e>
    601e:	9a08      	ldr	r2, [sp, #32]
    6020:	9904      	ldr	r1, [sp, #16]
    6022:	6813      	ldr	r3, [r2, #0]
    6024:	6019      	str	r1, [r3, #0]
    6026:	0013      	movs	r3, r2
    6028:	3304      	adds	r3, #4
    602a:	9308      	str	r3, [sp, #32]
    602c:	f7ff fb41 	bl	56b2 <_svfiprintf_r+0x3a>
    6030:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6032:	46d8      	mov	r8, fp
    6034:	9300      	str	r3, [sp, #0]
    6036:	2b00      	cmp	r3, #0
    6038:	d100      	bne.n	603c <_svfiprintf_r+0x9c4>
    603a:	e67c      	b.n	5d36 <_svfiprintf_r+0x6be>
    603c:	aa0f      	add	r2, sp, #60	; 0x3c
    603e:	4659      	mov	r1, fp
    6040:	9802      	ldr	r0, [sp, #8]
    6042:	f7ff fa89 	bl	5558 <__ssprint_r>
    6046:	e676      	b.n	5d36 <_svfiprintf_r+0x6be>
    6048:	0028      	movs	r0, r5
    604a:	f7fe fd57 	bl	4afc <strlen>
    604e:	9003      	str	r0, [sp, #12]
    6050:	f7ff fbc7 	bl	57e2 <_svfiprintf_r+0x16a>
    6054:	9303      	str	r3, [sp, #12]
    6056:	2b06      	cmp	r3, #6
    6058:	d901      	bls.n	605e <_svfiprintf_r+0x9e6>
    605a:	2306      	movs	r3, #6
    605c:	9303      	str	r3, [sp, #12]
    605e:	9b03      	ldr	r3, [sp, #12]
    6060:	4d24      	ldr	r5, [pc, #144]	; (60f4 <_svfiprintf_r+0xa7c>)
    6062:	9300      	str	r3, [sp, #0]
    6064:	464b      	mov	r3, r9
    6066:	9308      	str	r3, [sp, #32]
    6068:	e434      	b.n	58d4 <_svfiprintf_r+0x25c>
    606a:	2140      	movs	r1, #64	; 0x40
    606c:	f7fe ff5e 	bl	4f2c <_malloc_r>
    6070:	4643      	mov	r3, r8
    6072:	6018      	str	r0, [r3, #0]
    6074:	6118      	str	r0, [r3, #16]
    6076:	2800      	cmp	r0, #0
    6078:	d01f      	beq.n	60ba <_svfiprintf_r+0xa42>
    607a:	2340      	movs	r3, #64	; 0x40
    607c:	4642      	mov	r2, r8
    607e:	6153      	str	r3, [r2, #20]
    6080:	f7ff fb0d 	bl	569e <_svfiprintf_r+0x26>
    6084:	2301      	movs	r3, #1
    6086:	425b      	negs	r3, r3
    6088:	9304      	str	r3, [sp, #16]
    608a:	e659      	b.n	5d40 <_svfiprintf_r+0x6c8>
    608c:	ab0c      	add	r3, sp, #48	; 0x30
    608e:	79db      	ldrb	r3, [r3, #7]
    6090:	9401      	str	r4, [sp, #4]
    6092:	4698      	mov	r8, r3
    6094:	464b      	mov	r3, r9
    6096:	9308      	str	r3, [sp, #32]
    6098:	4653      	mov	r3, sl
    609a:	9303      	str	r3, [sp, #12]
    609c:	2300      	movs	r3, #0
    609e:	469a      	mov	sl, r3
    60a0:	f7ff fba7 	bl	57f2 <_svfiprintf_r+0x17a>
    60a4:	9b08      	ldr	r3, [sp, #32]
    60a6:	1d1a      	adds	r2, r3, #4
    60a8:	681b      	ldr	r3, [r3, #0]
    60aa:	469a      	mov	sl, r3
    60ac:	2b00      	cmp	r3, #0
    60ae:	db0a      	blt.n	60c6 <_svfiprintf_r+0xa4e>
    60b0:	787b      	ldrb	r3, [r7, #1]
    60b2:	9208      	str	r2, [sp, #32]
    60b4:	000f      	movs	r7, r1
    60b6:	f7ff fb35 	bl	5724 <_svfiprintf_r+0xac>
    60ba:	230c      	movs	r3, #12
    60bc:	9a02      	ldr	r2, [sp, #8]
    60be:	6013      	str	r3, [r2, #0]
    60c0:	3b0d      	subs	r3, #13
    60c2:	9304      	str	r3, [sp, #16]
    60c4:	e63c      	b.n	5d40 <_svfiprintf_r+0x6c8>
    60c6:	2301      	movs	r3, #1
    60c8:	425b      	negs	r3, r3
    60ca:	469a      	mov	sl, r3
    60cc:	e7f0      	b.n	60b0 <_svfiprintf_r+0xa38>
    60ce:	aa0c      	add	r2, sp, #48	; 0x30
    60d0:	71d5      	strb	r5, [r2, #7]
    60d2:	e4e4      	b.n	5a9e <_svfiprintf_r+0x426>
    60d4:	ab0c      	add	r3, sp, #48	; 0x30
    60d6:	71dd      	strb	r5, [r3, #7]
    60d8:	f7ff fba6 	bl	5828 <_svfiprintf_r+0x1b0>
    60dc:	ab0c      	add	r3, sp, #48	; 0x30
    60de:	71dd      	strb	r5, [r3, #7]
    60e0:	e4fc      	b.n	5adc <_svfiprintf_r+0x464>
    60e2:	aa0c      	add	r2, sp, #48	; 0x30
    60e4:	71d5      	strb	r5, [r2, #7]
    60e6:	e44c      	b.n	5982 <_svfiprintf_r+0x30a>
    60e8:	aa0c      	add	r2, sp, #48	; 0x30
    60ea:	71d5      	strb	r5, [r2, #7]
    60ec:	e539      	b.n	5b62 <_svfiprintf_r+0x4ea>
    60ee:	ab0c      	add	r3, sp, #48	; 0x30
    60f0:	71dd      	strb	r5, [r3, #7]
    60f2:	e46b      	b.n	59cc <_svfiprintf_r+0x354>
    60f4:	00006d78 	.word	0x00006d78

000060f8 <__register_exitproc>:
    60f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    60fa:	464e      	mov	r6, r9
    60fc:	4645      	mov	r5, r8
    60fe:	46de      	mov	lr, fp
    6100:	4657      	mov	r7, sl
    6102:	b5e0      	push	{r5, r6, r7, lr}
    6104:	4d36      	ldr	r5, [pc, #216]	; (61e0 <__register_exitproc+0xe8>)
    6106:	b083      	sub	sp, #12
    6108:	0006      	movs	r6, r0
    610a:	6828      	ldr	r0, [r5, #0]
    610c:	4698      	mov	r8, r3
    610e:	000f      	movs	r7, r1
    6110:	4691      	mov	r9, r2
    6112:	f7fe ff07 	bl	4f24 <__retarget_lock_acquire_recursive>
    6116:	4b33      	ldr	r3, [pc, #204]	; (61e4 <__register_exitproc+0xec>)
    6118:	681c      	ldr	r4, [r3, #0]
    611a:	23a4      	movs	r3, #164	; 0xa4
    611c:	005b      	lsls	r3, r3, #1
    611e:	58e0      	ldr	r0, [r4, r3]
    6120:	2800      	cmp	r0, #0
    6122:	d052      	beq.n	61ca <__register_exitproc+0xd2>
    6124:	6843      	ldr	r3, [r0, #4]
    6126:	2b1f      	cmp	r3, #31
    6128:	dc13      	bgt.n	6152 <__register_exitproc+0x5a>
    612a:	1c5a      	adds	r2, r3, #1
    612c:	9201      	str	r2, [sp, #4]
    612e:	2e00      	cmp	r6, #0
    6130:	d128      	bne.n	6184 <__register_exitproc+0x8c>
    6132:	9a01      	ldr	r2, [sp, #4]
    6134:	3302      	adds	r3, #2
    6136:	009b      	lsls	r3, r3, #2
    6138:	6042      	str	r2, [r0, #4]
    613a:	501f      	str	r7, [r3, r0]
    613c:	6828      	ldr	r0, [r5, #0]
    613e:	f7fe fef3 	bl	4f28 <__retarget_lock_release_recursive>
    6142:	2000      	movs	r0, #0
    6144:	b003      	add	sp, #12
    6146:	bc3c      	pop	{r2, r3, r4, r5}
    6148:	4690      	mov	r8, r2
    614a:	4699      	mov	r9, r3
    614c:	46a2      	mov	sl, r4
    614e:	46ab      	mov	fp, r5
    6150:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6152:	4b25      	ldr	r3, [pc, #148]	; (61e8 <__register_exitproc+0xf0>)
    6154:	2b00      	cmp	r3, #0
    6156:	d03d      	beq.n	61d4 <__register_exitproc+0xdc>
    6158:	20c8      	movs	r0, #200	; 0xc8
    615a:	0040      	lsls	r0, r0, #1
    615c:	e000      	b.n	6160 <__register_exitproc+0x68>
    615e:	bf00      	nop
    6160:	2800      	cmp	r0, #0
    6162:	d037      	beq.n	61d4 <__register_exitproc+0xdc>
    6164:	22a4      	movs	r2, #164	; 0xa4
    6166:	2300      	movs	r3, #0
    6168:	0052      	lsls	r2, r2, #1
    616a:	58a1      	ldr	r1, [r4, r2]
    616c:	6043      	str	r3, [r0, #4]
    616e:	6001      	str	r1, [r0, #0]
    6170:	50a0      	str	r0, [r4, r2]
    6172:	3240      	adds	r2, #64	; 0x40
    6174:	5083      	str	r3, [r0, r2]
    6176:	3204      	adds	r2, #4
    6178:	5083      	str	r3, [r0, r2]
    617a:	3301      	adds	r3, #1
    617c:	9301      	str	r3, [sp, #4]
    617e:	2300      	movs	r3, #0
    6180:	2e00      	cmp	r6, #0
    6182:	d0d6      	beq.n	6132 <__register_exitproc+0x3a>
    6184:	009a      	lsls	r2, r3, #2
    6186:	4692      	mov	sl, r2
    6188:	4482      	add	sl, r0
    618a:	464a      	mov	r2, r9
    618c:	2188      	movs	r1, #136	; 0x88
    618e:	4654      	mov	r4, sl
    6190:	5062      	str	r2, [r4, r1]
    6192:	22c4      	movs	r2, #196	; 0xc4
    6194:	0052      	lsls	r2, r2, #1
    6196:	4691      	mov	r9, r2
    6198:	4481      	add	r9, r0
    619a:	464a      	mov	r2, r9
    619c:	3987      	subs	r1, #135	; 0x87
    619e:	4099      	lsls	r1, r3
    61a0:	6812      	ldr	r2, [r2, #0]
    61a2:	468b      	mov	fp, r1
    61a4:	430a      	orrs	r2, r1
    61a6:	4694      	mov	ip, r2
    61a8:	464a      	mov	r2, r9
    61aa:	4661      	mov	r1, ip
    61ac:	6011      	str	r1, [r2, #0]
    61ae:	2284      	movs	r2, #132	; 0x84
    61b0:	4641      	mov	r1, r8
    61b2:	0052      	lsls	r2, r2, #1
    61b4:	50a1      	str	r1, [r4, r2]
    61b6:	2e02      	cmp	r6, #2
    61b8:	d1bb      	bne.n	6132 <__register_exitproc+0x3a>
    61ba:	0002      	movs	r2, r0
    61bc:	465c      	mov	r4, fp
    61be:	328d      	adds	r2, #141	; 0x8d
    61c0:	32ff      	adds	r2, #255	; 0xff
    61c2:	6811      	ldr	r1, [r2, #0]
    61c4:	430c      	orrs	r4, r1
    61c6:	6014      	str	r4, [r2, #0]
    61c8:	e7b3      	b.n	6132 <__register_exitproc+0x3a>
    61ca:	0020      	movs	r0, r4
    61cc:	304d      	adds	r0, #77	; 0x4d
    61ce:	30ff      	adds	r0, #255	; 0xff
    61d0:	50e0      	str	r0, [r4, r3]
    61d2:	e7a7      	b.n	6124 <__register_exitproc+0x2c>
    61d4:	6828      	ldr	r0, [r5, #0]
    61d6:	f7fe fea7 	bl	4f28 <__retarget_lock_release_recursive>
    61da:	2001      	movs	r0, #1
    61dc:	4240      	negs	r0, r0
    61de:	e7b1      	b.n	6144 <__register_exitproc+0x4c>
    61e0:	20000430 	.word	0x20000430
    61e4:	00006be8 	.word	0x00006be8
    61e8:	00000000 	.word	0x00000000

000061ec <memmove>:
    61ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    61ee:	4288      	cmp	r0, r1
    61f0:	d90a      	bls.n	6208 <memmove+0x1c>
    61f2:	188b      	adds	r3, r1, r2
    61f4:	4298      	cmp	r0, r3
    61f6:	d207      	bcs.n	6208 <memmove+0x1c>
    61f8:	1e53      	subs	r3, r2, #1
    61fa:	2a00      	cmp	r2, #0
    61fc:	d003      	beq.n	6206 <memmove+0x1a>
    61fe:	5cca      	ldrb	r2, [r1, r3]
    6200:	54c2      	strb	r2, [r0, r3]
    6202:	3b01      	subs	r3, #1
    6204:	d2fb      	bcs.n	61fe <memmove+0x12>
    6206:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6208:	0005      	movs	r5, r0
    620a:	2a0f      	cmp	r2, #15
    620c:	d808      	bhi.n	6220 <memmove+0x34>
    620e:	2a00      	cmp	r2, #0
    6210:	d0f9      	beq.n	6206 <memmove+0x1a>
    6212:	2300      	movs	r3, #0
    6214:	5ccc      	ldrb	r4, [r1, r3]
    6216:	54ec      	strb	r4, [r5, r3]
    6218:	3301      	adds	r3, #1
    621a:	4293      	cmp	r3, r2
    621c:	d1fa      	bne.n	6214 <memmove+0x28>
    621e:	e7f2      	b.n	6206 <memmove+0x1a>
    6220:	000b      	movs	r3, r1
    6222:	4303      	orrs	r3, r0
    6224:	079b      	lsls	r3, r3, #30
    6226:	d12d      	bne.n	6284 <memmove+0x98>
    6228:	0015      	movs	r5, r2
    622a:	000c      	movs	r4, r1
    622c:	0003      	movs	r3, r0
    622e:	3d10      	subs	r5, #16
    6230:	092f      	lsrs	r7, r5, #4
    6232:	3701      	adds	r7, #1
    6234:	013f      	lsls	r7, r7, #4
    6236:	19c7      	adds	r7, r0, r7
    6238:	6826      	ldr	r6, [r4, #0]
    623a:	601e      	str	r6, [r3, #0]
    623c:	6866      	ldr	r6, [r4, #4]
    623e:	605e      	str	r6, [r3, #4]
    6240:	68a6      	ldr	r6, [r4, #8]
    6242:	609e      	str	r6, [r3, #8]
    6244:	68e6      	ldr	r6, [r4, #12]
    6246:	3410      	adds	r4, #16
    6248:	60de      	str	r6, [r3, #12]
    624a:	3310      	adds	r3, #16
    624c:	429f      	cmp	r7, r3
    624e:	d1f3      	bne.n	6238 <memmove+0x4c>
    6250:	240f      	movs	r4, #15
    6252:	43a5      	bics	r5, r4
    6254:	3510      	adds	r5, #16
    6256:	1949      	adds	r1, r1, r5
    6258:	4014      	ands	r4, r2
    625a:	1945      	adds	r5, r0, r5
    625c:	2c03      	cmp	r4, #3
    625e:	d913      	bls.n	6288 <memmove+0x9c>
    6260:	2300      	movs	r3, #0
    6262:	1f27      	subs	r7, r4, #4
    6264:	08be      	lsrs	r6, r7, #2
    6266:	3601      	adds	r6, #1
    6268:	00b6      	lsls	r6, r6, #2
    626a:	58cc      	ldr	r4, [r1, r3]
    626c:	50ec      	str	r4, [r5, r3]
    626e:	3304      	adds	r3, #4
    6270:	42b3      	cmp	r3, r6
    6272:	d1fa      	bne.n	626a <memmove+0x7e>
    6274:	2603      	movs	r6, #3
    6276:	43b7      	bics	r7, r6
    6278:	1d3c      	adds	r4, r7, #4
    627a:	1909      	adds	r1, r1, r4
    627c:	192d      	adds	r5, r5, r4
    627e:	4032      	ands	r2, r6
    6280:	d1c7      	bne.n	6212 <memmove+0x26>
    6282:	e7c0      	b.n	6206 <memmove+0x1a>
    6284:	0005      	movs	r5, r0
    6286:	e7c4      	b.n	6212 <memmove+0x26>
    6288:	0022      	movs	r2, r4
    628a:	e7c0      	b.n	620e <memmove+0x22>

0000628c <_realloc_r>:
    628c:	b5f0      	push	{r4, r5, r6, r7, lr}
    628e:	464e      	mov	r6, r9
    6290:	4645      	mov	r5, r8
    6292:	46de      	mov	lr, fp
    6294:	4657      	mov	r7, sl
    6296:	b5e0      	push	{r5, r6, r7, lr}
    6298:	b085      	sub	sp, #20
    629a:	9001      	str	r0, [sp, #4]
    629c:	000e      	movs	r6, r1
    629e:	0015      	movs	r5, r2
    62a0:	2900      	cmp	r1, #0
    62a2:	d100      	bne.n	62a6 <_realloc_r+0x1a>
    62a4:	e09e      	b.n	63e4 <_realloc_r+0x158>
    62a6:	0037      	movs	r7, r6
    62a8:	9801      	ldr	r0, [sp, #4]
    62aa:	3f08      	subs	r7, #8
    62ac:	f7ff f932 	bl	5514 <__malloc_lock>
    62b0:	687a      	ldr	r2, [r7, #4]
    62b2:	2303      	movs	r3, #3
    62b4:	0014      	movs	r4, r2
    62b6:	439c      	bics	r4, r3
    62b8:	002b      	movs	r3, r5
    62ba:	330b      	adds	r3, #11
    62bc:	46b9      	mov	r9, r7
    62be:	2b16      	cmp	r3, #22
    62c0:	d847      	bhi.n	6352 <_realloc_r+0xc6>
    62c2:	2110      	movs	r1, #16
    62c4:	2310      	movs	r3, #16
    62c6:	4688      	mov	r8, r1
    62c8:	4545      	cmp	r5, r8
    62ca:	d846      	bhi.n	635a <_realloc_r+0xce>
    62cc:	429c      	cmp	r4, r3
    62ce:	da49      	bge.n	6364 <_realloc_r+0xd8>
    62d0:	49cc      	ldr	r1, [pc, #816]	; (6604 <_realloc_r+0x378>)
    62d2:	1938      	adds	r0, r7, r4
    62d4:	468b      	mov	fp, r1
    62d6:	6889      	ldr	r1, [r1, #8]
    62d8:	9002      	str	r0, [sp, #8]
    62da:	4288      	cmp	r0, r1
    62dc:	d100      	bne.n	62e0 <_realloc_r+0x54>
    62de:	e0c2      	b.n	6466 <_realloc_r+0x1da>
    62e0:	2101      	movs	r1, #1
    62e2:	468a      	mov	sl, r1
    62e4:	6840      	ldr	r0, [r0, #4]
    62e6:	0001      	movs	r1, r0
    62e8:	9003      	str	r0, [sp, #12]
    62ea:	4650      	mov	r0, sl
    62ec:	4381      	bics	r1, r0
    62ee:	468c      	mov	ip, r1
    62f0:	9902      	ldr	r1, [sp, #8]
    62f2:	468b      	mov	fp, r1
    62f4:	44dc      	add	ip, fp
    62f6:	4661      	mov	r1, ip
    62f8:	6849      	ldr	r1, [r1, #4]
    62fa:	4201      	tst	r1, r0
    62fc:	d04d      	beq.n	639a <_realloc_r+0x10e>
    62fe:	4210      	tst	r0, r2
    6300:	d100      	bne.n	6304 <_realloc_r+0x78>
    6302:	e0a2      	b.n	644a <_realloc_r+0x1be>
    6304:	0029      	movs	r1, r5
    6306:	9801      	ldr	r0, [sp, #4]
    6308:	f7fe fe10 	bl	4f2c <_malloc_r>
    630c:	1e05      	subs	r5, r0, #0
    630e:	d039      	beq.n	6384 <_realloc_r+0xf8>
    6310:	2301      	movs	r3, #1
    6312:	0002      	movs	r2, r0
    6314:	6879      	ldr	r1, [r7, #4]
    6316:	3a08      	subs	r2, #8
    6318:	4399      	bics	r1, r3
    631a:	187f      	adds	r7, r7, r1
    631c:	42ba      	cmp	r2, r7
    631e:	d100      	bne.n	6322 <_realloc_r+0x96>
    6320:	e12e      	b.n	6580 <_realloc_r+0x2f4>
    6322:	1f22      	subs	r2, r4, #4
    6324:	2a24      	cmp	r2, #36	; 0x24
    6326:	d900      	bls.n	632a <_realloc_r+0x9e>
    6328:	e114      	b.n	6554 <_realloc_r+0x2c8>
    632a:	2a13      	cmp	r2, #19
    632c:	d900      	bls.n	6330 <_realloc_r+0xa4>
    632e:	e0e8      	b.n	6502 <_realloc_r+0x276>
    6330:	0003      	movs	r3, r0
    6332:	0032      	movs	r2, r6
    6334:	6811      	ldr	r1, [r2, #0]
    6336:	6019      	str	r1, [r3, #0]
    6338:	6851      	ldr	r1, [r2, #4]
    633a:	6059      	str	r1, [r3, #4]
    633c:	6892      	ldr	r2, [r2, #8]
    633e:	609a      	str	r2, [r3, #8]
    6340:	9c01      	ldr	r4, [sp, #4]
    6342:	0031      	movs	r1, r6
    6344:	0020      	movs	r0, r4
    6346:	f7fe fd0f 	bl	4d68 <_free_r>
    634a:	0020      	movs	r0, r4
    634c:	f7ff f8ea 	bl	5524 <__malloc_unlock>
    6350:	e01b      	b.n	638a <_realloc_r+0xfe>
    6352:	2107      	movs	r1, #7
    6354:	438b      	bics	r3, r1
    6356:	4698      	mov	r8, r3
    6358:	d5b6      	bpl.n	62c8 <_realloc_r+0x3c>
    635a:	230c      	movs	r3, #12
    635c:	9a01      	ldr	r2, [sp, #4]
    635e:	2500      	movs	r5, #0
    6360:	6013      	str	r3, [r2, #0]
    6362:	e012      	b.n	638a <_realloc_r+0xfe>
    6364:	0035      	movs	r5, r6
    6366:	4643      	mov	r3, r8
    6368:	1ae3      	subs	r3, r4, r3
    636a:	2b0f      	cmp	r3, #15
    636c:	d825      	bhi.n	63ba <_realloc_r+0x12e>
    636e:	464b      	mov	r3, r9
    6370:	2201      	movs	r2, #1
    6372:	4649      	mov	r1, r9
    6374:	685b      	ldr	r3, [r3, #4]
    6376:	4013      	ands	r3, r2
    6378:	4323      	orrs	r3, r4
    637a:	604b      	str	r3, [r1, #4]
    637c:	444c      	add	r4, r9
    637e:	6863      	ldr	r3, [r4, #4]
    6380:	431a      	orrs	r2, r3
    6382:	6062      	str	r2, [r4, #4]
    6384:	9801      	ldr	r0, [sp, #4]
    6386:	f7ff f8cd 	bl	5524 <__malloc_unlock>
    638a:	0028      	movs	r0, r5
    638c:	b005      	add	sp, #20
    638e:	bc3c      	pop	{r2, r3, r4, r5}
    6390:	4690      	mov	r8, r2
    6392:	4699      	mov	r9, r3
    6394:	46a2      	mov	sl, r4
    6396:	46ab      	mov	fp, r5
    6398:	bdf0      	pop	{r4, r5, r6, r7, pc}
    639a:	2103      	movs	r1, #3
    639c:	9803      	ldr	r0, [sp, #12]
    639e:	468c      	mov	ip, r1
    63a0:	4388      	bics	r0, r1
    63a2:	1821      	adds	r1, r4, r0
    63a4:	468b      	mov	fp, r1
    63a6:	4299      	cmp	r1, r3
    63a8:	db21      	blt.n	63ee <_realloc_r+0x162>
    63aa:	9a02      	ldr	r2, [sp, #8]
    63ac:	0035      	movs	r5, r6
    63ae:	68d3      	ldr	r3, [r2, #12]
    63b0:	6892      	ldr	r2, [r2, #8]
    63b2:	465c      	mov	r4, fp
    63b4:	60d3      	str	r3, [r2, #12]
    63b6:	609a      	str	r2, [r3, #8]
    63b8:	e7d5      	b.n	6366 <_realloc_r+0xda>
    63ba:	464a      	mov	r2, r9
    63bc:	2001      	movs	r0, #1
    63be:	4646      	mov	r6, r8
    63c0:	6852      	ldr	r2, [r2, #4]
    63c2:	4649      	mov	r1, r9
    63c4:	4002      	ands	r2, r0
    63c6:	4332      	orrs	r2, r6
    63c8:	464e      	mov	r6, r9
    63ca:	4441      	add	r1, r8
    63cc:	4303      	orrs	r3, r0
    63ce:	6072      	str	r2, [r6, #4]
    63d0:	444c      	add	r4, r9
    63d2:	604b      	str	r3, [r1, #4]
    63d4:	6863      	ldr	r3, [r4, #4]
    63d6:	3108      	adds	r1, #8
    63d8:	4318      	orrs	r0, r3
    63da:	6060      	str	r0, [r4, #4]
    63dc:	9801      	ldr	r0, [sp, #4]
    63de:	f7fe fcc3 	bl	4d68 <_free_r>
    63e2:	e7cf      	b.n	6384 <_realloc_r+0xf8>
    63e4:	0011      	movs	r1, r2
    63e6:	f7fe fda1 	bl	4f2c <_malloc_r>
    63ea:	0005      	movs	r5, r0
    63ec:	e7cd      	b.n	638a <_realloc_r+0xfe>
    63ee:	4651      	mov	r1, sl
    63f0:	4211      	tst	r1, r2
    63f2:	d000      	beq.n	63f6 <_realloc_r+0x16a>
    63f4:	e786      	b.n	6304 <_realloc_r+0x78>
    63f6:	4661      	mov	r1, ip
    63f8:	683a      	ldr	r2, [r7, #0]
    63fa:	1aba      	subs	r2, r7, r2
    63fc:	4692      	mov	sl, r2
    63fe:	6852      	ldr	r2, [r2, #4]
    6400:	438a      	bics	r2, r1
    6402:	1880      	adds	r0, r0, r2
    6404:	4683      	mov	fp, r0
    6406:	44a3      	add	fp, r4
    6408:	459b      	cmp	fp, r3
    640a:	db26      	blt.n	645a <_realloc_r+0x1ce>
    640c:	9a02      	ldr	r2, [sp, #8]
    640e:	68d3      	ldr	r3, [r2, #12]
    6410:	6892      	ldr	r2, [r2, #8]
    6412:	60d3      	str	r3, [r2, #12]
    6414:	609a      	str	r2, [r3, #8]
    6416:	4653      	mov	r3, sl
    6418:	4652      	mov	r2, sl
    641a:	4655      	mov	r5, sl
    641c:	6892      	ldr	r2, [r2, #8]
    641e:	68db      	ldr	r3, [r3, #12]
    6420:	3508      	adds	r5, #8
    6422:	60d3      	str	r3, [r2, #12]
    6424:	609a      	str	r2, [r3, #8]
    6426:	1f22      	subs	r2, r4, #4
    6428:	2a24      	cmp	r2, #36	; 0x24
    642a:	d900      	bls.n	642e <_realloc_r+0x1a2>
    642c:	e096      	b.n	655c <_realloc_r+0x2d0>
    642e:	2a13      	cmp	r2, #19
    6430:	d972      	bls.n	6518 <_realloc_r+0x28c>
    6432:	4653      	mov	r3, sl
    6434:	6831      	ldr	r1, [r6, #0]
    6436:	6099      	str	r1, [r3, #8]
    6438:	6871      	ldr	r1, [r6, #4]
    643a:	60d9      	str	r1, [r3, #12]
    643c:	2a1b      	cmp	r2, #27
    643e:	d900      	bls.n	6442 <_realloc_r+0x1b6>
    6440:	e0a4      	b.n	658c <_realloc_r+0x300>
    6442:	0032      	movs	r2, r6
    6444:	3310      	adds	r3, #16
    6446:	3208      	adds	r2, #8
    6448:	e068      	b.n	651c <_realloc_r+0x290>
    644a:	683a      	ldr	r2, [r7, #0]
    644c:	1aba      	subs	r2, r7, r2
    644e:	4692      	mov	sl, r2
    6450:	4651      	mov	r1, sl
    6452:	2203      	movs	r2, #3
    6454:	6849      	ldr	r1, [r1, #4]
    6456:	4391      	bics	r1, r2
    6458:	000a      	movs	r2, r1
    645a:	4693      	mov	fp, r2
    645c:	44a3      	add	fp, r4
    645e:	459b      	cmp	fp, r3
    6460:	da00      	bge.n	6464 <_realloc_r+0x1d8>
    6462:	e74f      	b.n	6304 <_realloc_r+0x78>
    6464:	e7d7      	b.n	6416 <_realloc_r+0x18a>
    6466:	2003      	movs	r0, #3
    6468:	9902      	ldr	r1, [sp, #8]
    646a:	4684      	mov	ip, r0
    646c:	6849      	ldr	r1, [r1, #4]
    646e:	4381      	bics	r1, r0
    6470:	4640      	mov	r0, r8
    6472:	1909      	adds	r1, r1, r4
    6474:	3010      	adds	r0, #16
    6476:	9002      	str	r0, [sp, #8]
    6478:	4281      	cmp	r1, r0
    647a:	da58      	bge.n	652e <_realloc_r+0x2a2>
    647c:	07d2      	lsls	r2, r2, #31
    647e:	d500      	bpl.n	6482 <_realloc_r+0x1f6>
    6480:	e740      	b.n	6304 <_realloc_r+0x78>
    6482:	4660      	mov	r0, ip
    6484:	683a      	ldr	r2, [r7, #0]
    6486:	1aba      	subs	r2, r7, r2
    6488:	4692      	mov	sl, r2
    648a:	6852      	ldr	r2, [r2, #4]
    648c:	4382      	bics	r2, r0
    648e:	9802      	ldr	r0, [sp, #8]
    6490:	1851      	adds	r1, r2, r1
    6492:	9103      	str	r1, [sp, #12]
    6494:	4288      	cmp	r0, r1
    6496:	dce0      	bgt.n	645a <_realloc_r+0x1ce>
    6498:	4653      	mov	r3, sl
    649a:	4652      	mov	r2, sl
    649c:	4655      	mov	r5, sl
    649e:	6892      	ldr	r2, [r2, #8]
    64a0:	68db      	ldr	r3, [r3, #12]
    64a2:	3508      	adds	r5, #8
    64a4:	60d3      	str	r3, [r2, #12]
    64a6:	609a      	str	r2, [r3, #8]
    64a8:	1f22      	subs	r2, r4, #4
    64aa:	2a24      	cmp	r2, #36	; 0x24
    64ac:	d900      	bls.n	64b0 <_realloc_r+0x224>
    64ae:	e08e      	b.n	65ce <_realloc_r+0x342>
    64b0:	2a13      	cmp	r2, #19
    64b2:	d800      	bhi.n	64b6 <_realloc_r+0x22a>
    64b4:	e088      	b.n	65c8 <_realloc_r+0x33c>
    64b6:	4653      	mov	r3, sl
    64b8:	6831      	ldr	r1, [r6, #0]
    64ba:	6099      	str	r1, [r3, #8]
    64bc:	6871      	ldr	r1, [r6, #4]
    64be:	60d9      	str	r1, [r3, #12]
    64c0:	2a1b      	cmp	r2, #27
    64c2:	d900      	bls.n	64c6 <_realloc_r+0x23a>
    64c4:	e088      	b.n	65d8 <_realloc_r+0x34c>
    64c6:	0032      	movs	r2, r6
    64c8:	3310      	adds	r3, #16
    64ca:	3208      	adds	r2, #8
    64cc:	6811      	ldr	r1, [r2, #0]
    64ce:	6019      	str	r1, [r3, #0]
    64d0:	6851      	ldr	r1, [r2, #4]
    64d2:	6059      	str	r1, [r3, #4]
    64d4:	6892      	ldr	r2, [r2, #8]
    64d6:	609a      	str	r2, [r3, #8]
    64d8:	4651      	mov	r1, sl
    64da:	465b      	mov	r3, fp
    64dc:	4642      	mov	r2, r8
    64de:	4441      	add	r1, r8
    64e0:	6099      	str	r1, [r3, #8]
    64e2:	9b03      	ldr	r3, [sp, #12]
    64e4:	9801      	ldr	r0, [sp, #4]
    64e6:	1a9a      	subs	r2, r3, r2
    64e8:	2301      	movs	r3, #1
    64ea:	431a      	orrs	r2, r3
    64ec:	604a      	str	r2, [r1, #4]
    64ee:	4652      	mov	r2, sl
    64f0:	6852      	ldr	r2, [r2, #4]
    64f2:	4013      	ands	r3, r2
    64f4:	4642      	mov	r2, r8
    64f6:	4313      	orrs	r3, r2
    64f8:	4652      	mov	r2, sl
    64fa:	6053      	str	r3, [r2, #4]
    64fc:	f7ff f812 	bl	5524 <__malloc_unlock>
    6500:	e743      	b.n	638a <_realloc_r+0xfe>
    6502:	6833      	ldr	r3, [r6, #0]
    6504:	6003      	str	r3, [r0, #0]
    6506:	6873      	ldr	r3, [r6, #4]
    6508:	6043      	str	r3, [r0, #4]
    650a:	2a1b      	cmp	r2, #27
    650c:	d82d      	bhi.n	656a <_realloc_r+0x2de>
    650e:	0003      	movs	r3, r0
    6510:	0032      	movs	r2, r6
    6512:	3308      	adds	r3, #8
    6514:	3208      	adds	r2, #8
    6516:	e70d      	b.n	6334 <_realloc_r+0xa8>
    6518:	002b      	movs	r3, r5
    651a:	0032      	movs	r2, r6
    651c:	6811      	ldr	r1, [r2, #0]
    651e:	465c      	mov	r4, fp
    6520:	6019      	str	r1, [r3, #0]
    6522:	6851      	ldr	r1, [r2, #4]
    6524:	46d1      	mov	r9, sl
    6526:	6059      	str	r1, [r3, #4]
    6528:	6892      	ldr	r2, [r2, #8]
    652a:	609a      	str	r2, [r3, #8]
    652c:	e71b      	b.n	6366 <_realloc_r+0xda>
    652e:	4643      	mov	r3, r8
    6530:	18fa      	adds	r2, r7, r3
    6532:	465b      	mov	r3, fp
    6534:	609a      	str	r2, [r3, #8]
    6536:	4643      	mov	r3, r8
    6538:	1ac9      	subs	r1, r1, r3
    653a:	2301      	movs	r3, #1
    653c:	4319      	orrs	r1, r3
    653e:	6051      	str	r1, [r2, #4]
    6540:	687a      	ldr	r2, [r7, #4]
    6542:	9801      	ldr	r0, [sp, #4]
    6544:	4013      	ands	r3, r2
    6546:	4642      	mov	r2, r8
    6548:	4313      	orrs	r3, r2
    654a:	607b      	str	r3, [r7, #4]
    654c:	f7fe ffea 	bl	5524 <__malloc_unlock>
    6550:	0035      	movs	r5, r6
    6552:	e71a      	b.n	638a <_realloc_r+0xfe>
    6554:	0031      	movs	r1, r6
    6556:	f7ff fe49 	bl	61ec <memmove>
    655a:	e6f1      	b.n	6340 <_realloc_r+0xb4>
    655c:	0031      	movs	r1, r6
    655e:	0028      	movs	r0, r5
    6560:	f7ff fe44 	bl	61ec <memmove>
    6564:	465c      	mov	r4, fp
    6566:	46d1      	mov	r9, sl
    6568:	e6fd      	b.n	6366 <_realloc_r+0xda>
    656a:	68b3      	ldr	r3, [r6, #8]
    656c:	6083      	str	r3, [r0, #8]
    656e:	68f3      	ldr	r3, [r6, #12]
    6570:	60c3      	str	r3, [r0, #12]
    6572:	2a24      	cmp	r2, #36	; 0x24
    6574:	d015      	beq.n	65a2 <_realloc_r+0x316>
    6576:	0003      	movs	r3, r0
    6578:	0032      	movs	r2, r6
    657a:	3310      	adds	r3, #16
    657c:	3210      	adds	r2, #16
    657e:	e6d9      	b.n	6334 <_realloc_r+0xa8>
    6580:	6853      	ldr	r3, [r2, #4]
    6582:	2203      	movs	r2, #3
    6584:	4393      	bics	r3, r2
    6586:	18e4      	adds	r4, r4, r3
    6588:	0035      	movs	r5, r6
    658a:	e6ec      	b.n	6366 <_realloc_r+0xda>
    658c:	4653      	mov	r3, sl
    658e:	68b1      	ldr	r1, [r6, #8]
    6590:	6119      	str	r1, [r3, #16]
    6592:	68f1      	ldr	r1, [r6, #12]
    6594:	6159      	str	r1, [r3, #20]
    6596:	2a24      	cmp	r2, #36	; 0x24
    6598:	d00c      	beq.n	65b4 <_realloc_r+0x328>
    659a:	0032      	movs	r2, r6
    659c:	3318      	adds	r3, #24
    659e:	3210      	adds	r2, #16
    65a0:	e7bc      	b.n	651c <_realloc_r+0x290>
    65a2:	6933      	ldr	r3, [r6, #16]
    65a4:	0032      	movs	r2, r6
    65a6:	6103      	str	r3, [r0, #16]
    65a8:	0003      	movs	r3, r0
    65aa:	6971      	ldr	r1, [r6, #20]
    65ac:	3318      	adds	r3, #24
    65ae:	3218      	adds	r2, #24
    65b0:	6141      	str	r1, [r0, #20]
    65b2:	e6bf      	b.n	6334 <_realloc_r+0xa8>
    65b4:	4653      	mov	r3, sl
    65b6:	6932      	ldr	r2, [r6, #16]
    65b8:	4651      	mov	r1, sl
    65ba:	619a      	str	r2, [r3, #24]
    65bc:	0032      	movs	r2, r6
    65be:	6970      	ldr	r0, [r6, #20]
    65c0:	3320      	adds	r3, #32
    65c2:	3218      	adds	r2, #24
    65c4:	61c8      	str	r0, [r1, #28]
    65c6:	e7a9      	b.n	651c <_realloc_r+0x290>
    65c8:	002b      	movs	r3, r5
    65ca:	0032      	movs	r2, r6
    65cc:	e77e      	b.n	64cc <_realloc_r+0x240>
    65ce:	0031      	movs	r1, r6
    65d0:	0028      	movs	r0, r5
    65d2:	f7ff fe0b 	bl	61ec <memmove>
    65d6:	e77f      	b.n	64d8 <_realloc_r+0x24c>
    65d8:	4653      	mov	r3, sl
    65da:	68b1      	ldr	r1, [r6, #8]
    65dc:	6119      	str	r1, [r3, #16]
    65de:	68f1      	ldr	r1, [r6, #12]
    65e0:	6159      	str	r1, [r3, #20]
    65e2:	2a24      	cmp	r2, #36	; 0x24
    65e4:	d003      	beq.n	65ee <_realloc_r+0x362>
    65e6:	0032      	movs	r2, r6
    65e8:	3318      	adds	r3, #24
    65ea:	3210      	adds	r2, #16
    65ec:	e76e      	b.n	64cc <_realloc_r+0x240>
    65ee:	4653      	mov	r3, sl
    65f0:	6932      	ldr	r2, [r6, #16]
    65f2:	4651      	mov	r1, sl
    65f4:	619a      	str	r2, [r3, #24]
    65f6:	0032      	movs	r2, r6
    65f8:	6970      	ldr	r0, [r6, #20]
    65fa:	3320      	adds	r3, #32
    65fc:	3218      	adds	r2, #24
    65fe:	61c8      	str	r0, [r1, #28]
    6600:	e764      	b.n	64cc <_realloc_r+0x240>
    6602:	46c0      	nop			; (mov r8, r8)
    6604:	20000434 	.word	0x20000434
    6608:	682f2e2e 	.word	0x682f2e2e
    660c:	732f6c61 	.word	0x732f6c61
    6610:	682f6372 	.word	0x682f6372
    6614:	695f6c61 	.word	0x695f6c61
    6618:	6d5f6332 	.word	0x6d5f6332
    661c:	6e79735f 	.word	0x6e79735f
    6620:	00632e63 	.word	0x00632e63
    6624:	682f2e2e 	.word	0x682f2e2e
    6628:	732f6c61 	.word	0x732f6c61
    662c:	682f6372 	.word	0x682f6372
    6630:	695f6c61 	.word	0x695f6c61
    6634:	00632e6f 	.word	0x00632e6f
    6638:	682f2e2e 	.word	0x682f2e2e
    663c:	732f6c61 	.word	0x732f6c61
    6640:	682f6372 	.word	0x682f6372
    6644:	755f6c61 	.word	0x755f6c61
    6648:	74726173 	.word	0x74726173
    664c:	7973615f 	.word	0x7973615f
    6650:	632e636e 	.word	0x632e636e
    6654:	00000000 	.word	0x00000000
    6658:	682f2e2e 	.word	0x682f2e2e
    665c:	752f6c61 	.word	0x752f6c61
    6660:	736c6974 	.word	0x736c6974
    6664:	6372732f 	.word	0x6372732f
    6668:	6974752f 	.word	0x6974752f
    666c:	725f736c 	.word	0x725f736c
    6670:	62676e69 	.word	0x62676e69
    6674:	65666675 	.word	0x65666675
    6678:	00632e72 	.word	0x00632e72

0000667c <_usarts>:
    667c:	00000005 40100004 00030000 0000fb15     .......@........
    668c:	00000000                                ....

00006690 <_i2cms>:
    6690:	00000001 00200014 00000100 00000022     ...... ....."...
    66a0:	00d70000 007a1200                       ......z.

000066a8 <_i2css>:
	...

000066b8 <sercomspi_regs>:
	...
    66cc:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    66dc:	65735f6c 6d6f6372 0000632e 70696843     l_sercom.c..Chip
    66ec:	6d614e20 09203a65 0a0d7325 00000000      Name: .%s......
    66fc:	756e614d 74636166 72657275 2509203a     Manufacturer: .%
    670c:	000a0d73 65746e49 63616672 72502065     s...Interface Pr
    671c:	636f746f 203a6c6f 0d732509 0000000a     otocol: .%s.....
    672c:	70707553 5620796c 20746c6f 3a78614d     Supply Volt Max:
    673c:	2e250920 56206631 00000a0d 70707553      .%.1f V....Supp
    674c:	5620796c 20746c6f 3a6e694d 2e250920     ly Volt Min: .%.
    675c:	56206631 00000a0d 6978614d 206d756d     1f V....Maximum 
    676c:	72727543 3a746e65 2e250920 75206631     Current: .%.1f u
    677c:	000a0d41 2078614d 706d6554 74617265     A...Max Temperat
    678c:	3a657275 2e250920 43206631 00000a0d     ure: .%.1f C....
    679c:	65766944 65562072 6f697372 09203a6e     Diver Version: .
    67ac:	2e255609 252e6631 0d64322e 0000000a     .V%.1f.%.2d.....
    67bc:	6c696166 74206465 6572206f 000a6461     failed to read..
    67cc:	6d65540a 3a432070 322e2520 00000a66     .Temp C: %.2f...
    67dc:	706d6554 203a4620 66322e25 0000000a     Temp F: %.2f....
    67ec:	696d7548 79746964 2e25203a 000a6632     Humidity: %.2f..
    67fc:	6d65540a 20432070 706d6173 3a64656c     .Temp C sampled:
    680c:	322e2520 00000a66 696d7548 79746964      %.2f...Humidity
    681c:	6d617320 64656c70 2e25203a 000a6632      sampled: %.2f..
    682c:	69726573 6e206c61 65626d75 203a2072     serial number : 
    683c:	0a756c25 00000000 6165480a 20726574     %lu......Heater 
    684c:	706d6554 203a4320 66322e25 0000000a     Temp C: %.2f....
    685c:	74616548 54207265 20706d65 25203a46     Heater Temp F: %
    686c:	0a66322e 00000000 74616548 48207265     .2f.....Heater H
    687c:	64696d75 3a797469 322e2520 00000a66     umidity: %.2f...

0000688c <READ_PRECISION>:
    688c:	00e0f6fd                                ....

00006890 <HEATER_POWER>:
    6890:	242f3239 0000151e 34746873 203a7830     92/$....sht40x: 
    68a0:	6c696166 74206465 7325206f 000a0d2e     failed to %s....
    68b0:	34746873 203a7830 616c6564 736d5f79     sht40x: delay_ms
    68c0:	20736920 6c6c756e 00000a0d 34746873      is null....sht4
    68d0:	203a7830 5f633269 74696e69 20736920     0x: i2c_init is 
    68e0:	6c6c756e 00000a0d 34746873 203a7830     null....sht40x: 
    68f0:	5f633269 6e696564 69207469 756e2073     i2c_deinit is nu
    6900:	0a0d6c6c 00000000 34746873 203a7830     ll......sht40x: 
    6910:	5f633269 64616572 20736920 6c6c756e     i2c_read is null
    6920:	00000a0d 34746873 203a7830 5f633269     ....sht40x: i2c_
    6930:	74697277 73692065 6c756e20 000a0d6c     write is null...
    6940:	74696e69 696c6169 6920657a 00006332     initialize i2c..
    6950:	692d6564 6974696e 7a696c61 32692065     de-initialize i2
    6960:	00000063 20746567 20633269 72646461     c...get i2c addr
    6970:	00737365 20746567 69766564 76206563     ess.get device v
    6980:	61697261 0000746e 74697277 65742065     ariant..write te
    6990:	6120706d 6820646e 64696d75 20797469     mp and humidity 
    69a0:	00646d63 64616572 6d657420 6e612070     cmd.read temp an
    69b0:	75682064 6964696d 00007974 74697277     d humidity..writ
    69c0:	49552065 6d632044 00000064 20746567     e UID cmd...get 
    69d0:	00444955 74697277 65682065 72657461     UID.write heater
    69e0:	646d6320 00000000 72206f74 74657365      cmd....to reset
    69f0:	00000000 34544853 00000030 00433249     ....SHT40...I2C.
    6a00:	736e6553 6f697269 0000006e 74696e69     Sensirion...init
    6a10:	696c6169 0000657a 20746573 69766564     ialize..set devi
    6a20:	76206563 61697261 0000746e 20746573     ce variant..set 
    6a30:	69766564 69206563 61206332 65726464     device i2c addre
    6a40:	00007373 64616572 74616420 00000061     ss..read data...
    6a50:	64616572 6d617320 20656c70 61746164     read sample data
    6a60:	00000000 64616572 72657320 206c6169     ....read serial 
    6a70:	626d756e 00007265 69746361 65746176     number..activate
    6a80:	61656820 00726574 74666f73 73657220      heater.soft res
    6a90:	73207465 6f736e65 00000072 20746567     et sensor...get 
    6aa0:	72646461 00737365 000026ac 0000267c     address..&..|&..
    6ab0:	0000268e 000025d0 0000268e 00002672     .&...%...&..r&..
    6ac0:	0000268e 000025d0 0000267c 0000267c     .&...%..|&..|&..
    6ad0:	00002672 000025d0 000025d8 000025d8     r&...%...%...%..
    6ae0:	000025d8 00002694 0000267c 0000267c     .%...&..|&..|&..
    6af0:	00002650 00002734 00002650 00002672     P&..4'..P&..r&..
    6b00:	00002650 00002734 0000267c 0000267c     P&..4'..|&..|&..
    6b10:	00002672 00002734 000025d8 000025d8     r&..4'...%...%..
    6b20:	000025d8 0000273e 00002a2c 0000297c     .%..>'..,*..|)..
    6b30:	0000297c 0000297a 00002a1e 00002a1e     |)..z)...*...*..
    6b40:	00002a14 0000297a 00002a1e 00002a14     .*..z)...*...*..
    6b50:	00002a1e 0000297a 00002a24 00002a24     .*..z)..$*..$*..
    6b60:	00002a24 00002ab4 00003770 00003752     $*...*..p7..R7..
    6b70:	0000370c 0000362a 0000370c 00003744     .7..*6...7..D7..
    6b80:	0000370c 0000362a 00003752 00003752     .7..*6..R7..R7..
    6b90:	00003744 0000362a 00003622 00003622     D7..*6.."6.."6..
    6ba0:	00003622 00003988 00003dd0 00003c90     "6...9...=...<..
    6bb0:	00003c90 00003c8c 00003da8 00003da8     .<...<...=...=..
    6bc0:	00003d9a 00003c8c 00003da8 00003d9a     .=...<...=...=..
    6bd0:	00003da8 00003c8c 00003db0 00003db0     .=...<...=...=..
    6be0:	00003db0 00003fb4                       .=...?..

00006be8 <_global_impure_ptr>:
    6be8:	20000008 00005a78 00005b5c 00005b5c     ... xZ..\[..\[..
    6bf8:	00005a70 00005b5c 00005b5c 00005b5c     pZ..\[..\[..\[..
    6c08:	00005b5c 00005b5c 00005b5c 0000578e     \[..\[..\[...W..
    6c18:	00005bc2 00005b5c 000057a4 00005b82     .[..\[...W...[..
    6c28:	00005b5c 00005b7a 00005b2a 00005b2a     \[..z[..*[..*[..
    6c38:	00005b2a 00005b2a 00005b2a 00005b2a     *[..*[..*[..*[..
    6c48:	00005b2a 00005b2a 00005b2a 00005b5c     *[..*[..*[..\[..
    6c58:	00005b5c 00005b5c 00005b5c 00005b5c     \[..\[..\[..\[..
    6c68:	00005b5c 00005b5c 00005b5c 00005b5c     \[..\[..\[..\[..
    6c78:	00005b5c 00005ad6 00005b5c 00005b5c     \[...Z..\[..\[..
    6c88:	00005b5c 00005b5c 00005b5c 00005b5c     \[..\[..\[..\[..
    6c98:	00005b5c 00005b5c 00005b5c 00005b5c     \[..\[..\[..\[..
    6ca8:	00005764 00005b5c 00005b5c 00005b5c     dW..\[..\[..\[..
    6cb8:	00005b5c 00005b5c 00005738 00005b5c     \[..\[..8W..\[..
    6cc8:	00005b5c 0000597c 00005b5c 00005b5c     \[..|Y..\[..\[..
    6cd8:	00005b5c 00005b5c 00005b5c 00005b5c     \[..\[..\[..\[..
    6ce8:	00005b5c 00005b5c 00005b5c 00005b5c     \[..\[..\[..\[..
    6cf8:	000058b4 00005820 00005b5c 00005b5c     .X.. X..\[..\[..
    6d08:	00005b5c 00005818 00005820 00005b5c     \[...X.. X..\[..
    6d18:	00005b5c 00005a62 00005b5c 000059c6     \[..bZ..\[...Y..
    6d28:	00005768 000059f0 00005810 00005b5c     hW...Y...X..\[..
    6d38:	000057ac 00005b5c 0000573c 00005b5c     .W..\[..<W..\[..
    6d48:	00005b5c 00005a98 33323130 37363534     \[...Z..01234567
    6d58:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    6d68:	37363534 62613938 66656463 00000000     456789abcdef....
    6d78:	6c756e28 0000296c                       (null)..

00006d80 <blanks.7203>:
    6d80:	20202020 20202020 20202020 20202020                     

00006d90 <zeroes.7204>:
    6d90:	30303030 30303030 30303030 30303030     0000000000000000

00006da0 <_init>:
    6da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6da2:	46c0      	nop			; (mov r8, r8)
    6da4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    6da6:	bc08      	pop	{r3}
    6da8:	469e      	mov	lr, r3
    6daa:	4770      	bx	lr

00006dac <__init_array_start>:
    6dac:	00004c6d 	.word	0x00004c6d

00006db0 <__frame_dummy_init_array_entry>:
    6db0:	000000dd                                ....

00006db4 <_fini>:
    6db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6db6:	46c0      	nop			; (mov r8, r8)
    6db8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    6dba:	bc08      	pop	{r3}
    6dbc:	469e      	mov	lr, r3
    6dbe:	4770      	bx	lr

00006dc0 <__fini_array_start>:
    6dc0:	000000b5 	.word	0x000000b5
